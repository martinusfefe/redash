{"version":3,"file":"JsonViewInteractive.js","names":["isFinite","isString","isArray","isObject","keys","map","React","useState","cx","JsonBlock","_ref","value","children","openingBrace","closingBrace","withKeys","_useState","_useState2","_slicedToArray","isExpanded","setIsExpanded","objectKeys","count","length","createElement","Fragment","className","onClick","key","index","isFirst","isLast","comma","JsonValue","_ref2","JsonViewInteractive","_ref3","defaultProps","undefined"],"sources":["../../../src/components/json-view-interactive/JsonViewInteractive.tsx"],"sourcesContent":["/* eslint-disable react/prop-types */\n\nimport { isFinite, isString, isArray, isObject, keys, map } from \"lodash\";\nimport React, { useState } from \"react\";\nimport cx from \"classnames\";\n\nimport \"./json-view-interactive.less\";\n\nfunction JsonBlock({ value, children, openingBrace, closingBrace, withKeys }: any) {\n  const [isExpanded, setIsExpanded] = useState(false);\n\n  const objectKeys = keys(value);\n  const count = objectKeys.length;\n\n  return (\n    <React.Fragment>\n      {count > 0 && (\n        <span className=\"jvi-toggle\" onClick={() => setIsExpanded(!isExpanded)}>\n          <i className={cx(\"fa\", { \"fa-caret-right\": !isExpanded, \"fa-caret-down\": isExpanded })} />\n        </span>\n      )}\n      <span className=\"jvi-punctuation jvi-braces\">{openingBrace}</span>\n      {!isExpanded && count > 0 && (\n        <span className=\"jvi-punctuation jvi-ellipsis\" onClick={() => setIsExpanded(true)}>\n          &hellip;\n        </span>\n      )}\n      {isExpanded && (\n        <span className=\"jvi-block\">\n          {map(objectKeys, (key, index) => {\n            const isFirst = index === 0;\n            const isLast = index === count - 1;\n            const comma = isLast ? null : <span className=\"jvi-punctuation jvi-comma\">,</span>;\n            return (\n              <span\n                key={\"item-\" + key}\n                className={cx(\"jvi-item\", { \"jvi-nested-first\": isFirst, \"jvi-nested-last\": isLast })}>\n                {withKeys && (\n                  <span className=\"jvi-object-key\">\n                    <JsonValue value={key}>\n                      <span className=\"jvi-punctuation\">: </span>\n                    </JsonValue>\n                  </span>\n                )}\n                <JsonValue value={value[key]}>{comma}</JsonValue>\n              </span>\n            );\n          })}\n        </span>\n      )}\n      <span className=\"jvi-punctuation jvi-braces\">{closingBrace}</span>\n      {children}\n      {!isExpanded && <span className=\"jvi-comment\">{\" // \" + count + \" \" + (count === 1 ? \"item\" : \"items\")}</span>}\n    </React.Fragment>\n  );\n}\n\nfunction JsonValue({ value, children }: any) {\n  if (value === null || value === false || value === true || isFinite(value)) {\n    return (\n      <span className=\"jvi-value jvi-primitive\">\n        {\"\" + value}\n        {children}\n      </span>\n    );\n  }\n  if (isString(value)) {\n    return (\n      <React.Fragment>\n        <span className=\"jvi-punctuation jvi-string\">&quot;</span>\n        <span className=\"jvi-value jvi-string\">{value}</span>\n        <span className=\"jvi-punctuation jvi-string\">&quot;</span>\n        {children}\n      </React.Fragment>\n    );\n  }\n  if (isArray(value)) {\n    return (\n      <JsonBlock value={value} openingBrace=\"[\" closingBrace=\"]\">\n        {children}\n      </JsonBlock>\n    );\n  }\n  if (isObject(value)) {\n    return (\n      <JsonBlock value={value} openingBrace=\"{\" closingBrace=\"}\" withKeys>\n        {children}\n      </JsonBlock>\n    );\n  }\n  return null;\n}\n\ntype OwnJsonViewInteractiveProps = {\n  value?: any;\n};\n\ntype JsonViewInteractiveProps = OwnJsonViewInteractiveProps & typeof JsonViewInteractive.defaultProps;\n\nexport default function JsonViewInteractive({ value }: JsonViewInteractiveProps) {\n  return (\n    <span className=\"jvi-item jvi-root\">\n      <JsonValue value={value} />\n    </span>\n  );\n}\n\nJsonViewInteractive.defaultProps = {\n  // `null` will be rendered as \"null\" because it is a valid JSON value, so use `undefined` for no value\n  value: undefined,\n};\n"],"mappings":"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"}