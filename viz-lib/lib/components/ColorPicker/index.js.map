{"version":3,"file":"index.js","names":["_lodash","require","_react","_interopRequireWildcard","_classnames","_interopRequireDefault","_popover","_card","_tooltip","_chooseTextColorForBackground","_CloseOutlined","_CheckOutlined","_Input","_Swatch","_Label","_utils","obj","__esModule","default","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_extends","assign","bind","target","i","arguments","length","source","apply","_slicedToArray","arr","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","TypeError","o","minLen","_arrayLikeToArray","n","toString","slice","constructor","name","Array","from","test","len","arr2","_i","Symbol","iterator","_s","_e","_x","_r","_arr","_n","_d","next","done","push","value","err","return","isArray","ColorPicker","_ref","color","placement","presetColors","presetColumns","interactive","children","onChange","triggerProps","addonBefore","addonAfter","_useState","useState","_useState2","visible","setVisible","validatedColor","useMemo","validateColor","_useState3","_useState4","currentColor","setCurrentColor","handleApply","handleCancel","actions","createElement","title","onClick","handleInputChange","newColor","useEffect","className","arrowPointAtCenter","overlayClassName","concat","overlayStyle","content","bordered","toUpperCase","headStyle","backgroundColor","chooseTextColorForBackground","onPressEnter","trigger","onVisibleChange","size","cx","defaultProps","Input","ColorInput","Swatch","Label"],"sources":["../../../src/components/ColorPicker/index.tsx"],"sourcesContent":["import { toString } from \"lodash\";\nimport React, { useState, useEffect, useMemo } from \"react\";\nimport cx from \"classnames\";\nimport Popover from \"antd/lib/popover\";\nimport Card from \"antd/lib/card\";\nimport Tooltip from \"antd/lib/tooltip\";\nimport chooseTextColorForBackground from \"@/lib/chooseTextColorForBackground\";\n\nimport CloseOutlinedIcon from \"@ant-design/icons/CloseOutlined\";\nimport CheckOutlinedIcon from \"@ant-design/icons/CheckOutlined\";\n\nimport ColorInput from \"./Input\";\nimport Swatch from \"./Swatch\";\nimport Label from \"./Label\";\nimport { validateColor } from \"./utils\";\n\nimport \"./index.less\";\n\ntype OwnProps = {\n  color?: string;\n  placement?:\n    | \"top\"\n    | \"left\"\n    | \"right\"\n    | \"bottom\"\n    | \"topLeft\"\n    | \"topRight\"\n    | \"bottomLeft\"\n    | \"bottomRight\"\n    | \"leftTop\"\n    | \"leftBottom\"\n    | \"rightTop\"\n    | \"rightBottom\";\n  presetColors?:\n    | string[]\n    | {\n        [key: string]: string;\n      };\n  presetColumns?: number;\n  interactive?: boolean;\n  triggerProps?: any;\n  children?: React.ReactNode;\n  addonBefore?: React.ReactNode;\n  addonAfter?: React.ReactNode;\n  onChange?: (...args: any[]) => any;\n};\n\ntype Props = OwnProps & typeof ColorPicker.defaultProps;\n\nexport default function ColorPicker({\n  color,\n  placement,\n  presetColors,\n  presetColumns,\n  interactive,\n  children,\n  onChange,\n  triggerProps,\n  addonBefore,\n  addonAfter,\n}: Props) {\n  const [visible, setVisible] = useState(false);\n  const validatedColor = useMemo(() => validateColor(color), [color]);\n  const [currentColor, setCurrentColor] = useState(\"\");\n\n  function handleApply() {\n    setVisible(false);\n    if (!interactive) {\n      // @ts-expect-error ts-migrate(2349) FIXME: This expression is not callable.\n      onChange(currentColor);\n    }\n  }\n\n  function handleCancel() {\n    setVisible(false);\n  }\n\n  const actions = [];\n  if (!interactive) {\n    actions.push(\n      <Tooltip key=\"cancel\" title=\"Cancel\">\n        <CloseOutlinedIcon onClick={handleCancel} />\n      </Tooltip>\n    );\n    actions.push(\n      <Tooltip key=\"apply\" title=\"Apply\">\n        <CheckOutlinedIcon onClick={handleApply} />\n      </Tooltip>\n    );\n  }\n\n  function handleInputChange(newColor: any) {\n    setCurrentColor(newColor);\n    if (interactive) {\n      // @ts-expect-error ts-migrate(2349) FIXME: This expression is not callable.\n      onChange(newColor);\n    }\n  }\n\n  useEffect(() => {\n    if (visible) {\n      // @ts-expect-error ts-migrate(2345) FIXME: Argument of type 'string | null' is not assignable... Remove this comment to see the full error message\n      setCurrentColor(validatedColor);\n    }\n  }, [validatedColor, visible]);\n\n  return (\n    <span className=\"color-picker-wrapper\">\n      {addonBefore}\n      <Popover\n        arrowPointAtCenter\n        overlayClassName={`color-picker ${interactive ? \"color-picker-interactive\" : \"color-picker-with-actions\"}`}\n        // @ts-expect-error ts-migrate(2322) FIXME: Type '{ \"--color-picker-selected-color\": string; }... Remove this comment to see the full error message\n        overlayStyle={{ \"--color-picker-selected-color\": currentColor }}\n        content={\n          <Card\n            data-test=\"ColorPicker\"\n            className=\"color-picker-panel\"\n            bordered={false}\n            title={toString(currentColor).toUpperCase()}\n            headStyle={{\n              backgroundColor: currentColor,\n              // @ts-expect-error ts-migrate(2322) FIXME: Type 'string | null | undefined' is not assignable... Remove this comment to see the full error message\n              color: chooseTextColorForBackground(currentColor),\n            }}\n            actions={actions}>\n            <ColorInput\n              // @ts-expect-error ts-migrate(2322) FIXME: Type 'string' is not assignable to type 'never'.\n              color={currentColor}\n              presetColors={presetColors}\n              presetColumns={presetColumns}\n              // @ts-expect-error ts-migrate(2322) FIXME: Type '(newColor: any) => void' is not assignable t... Remove this comment to see the full error message\n              onChange={handleInputChange}\n              // @ts-expect-error ts-migrate(2322) FIXME: Type '() => void' is not assignable to type 'never... Remove this comment to see the full error message\n              onPressEnter={handleApply}\n            />\n          </Card>\n        }\n        trigger=\"click\"\n        placement={placement}\n        visible={visible}\n        onVisibleChange={setVisible}>\n        {children || (\n          <Swatch\n            color={validatedColor}\n            size={30}\n            {...triggerProps}\n            // @ts-expect-error ts-migrate(2339) FIXME: Property 'className' does not exist on type 'never... Remove this comment to see the full error message\n            className={cx(\"color-picker-trigger\", triggerProps.className)}\n          />\n        )}\n      </Popover>\n      {addonAfter}\n    </span>\n  );\n}\n\nColorPicker.defaultProps = {\n  color: \"#FFFFFF\",\n  placement: \"top\",\n  presetColors: null,\n  presetColumns: 8,\n  interactive: false,\n  triggerProps: {},\n  children: null,\n  addonBefore: null,\n  addonAfter: null,\n  onChange: () => {},\n};\n\nColorPicker.Input = ColorInput;\nColorPicker.Swatch = Swatch;\nColorPicker.Label = Label;\n"],"mappings":"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"}