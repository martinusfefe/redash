{"version":3,"file":"image.js","names":["_lodash","require","_react","_interopRequireDefault","_useDebounce","_editor","_valueFormat","_excluded","obj","__esModule","default","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","indexOf","propertyIsEnumerable","sourceKeys","keys","_slicedToArray","arr","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","TypeError","o","minLen","_arrayLikeToArray","n","toString","slice","constructor","name","Array","from","test","len","arr2","_i","Symbol","iterator","_s","_e","_x","_r","_arr","_n","_d","next","done","push","value","err","return","isArray","Editor","_ref","column","onChange","_useDebouncedCallback","useDebouncedCallback","_useDebouncedCallback2","onChangeDebounced","createElement","Fragment","Section","Input","label","defaultValue","imageUrlTemplate","event","ControlLabel","ContextHelp","placement","arrowPointAtCenter","style","marginBottom","className","placeholder","imageWidth","imageHeight","imageTitleTemplate","icon","cursor","defaultIcon","initImageColumn","prepareData","row","extend","src","trim","formatSimpleTemplate","width","parseInt","height","title","result","Number","isFinite","text","alt","ImageColumn","_ref2","_prepareData","props","friendlyName"],"sources":["../../../../src/visualizations/table/columns/image.tsx"],"sourcesContent":["import { extend, trim } from \"lodash\";\nimport React from \"react\";\nimport { useDebouncedCallback } from \"use-debounce\";\nimport { Section, Input, ControlLabel, ContextHelp } from \"@/components/visualizations/editor\";\nimport { formatSimpleTemplate } from \"@/lib/value-format\";\n\ntype Props = {\n  column: {\n    name: string;\n    imageUrlTemplate?: string;\n    imageWidth?: string;\n    imageHeight?: string;\n    imageTitleTemplate?: string;\n  };\n  onChange: (...args: any[]) => any;\n};\n\nfunction Editor({ column, onChange }: Props) {\n  const [onChangeDebounced] = useDebouncedCallback(onChange, 200);\n\n  return (\n    <React.Fragment>\n      {/* @ts-expect-error ts-migrate(2745) FIXME: This JSX tag's 'children' prop expects type 'never... Remove this comment to see the full error message */}\n      <Section>\n        <Input\n          label=\"URL template\"\n          data-test=\"Table.ColumnEditor.Image.UrlTemplate\"\n          defaultValue={column.imageUrlTemplate}\n          onChange={(event: any) => onChangeDebounced({ imageUrlTemplate: event.target.value })}\n        />\n      </Section>\n\n      {/* @ts-expect-error ts-migrate(2745) FIXME: This JSX tag's 'children' prop expects type 'never... Remove this comment to see the full error message */}\n      <Section>\n        <ControlLabel\n          // @ts-expect-error ts-migrate(2322) FIXME: Type 'Element' is not assignable to type 'null | u... Remove this comment to see the full error message\n          label={\n            <React.Fragment>\n              Size\n              {/* @ts-expect-error ts-migrate(2746) FIXME: This JSX tag's 'children' prop expects a single ch... Remove this comment to see the full error message */}\n              <ContextHelp placement=\"topLeft\" arrowPointAtCenter>\n                <div style={{ marginBottom: 5 }}>Any positive integer value that specifies size in pixels.</div>\n                <div>Leave empty to use default value.</div>\n              </ContextHelp>\n            </React.Fragment>\n          }>\n          {/* @ts-expect-error ts-migrate(2322) FIXME: Type 'Element' is not assignable to type 'null | u... Remove this comment to see the full error message */}\n          <div className=\"image-dimension-selector\">\n            <Input\n              data-test=\"Table.ColumnEditor.Image.Width\"\n              placeholder=\"Width\"\n              defaultValue={column.imageWidth}\n              onChange={(event: any) => onChangeDebounced({ imageWidth: event.target.value })}\n            />\n            <span className=\"image-dimension-selector-spacer\">&times;</span>\n            <Input\n              data-test=\"Table.ColumnEditor.Image.Height\"\n              placeholder=\"Height\"\n              defaultValue={column.imageHeight}\n              onChange={(event: any) => onChangeDebounced({ imageHeight: event.target.value })}\n            />\n          </div>\n        </ControlLabel>\n      </Section>\n\n      {/* @ts-expect-error ts-migrate(2745) FIXME: This JSX tag's 'children' prop expects type 'never... Remove this comment to see the full error message */}\n      <Section>\n        <Input\n          label=\"Title template\"\n          data-test=\"Table.ColumnEditor.Image.TitleTemplate\"\n          defaultValue={column.imageTitleTemplate}\n          onChange={(event: any) => onChangeDebounced({ imageTitleTemplate: event.target.value })}\n        />\n      </Section>\n\n      {/* @ts-expect-error ts-migrate(2745) FIXME: This JSX tag's 'children' prop expects type 'never... Remove this comment to see the full error message */}\n      <Section>\n        {/* @ts-expect-error ts-migrate(2746) FIXME: This JSX tag's 'children' prop expects a single ch... Remove this comment to see the full error message */}\n        <ContextHelp\n          placement=\"topLeft\"\n          arrowPointAtCenter\n          // @ts-expect-error ts-migrate(2322) FIXME: Type 'Element' is not assignable to type 'null | u... Remove this comment to see the full error message\n          icon={<span style={{ cursor: \"default\" }}>Format specs {ContextHelp.defaultIcon}</span>}>\n          <div>\n            All columns can be referenced using <code>{\"{{ column_name }}\"}</code> syntax.\n          </div>\n          <div>\n            Use <code>{\"{{ @ }}\"}</code> to reference current (this) column.\n          </div>\n          <div>This syntax is applicable to URL, Title and Size options.</div>\n        </ContextHelp>\n      </Section>\n    </React.Fragment>\n  );\n}\n\nexport default function initImageColumn(column: any) {\n  function prepareData(row: any) {\n    row = extend({ \"@\": row[column.name] }, row);\n\n    const src = trim(formatSimpleTemplate(column.imageUrlTemplate, row));\n    if (src === \"\") {\n      return {};\n    }\n\n    const width = parseInt(formatSimpleTemplate(column.imageWidth, row), 10);\n    const height = parseInt(formatSimpleTemplate(column.imageHeight, row), 10);\n    const title = trim(formatSimpleTemplate(column.imageTitleTemplate, row));\n\n    const result = { src };\n\n    if (Number.isFinite(width) && width > 0) {\n      // @ts-expect-error ts-migrate(2339) FIXME: Property 'width' does not exist on type '{ src: st... Remove this comment to see the full error message\n      result.width = width;\n    }\n    if (Number.isFinite(height) && height > 0) {\n      // @ts-expect-error ts-migrate(2339) FIXME: Property 'height' does not exist on type '{ src: s... Remove this comment to see the full error message\n      result.height = height;\n    }\n    if (title !== \"\") {\n      // @ts-expect-error ts-migrate(2339) FIXME: Property 'text' does not exist on type '{ src: str... Remove this comment to see the full error message\n      result.text = title; // `text` is used for search\n      // @ts-expect-error ts-migrate(2339) FIXME: Property 'title' does not exist on type '{ src: st... Remove this comment to see the full error message\n      result.title = title;\n      // @ts-expect-error ts-migrate(2339) FIXME: Property 'alt' does not exist on type '{ src: stri... Remove this comment to see the full error message\n      result.alt = title;\n    }\n\n    return result;\n  }\n\n  function ImageColumn({ row }: any) {\n    // @ts-expect-error ts-migrate(2339) FIXME: Property 'text' does not exist on type '{}'.\n    // eslint-disable-line react/prop-types\n    const { text, ...props } = prepareData(row);\n    return <img alt=\"\" {...props} />;\n  }\n\n  ImageColumn.prepareData = prepareData;\n\n  return ImageColumn;\n}\n\ninitImageColumn.friendlyName = \"Image\";\ninitImageColumn.Editor = Editor;\n"],"mappings":"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"}