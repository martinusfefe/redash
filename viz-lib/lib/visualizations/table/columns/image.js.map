{"version":3,"file":"image.js","names":["extend","trim","React","useDebouncedCallback","Section","Input","ControlLabel","ContextHelp","formatSimpleTemplate","Editor","_ref","column","onChange","_useDebouncedCallback","_useDebouncedCallback2","_slicedToArray","onChangeDebounced","createElement","Fragment","label","defaultValue","imageUrlTemplate","event","target","value","placement","arrowPointAtCenter","style","marginBottom","className","placeholder","imageWidth","imageHeight","imageTitleTemplate","icon","cursor","defaultIcon","initImageColumn","prepareData","row","name","src","width","parseInt","height","title","result","Number","isFinite","text","alt","ImageColumn","_ref2","_prepareData","props","_objectWithoutProperties","_excluded","_extends","friendlyName"],"sources":["../../../../src/visualizations/table/columns/image.tsx"],"sourcesContent":["import { extend, trim } from \"lodash\";\nimport React from \"react\";\nimport { useDebouncedCallback } from \"use-debounce\";\nimport { Section, Input, ControlLabel, ContextHelp } from \"@/components/visualizations/editor\";\nimport { formatSimpleTemplate } from \"@/lib/value-format\";\n\ntype Props = {\n  column: {\n    name: string;\n    imageUrlTemplate?: string;\n    imageWidth?: string;\n    imageHeight?: string;\n    imageTitleTemplate?: string;\n  };\n  onChange: (...args: any[]) => any;\n};\n\nfunction Editor({ column, onChange }: Props) {\n  const [onChangeDebounced] = useDebouncedCallback(onChange, 200);\n\n  return (\n    <React.Fragment>\n      {/* @ts-expect-error ts-migrate(2745) FIXME: This JSX tag's 'children' prop expects type 'never... Remove this comment to see the full error message */}\n      <Section>\n        <Input\n          label=\"URL template\"\n          data-test=\"Table.ColumnEditor.Image.UrlTemplate\"\n          defaultValue={column.imageUrlTemplate}\n          onChange={(event: any) => onChangeDebounced({ imageUrlTemplate: event.target.value })}\n        />\n      </Section>\n\n      {/* @ts-expect-error ts-migrate(2745) FIXME: This JSX tag's 'children' prop expects type 'never... Remove this comment to see the full error message */}\n      <Section>\n        <ControlLabel\n          // @ts-expect-error ts-migrate(2322) FIXME: Type 'Element' is not assignable to type 'null | u... Remove this comment to see the full error message\n          label={\n            <React.Fragment>\n              Size\n              {/* @ts-expect-error ts-migrate(2746) FIXME: This JSX tag's 'children' prop expects a single ch... Remove this comment to see the full error message */}\n              <ContextHelp placement=\"topLeft\" arrowPointAtCenter>\n                <div style={{ marginBottom: 5 }}>Any positive integer value that specifies size in pixels.</div>\n                <div>Leave empty to use default value.</div>\n              </ContextHelp>\n            </React.Fragment>\n          }>\n          {/* @ts-expect-error ts-migrate(2322) FIXME: Type 'Element' is not assignable to type 'null | u... Remove this comment to see the full error message */}\n          <div className=\"image-dimension-selector\">\n            <Input\n              data-test=\"Table.ColumnEditor.Image.Width\"\n              placeholder=\"Width\"\n              defaultValue={column.imageWidth}\n              onChange={(event: any) => onChangeDebounced({ imageWidth: event.target.value })}\n            />\n            <span className=\"image-dimension-selector-spacer\">&times;</span>\n            <Input\n              data-test=\"Table.ColumnEditor.Image.Height\"\n              placeholder=\"Height\"\n              defaultValue={column.imageHeight}\n              onChange={(event: any) => onChangeDebounced({ imageHeight: event.target.value })}\n            />\n          </div>\n        </ControlLabel>\n      </Section>\n\n      {/* @ts-expect-error ts-migrate(2745) FIXME: This JSX tag's 'children' prop expects type 'never... Remove this comment to see the full error message */}\n      <Section>\n        <Input\n          label=\"Title template\"\n          data-test=\"Table.ColumnEditor.Image.TitleTemplate\"\n          defaultValue={column.imageTitleTemplate}\n          onChange={(event: any) => onChangeDebounced({ imageTitleTemplate: event.target.value })}\n        />\n      </Section>\n\n      {/* @ts-expect-error ts-migrate(2745) FIXME: This JSX tag's 'children' prop expects type 'never... Remove this comment to see the full error message */}\n      <Section>\n        {/* @ts-expect-error ts-migrate(2746) FIXME: This JSX tag's 'children' prop expects a single ch... Remove this comment to see the full error message */}\n        <ContextHelp\n          placement=\"topLeft\"\n          arrowPointAtCenter\n          // @ts-expect-error ts-migrate(2322) FIXME: Type 'Element' is not assignable to type 'null | u... Remove this comment to see the full error message\n          icon={<span style={{ cursor: \"default\" }}>Format specs {ContextHelp.defaultIcon}</span>}>\n          <div>\n            All columns can be referenced using <code>{\"{{ column_name }}\"}</code> syntax.\n          </div>\n          <div>\n            Use <code>{\"{{ @ }}\"}</code> to reference current (this) column.\n          </div>\n          <div>This syntax is applicable to URL, Title and Size options.</div>\n        </ContextHelp>\n      </Section>\n    </React.Fragment>\n  );\n}\n\nexport default function initImageColumn(column: any) {\n  function prepareData(row: any) {\n    row = extend({ \"@\": row[column.name] }, row);\n\n    const src = trim(formatSimpleTemplate(column.imageUrlTemplate, row));\n    if (src === \"\") {\n      return {};\n    }\n\n    const width = parseInt(formatSimpleTemplate(column.imageWidth, row), 10);\n    const height = parseInt(formatSimpleTemplate(column.imageHeight, row), 10);\n    const title = trim(formatSimpleTemplate(column.imageTitleTemplate, row));\n\n    const result = { src };\n\n    if (Number.isFinite(width) && width > 0) {\n      // @ts-expect-error ts-migrate(2339) FIXME: Property 'width' does not exist on type '{ src: st... Remove this comment to see the full error message\n      result.width = width;\n    }\n    if (Number.isFinite(height) && height > 0) {\n      // @ts-expect-error ts-migrate(2339) FIXME: Property 'height' does not exist on type '{ src: s... Remove this comment to see the full error message\n      result.height = height;\n    }\n    if (title !== \"\") {\n      // @ts-expect-error ts-migrate(2339) FIXME: Property 'text' does not exist on type '{ src: str... Remove this comment to see the full error message\n      result.text = title; // `text` is used for search\n      // @ts-expect-error ts-migrate(2339) FIXME: Property 'title' does not exist on type '{ src: st... Remove this comment to see the full error message\n      result.title = title;\n      // @ts-expect-error ts-migrate(2339) FIXME: Property 'alt' does not exist on type '{ src: stri... Remove this comment to see the full error message\n      result.alt = title;\n    }\n\n    return result;\n  }\n\n  function ImageColumn({ row }: any) {\n    // @ts-expect-error ts-migrate(2339) FIXME: Property 'text' does not exist on type '{}'.\n    // eslint-disable-line react/prop-types\n    const { text, ...props } = prepareData(row);\n    return <img alt=\"\" {...props} />;\n  }\n\n  ImageColumn.prepareData = prepareData;\n\n  return ImageColumn;\n}\n\ninitImageColumn.friendlyName = \"Image\";\ninitImageColumn.Editor = Editor;\n"],"mappings":"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"}