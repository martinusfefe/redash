{"version":3,"file":"Renderer.js","names":["filter","map","get","initial","last","reduce","React","useMemo","useState","useEffect","Table","Input","InfoCircleFilledIcon","Popover","RendererPropTypes","prepareColumns","initRows","filterRows","sortRows","joinColumns","array","separator","arguments","length","undefined","result","item","index","push","getSearchColumns","columns","_ref","_ref$limit","limit","Infinity","_ref$renderColumn","renderColumn","col","title","firstColumns","slice","restColumns","concat","SearchInputInfoIcon","_ref2","searchColumns","createElement","arrowPointAtCenter","placement","content","className","key","name","SearchInput","_ref3","props","_objectWithoutProperties","_excluded","searchColumnsLimit","Search","_extends","placeholder","join","suffix","defaultProps","onChange","Renderer","_ref4","options","data","_useState","_useState2","_slicedToArray","searchTerm","setSearchTerm","_useState3","_useState4","orderBy","setOrderBy","tableColumns","searchInput","event","target","value","newOrderBy","document","getSelection","removeAllRanges","preparedRows","rows","dataSource","pagination","size","position","pageSize","itemsPerPage","hideOnSinglePage","showSizeChanger","showSorterTooltip","propTypes"],"sources":["../../../src/visualizations/table/Renderer.tsx"],"sourcesContent":["import { filter, map, get, initial, last, reduce } from \"lodash\";\nimport React, { useMemo, useState, useEffect } from \"react\";\nimport Table from \"antd/lib/table\";\nimport Input from \"antd/lib/input\";\nimport InfoCircleFilledIcon from \"@ant-design/icons/InfoCircleFilled\";\nimport Popover from \"antd/lib/popover\";\nimport { RendererPropTypes } from \"@/visualizations/prop-types\";\n\nimport { prepareColumns, initRows, filterRows, sortRows } from \"./utils\";\n\nimport \"./renderer.less\";\n\nfunction joinColumns(array: any, separator = \", \") {\n  return reduce(\n    array,\n    (result, item, index) => {\n      // @ts-expect-error ts-migrate(2365) FIXME: Operator '>' cannot be applied to types 'string' a... Remove this comment to see the full error message\n      if (index > 0) {\n        // @ts-expect-error ts-migrate(2345) FIXME: Argument of type 'string' is not assignable to par... Remove this comment to see the full error message\n        result.push(separator);\n      }\n      // @ts-expect-error ts-migrate(2345) FIXME: Argument of type 'any' is not assignable to parame... Remove this comment to see the full error message\n      result.push(item);\n      return result;\n    },\n    []\n  );\n}\n\nfunction getSearchColumns(columns: any, { limit = Infinity, renderColumn = (col: any) => col.title } = {}) {\n  const firstColumns = map(columns.slice(0, limit), col => renderColumn(col));\n  const restColumns = map(columns.slice(limit), col => col.title);\n  if (restColumns.length > 0) {\n    return [...joinColumns(firstColumns), ` and ${restColumns.length} others`];\n  }\n  if (firstColumns.length > 1) {\n    return [...joinColumns(initial(firstColumns)), ` and `, last(firstColumns)];\n  }\n  return firstColumns;\n}\n\nfunction SearchInputInfoIcon({ searchColumns }: any) {\n  return (\n    <Popover\n      arrowPointAtCenter\n      placement=\"topRight\"\n      content={\n        <div className=\"table-visualization-search-info-content\">\n          Search {getSearchColumns(searchColumns, { renderColumn: col => <code key={col.name}>{col.title}</code> })}\n        </div>\n      }>\n      <InfoCircleFilledIcon className=\"table-visualization-search-info-icon\" />\n    </Popover>\n  );\n}\n\ntype OwnSearchInputProps = {\n  onChange?: (...args: any[]) => any;\n};\n\ntype SearchInputProps = OwnSearchInputProps & typeof SearchInput.defaultProps;\n\n// @ts-expect-error ts-migrate(2339) FIXME: Property 'searchColumns' does not exist on type 'S... Remove this comment to see the full error message\nfunction SearchInput({ searchColumns, ...props }: SearchInputProps) {\n  if (searchColumns.length <= 0) {\n    return null;\n  }\n\n  const searchColumnsLimit = 3;\n  return (\n    <Input.Search\n      {...props}\n      placeholder={`Search ${getSearchColumns(searchColumns, { limit: searchColumnsLimit }).join(\"\")}...`}\n      suffix={searchColumns.length > searchColumnsLimit ? <SearchInputInfoIcon searchColumns={searchColumns} /> : null}\n    />\n  );\n}\n\nSearchInput.defaultProps = {\n  onChange: () => {},\n};\n\nexport default function Renderer({ options, data }: any) {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [orderBy, setOrderBy] = useState([]);\n\n  const searchColumns = useMemo(() => filter(options.columns, \"allowSearch\"), [options.columns]);\n\n  const tableColumns = useMemo(() => {\n    const searchInput =\n      searchColumns.length > 0 ? (\n        // @ts-expect-error ts-migrate(2322) FIXME: Type '(event: any) => void' is not assignable to t... Remove this comment to see the full error message\n        <SearchInput searchColumns={searchColumns} onChange={(event: any) => setSearchTerm(event.target.value)} />\n      ) : null;\n    return prepareColumns(options.columns, searchInput, orderBy, (newOrderBy: any) => {\n      setOrderBy(newOrderBy);\n      // Remove text selection - may occur accidentally\n      // @ts-expect-error ts-migrate(2531) FIXME: Object is possibly 'null'.\n      document.getSelection().removeAllRanges();\n    });\n  }, [options.columns, searchColumns, orderBy]);\n\n  const preparedRows = useMemo(() => sortRows(filterRows(initRows(data.rows), searchTerm, searchColumns), orderBy), [\n    data.rows,\n    searchTerm,\n    searchColumns,\n    orderBy,\n  ]);\n\n  // If data or config columns change - reset sorting\n  useEffect(() => {\n    setOrderBy([]);\n  }, [options.columns, data.columns]);\n\n  if (data.rows.length === 0) {\n    return null;\n  }\n\n  return (\n    <div className=\"table-visualization-container\">\n      <Table\n        className=\"table-fixed-header\"\n        data-percy=\"show-scrollbars\"\n        data-test=\"TableVisualization\"\n        // @ts-expect-error ts-migrate(2322) FIXME: Type '{ key: any; dataIndex: string; align: any; s... Remove this comment to see the full error message\n        columns={tableColumns}\n        dataSource={preparedRows}\n        pagination={{\n          size: get(options, \"paginationSize\", \"\"),\n          // @ts-expect-error ts-migrate(2322) FIXME: Type 'string' is not assignable to type 'TablePagi... Remove this comment to see the full error message\n          position: \"bottom\",\n          pageSize: options.itemsPerPage,\n          hideOnSinglePage: true,\n          showSizeChanger: false,\n        }}\n        showSorterTooltip={false}\n      />\n    </div>\n  );\n}\n\nRenderer.propTypes = RendererPropTypes;\n"],"mappings":"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"}