{"version":3,"file":"Renderer.js","names":["_lodash","require","_react","_interopRequireWildcard","_table","_interopRequireDefault","_input","_InfoCircleFilled","_popover","_propTypes","_utils","_excluded","obj","__esModule","default","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_slicedToArray","arr","i","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","TypeError","o","minLen","_arrayLikeToArray","n","toString","slice","constructor","name","Array","from","test","len","length","arr2","_i","Symbol","iterator","_s","_e","_x","_r","_arr","_n","_d","next","done","push","value","err","return","isArray","_extends","assign","bind","target","arguments","source","apply","_objectWithoutProperties","excluded","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","indexOf","propertyIsEnumerable","sourceKeys","keys","joinColumns","array","separator","undefined","reduce","result","item","index","getSearchColumns","columns","_ref","_ref$limit","limit","Infinity","_ref$renderColumn","renderColumn","col","title","firstColumns","map","restColumns","concat","initial","last","SearchInputInfoIcon","_ref2","searchColumns","createElement","arrowPointAtCenter","placement","content","className","SearchInput","_ref3","props","searchColumnsLimit","Search","placeholder","join","suffix","defaultProps","onChange","Renderer","_ref4","options","data","_useState","useState","_useState2","searchTerm","setSearchTerm","_useState3","_useState4","orderBy","setOrderBy","useMemo","filter","tableColumns","searchInput","event","prepareColumns","newOrderBy","document","getSelection","removeAllRanges","preparedRows","sortRows","filterRows","initRows","rows","useEffect","dataSource","pagination","size","position","pageSize","itemsPerPage","hideOnSinglePage","showSizeChanger","showSorterTooltip","propTypes","RendererPropTypes"],"sources":["../../../src/visualizations/table/Renderer.tsx"],"sourcesContent":["import { filter, map, get, initial, last, reduce } from \"lodash\";\nimport React, { useMemo, useState, useEffect } from \"react\";\nimport Table from \"antd/lib/table\";\nimport Input from \"antd/lib/input\";\nimport InfoCircleFilledIcon from \"@ant-design/icons/InfoCircleFilled\";\nimport Popover from \"antd/lib/popover\";\nimport { RendererPropTypes } from \"@/visualizations/prop-types\";\n\nimport { prepareColumns, initRows, filterRows, sortRows } from \"./utils\";\n\nimport \"./renderer.less\";\n\nfunction joinColumns(array: any, separator = \", \") {\n  return reduce(\n    array,\n    (result, item, index) => {\n      // @ts-expect-error ts-migrate(2365) FIXME: Operator '>' cannot be applied to types 'string' a... Remove this comment to see the full error message\n      if (index > 0) {\n        // @ts-expect-error ts-migrate(2345) FIXME: Argument of type 'string' is not assignable to par... Remove this comment to see the full error message\n        result.push(separator);\n      }\n      // @ts-expect-error ts-migrate(2345) FIXME: Argument of type 'any' is not assignable to parame... Remove this comment to see the full error message\n      result.push(item);\n      return result;\n    },\n    []\n  );\n}\n\nfunction getSearchColumns(columns: any, { limit = Infinity, renderColumn = (col: any) => col.title } = {}) {\n  const firstColumns = map(columns.slice(0, limit), col => renderColumn(col));\n  const restColumns = map(columns.slice(limit), col => col.title);\n  if (restColumns.length > 0) {\n    return [...joinColumns(firstColumns), ` and ${restColumns.length} others`];\n  }\n  if (firstColumns.length > 1) {\n    return [...joinColumns(initial(firstColumns)), ` and `, last(firstColumns)];\n  }\n  return firstColumns;\n}\n\nfunction SearchInputInfoIcon({ searchColumns }: any) {\n  return (\n    <Popover\n      arrowPointAtCenter\n      placement=\"topRight\"\n      content={\n        <div className=\"table-visualization-search-info-content\">\n          Search {getSearchColumns(searchColumns, { renderColumn: col => <code key={col.name}>{col.title}</code> })}\n        </div>\n      }>\n      <InfoCircleFilledIcon className=\"table-visualization-search-info-icon\" />\n    </Popover>\n  );\n}\n\ntype OwnSearchInputProps = {\n  onChange?: (...args: any[]) => any;\n};\n\ntype SearchInputProps = OwnSearchInputProps & typeof SearchInput.defaultProps;\n\n// @ts-expect-error ts-migrate(2339) FIXME: Property 'searchColumns' does not exist on type 'S... Remove this comment to see the full error message\nfunction SearchInput({ searchColumns, ...props }: SearchInputProps) {\n  if (searchColumns.length <= 0) {\n    return null;\n  }\n\n  const searchColumnsLimit = 3;\n  return (\n    <Input.Search\n      {...props}\n      placeholder={`Search ${getSearchColumns(searchColumns, { limit: searchColumnsLimit }).join(\"\")}...`}\n      suffix={searchColumns.length > searchColumnsLimit ? <SearchInputInfoIcon searchColumns={searchColumns} /> : null}\n    />\n  );\n}\n\nSearchInput.defaultProps = {\n  onChange: () => {},\n};\n\nexport default function Renderer({ options, data }: any) {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [orderBy, setOrderBy] = useState([]);\n\n  const searchColumns = useMemo(() => filter(options.columns, \"allowSearch\"), [options.columns]);\n\n  const tableColumns = useMemo(() => {\n    const searchInput =\n      searchColumns.length > 0 ? (\n        // @ts-expect-error ts-migrate(2322) FIXME: Type '(event: any) => void' is not assignable to t... Remove this comment to see the full error message\n        <SearchInput searchColumns={searchColumns} onChange={(event: any) => setSearchTerm(event.target.value)} />\n      ) : null;\n    return prepareColumns(options.columns, searchInput, orderBy, (newOrderBy: any) => {\n      setOrderBy(newOrderBy);\n      // Remove text selection - may occur accidentally\n      // @ts-expect-error ts-migrate(2531) FIXME: Object is possibly 'null'.\n      document.getSelection().removeAllRanges();\n    });\n  }, [options.columns, searchColumns, orderBy]);\n\n  const preparedRows = useMemo(() => sortRows(filterRows(initRows(data.rows), searchTerm, searchColumns), orderBy), [\n    data.rows,\n    searchTerm,\n    searchColumns,\n    orderBy,\n  ]);\n\n  // If data or config columns change - reset sorting\n  useEffect(() => {\n    setOrderBy([]);\n  }, [options.columns, data.columns]);\n\n  if (data.rows.length === 0) {\n    return null;\n  }\n\n  return (\n    <div className=\"table-visualization-container\">\n      <Table\n        className=\"table-fixed-header\"\n        data-percy=\"show-scrollbars\"\n        data-test=\"TableVisualization\"\n        // @ts-expect-error ts-migrate(2322) FIXME: Type '{ key: any; dataIndex: string; align: any; s... Remove this comment to see the full error message\n        columns={tableColumns}\n        dataSource={preparedRows}\n        pagination={{\n          size: get(options, \"paginationSize\", \"\"),\n          // @ts-expect-error ts-migrate(2322) FIXME: Type 'string' is not assignable to type 'TablePagi... Remove this comment to see the full error message\n          position: \"bottom\",\n          pageSize: options.itemsPerPage,\n          hideOnSinglePage: true,\n          showSizeChanger: false,\n        }}\n        showSorterTooltip={false}\n      />\n    </div>\n  );\n}\n\nRenderer.propTypes = RendererPropTypes;\n"],"mappings":"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"}