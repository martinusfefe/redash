{"version":3,"file":"utils.js","names":["_lodash","require","_react","_interopRequireDefault","_classnames","_tooltip","_columns","obj","__esModule","default","nextOrderByDirection","direction","toggleOrderBy","columnName","orderBy","arguments","length","undefined","multiColumnSort","index","findIndex","i","name","item","filter","push","getOrderByInfo","result","each","_ref","prepareColumns","columns","searchInput","onOrderByChange","sortBy","isMultiColumnSort","orderByInfo","tableColumns","map","column","isAscend","isDescend","sortColumnIndex","key","dataIndex","concat","JSON","stringify","align","alignContent","sorter","multiple","sortOrder","get","title","createElement","Fragment","description","style","paddingRight","placement","className","onHeaderCell","cx","onClick","event","shiftKey","initColumn","ColumnTypes","displayAs","Component","render","unused","row","children","record","props","initRows","rows","filterRows","searchTerm","searchColumns","toUpperCase","matchFields","_initColumn","prepareData","_prepareData","text","toString","indexOf","some","match","sortRows","directions","ascend","descend","sort","a","b","va","vb","isNil"],"sources":["../../../src/visualizations/table/utils.tsx"],"sourcesContent":["import { isNil, map, get, filter, each, sortBy, some, findIndex, toString } from \"lodash\";\nimport React from \"react\";\nimport cx from \"classnames\";\nimport Tooltip from \"antd/lib/tooltip\";\nimport ColumnTypes from \"./columns\";\n\nfunction nextOrderByDirection(direction: any) {\n  switch (direction) {\n    case \"ascend\":\n      return \"descend\";\n    case \"descend\":\n      return null;\n    default:\n      return \"ascend\";\n  }\n}\n\nfunction toggleOrderBy(columnName: any, orderBy = [], multiColumnSort = false) {\n  // @ts-expect-error ts-migrate(2339) FIXME: Property 'name' does not exist on type 'never'.\n  const index = findIndex(orderBy, i => i.name === columnName);\n  const item = { name: columnName, direction: \"ascend\" };\n  if (index >= 0) {\n    // @ts-expect-error ts-migrate(2322) FIXME: Type 'string | null' is not assignable to type 'st... Remove this comment to see the full error message\n    item.direction = nextOrderByDirection(orderBy[index].direction);\n  }\n\n  if (multiColumnSort) {\n    if (!item.direction) {\n      // @ts-expect-error ts-migrate(2339) FIXME: Property 'name' does not exist on type 'never'.\n      return filter(orderBy, i => i.name !== columnName);\n    }\n    if (index >= 0) {\n      // @ts-expect-error ts-migrate(2322) FIXME: Type '{ name: any; direction: string; }' is not as... Remove this comment to see the full error message\n      orderBy[index] = item;\n    } else {\n      // @ts-expect-error ts-migrate(2345) FIXME: Argument of type '{ name: any; direction: string; ... Remove this comment to see the full error message\n      orderBy.push(item);\n    }\n    return [...orderBy];\n  }\n  return item.direction ? [item] : [];\n}\n\nfunction getOrderByInfo(orderBy: any) {\n  const result = {};\n  each(orderBy, ({ name, direction }, index) => {\n    // @ts-expect-error ts-migrate(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\n    result[name] = { direction, index: index + 1 };\n  });\n  return result;\n}\n\nexport function prepareColumns(columns: any, searchInput: any, orderBy: any, onOrderByChange: any) {\n  columns = filter(columns, \"visible\");\n  columns = sortBy(columns, \"order\");\n\n  const isMultiColumnSort = orderBy.length > 1;\n  const orderByInfo = getOrderByInfo(orderBy);\n\n  let tableColumns = map(columns, column => {\n    // @ts-expect-error ts-migrate(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\n    const isAscend = orderByInfo[column.name] && orderByInfo[column.name].direction === \"ascend\";\n    // @ts-expect-error ts-migrate(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\n    const isDescend = orderByInfo[column.name] && orderByInfo[column.name].direction === \"descend\";\n\n    // @ts-expect-error ts-migrate(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\n    const sortColumnIndex = isMultiColumnSort && orderByInfo[column.name] ? orderByInfo[column.name].index : null;\n\n    const result = {\n      key: column.name,\n      dataIndex: `record[${JSON.stringify(column.name)}]`,\n      align: column.alignContent,\n      sorter: { multiple: 1 }, // using { multiple: 1 } to allow built-in multi-column sort arrows\n      sortOrder: get(orderByInfo, [column.name, \"direction\"], null),\n      title: (\n        <React.Fragment>\n          {column.description && (\n            <span style={{ paddingRight: 5 }}>\n              <Tooltip placement=\"top\" title={column.description}>\n                <div className=\"table-visualization-heading\">\n                  <i className=\"fa fa-info-circle\" aria-hidden=\"true\"></i>\n                </div>\n              </Tooltip>\n            </span>\n          )}\n          <Tooltip placement=\"top\" title={column.title}>\n            <div className=\"table-visualization-heading\" data-sort-column-index={sortColumnIndex}>\n              {column.title}\n            </div>\n          </Tooltip>\n        </React.Fragment>\n      ),\n      onHeaderCell: () => ({\n        className: cx({\n          \"table-visualization-column-is-sorted\": isAscend || isDescend,\n        }),\n        onClick: (event: any) => onOrderByChange(toggleOrderBy(column.name, orderBy, event.shiftKey)),\n      }),\n    };\n\n    // @ts-expect-error ts-migrate(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\n    const initColumn = ColumnTypes[column.displayAs];\n    const Component = initColumn(column);\n    // @ts-expect-error ts-migrate(2339) FIXME: Property 'render' does not exist on type '{ key: a... Remove this comment to see the full error message\n    result.render = (unused: any, row: any) => ({\n      children: <Component row={row.record} />,\n      props: { className: `display-as-${column.displayAs}` },\n    });\n\n    return result;\n  });\n\n  tableColumns.push({\n    key: \"###Redash::Visualizations::Table::Spacer###\",\n    // @ts-expect-error ts-migrate(2322) FIXME: Type 'null' is not assignable to type 'string'.\n    dataIndex: null,\n    // @ts-expect-error ts-migrate(2322) FIXME: Type 'string' is not assignable to type 'Element'.\n    title: \"\",\n    className: \"table-visualization-spacer\",\n    render: () => \"\",\n    // @ts-expect-error ts-migrate(2741) FIXME: Property 'onClick' is missing in type '{ className... Remove this comment to see the full error message\n    onHeaderCell: () => ({ className: \"table-visualization-spacer\" }),\n  });\n\n  if (searchInput) {\n    // Add searchInput as the ColumnGroup for all table columns\n    tableColumns = [\n      {\n        key: \"table-search\",\n        title: searchInput,\n        // @ts-expect-error ts-migrate(2741) FIXME: Property 'onClick' is missing in type '{ className... Remove this comment to see the full error message\n        onHeaderCell: () => ({ className: \"table-visualization-search\" }),\n        children: tableColumns,\n      },\n    ];\n  }\n\n  return tableColumns;\n}\n\nexport function initRows(rows: any) {\n  return map(rows, (record, index) => ({ key: `record${index}`, record }));\n}\n\nexport function filterRows(rows: any, searchTerm: any, searchColumns: any) {\n  if (searchTerm !== \"\" && searchColumns.length > 0) {\n    searchTerm = searchTerm.toUpperCase();\n    const matchFields = map(searchColumns, column => {\n      // @ts-expect-error ts-migrate(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\n      const initColumn = ColumnTypes[column.displayAs];\n      const { prepareData } = initColumn(column);\n      return (row: any) => {\n        const { text } = prepareData(row);\n        return (\n          toString(text)\n            .toUpperCase()\n            .indexOf(searchTerm) >= 0\n        );\n      };\n    });\n\n    return filter(rows, row => some(matchFields, match => match(row.record)));\n  }\n  return rows;\n}\n\nexport function sortRows(rows: any, orderBy: any) {\n  if (orderBy.length === 0 || rows.length === 0) {\n    return rows;\n  }\n\n  const directions = { ascend: 1, descend: -1 };\n\n  // Create a copy of array before sorting, because .sort() will modify original array\n  return [...rows].sort((a, b) => {\n    let va;\n    let vb;\n    for (let i = 0; i < orderBy.length; i += 1) {\n      va = a.record[orderBy[i].name];\n      vb = b.record[orderBy[i].name];\n      if (isNil(va) || va < vb) {\n        // if a < b - we should return -1, but take in account direction\n        // @ts-expect-error ts-migrate(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\n        return -1 * directions[orderBy[i].direction];\n      }\n      if (va > vb || isNil(vb)) {\n        // if a > b - we should return 1, but take in account direction\n        // @ts-expect-error ts-migrate(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\n        return 1 * directions[orderBy[i].direction];\n      }\n    }\n    return 0;\n  });\n}\n"],"mappings":";;;;;;;;;AAAA,IAAAA,OAAA,GAAAC,OAAA;AACA,IAAAC,MAAA,GAAAC,sBAAA,CAAAF,OAAA;AACA,IAAAG,WAAA,GAAAD,sBAAA,CAAAF,OAAA;AACA,IAAAI,QAAA,GAAAF,sBAAA,CAAAF,OAAA;AACA,IAAAK,QAAA,GAAAH,sBAAA,CAAAF,OAAA;AAAoC,SAAAE,uBAAAI,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,KAAAE,OAAA,EAAAF,GAAA;AAEpC,SAASG,oBAAoBA,CAACC,SAAc,EAAE;EAC5C,QAAQA,SAAS;IACf,KAAK,QAAQ;MACX,OAAO,SAAS;IAClB,KAAK,SAAS;MACZ,OAAO,IAAI;IACb;MACE,OAAO,QAAQ;EACnB;AACF;AAEA,SAASC,aAAaA,CAACC,UAAe,EAAyC;EAAA,IAAvCC,OAAO,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,EAAE;EAAA,IAAEG,eAAe,GAAAH,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,KAAK;EAC3E;EACA,IAAMI,KAAK,GAAG,IAAAC,iBAAS,EAACN,OAAO,EAAEO,CAAC,IAAIA,CAAC,CAACC,IAAI,KAAKT,UAAU,CAAC;EAC5D,IAAMU,IAAI,GAAG;IAAED,IAAI,EAAET,UAAU;IAAEF,SAAS,EAAE;EAAS,CAAC;EACtD,IAAIQ,KAAK,IAAI,CAAC,EAAE;IACd;IACAI,IAAI,CAACZ,SAAS,GAAGD,oBAAoB,CAACI,OAAO,CAACK,KAAK,CAAC,CAACR,SAAS,CAAC;EACjE;EAEA,IAAIO,eAAe,EAAE;IACnB,IAAI,CAACK,IAAI,CAACZ,SAAS,EAAE;MACnB;MACA,OAAO,IAAAa,cAAM,EAACV,OAAO,EAAEO,CAAC,IAAIA,CAAC,CAACC,IAAI,KAAKT,UAAU,CAAC;IACpD;IACA,IAAIM,KAAK,IAAI,CAAC,EAAE;MACd;MACAL,OAAO,CAACK,KAAK,CAAC,GAAGI,IAAI;IACvB,CAAC,MAAM;MACL;MACAT,OAAO,CAACW,IAAI,CAACF,IAAI,CAAC;IACpB;IACA,OAAO,CAAC,GAAGT,OAAO,CAAC;EACrB;EACA,OAAOS,IAAI,CAACZ,SAAS,GAAG,CAACY,IAAI,CAAC,GAAG,EAAE;AACrC;AAEA,SAASG,cAAcA,CAACZ,OAAY,EAAE;EACpC,IAAMa,MAAM,GAAG,CAAC,CAAC;EACjB,IAAAC,YAAI,EAACd,OAAO,EAAE,CAAAe,IAAA,EAAsBV,KAAK,KAAK;IAAA,IAA7BG,IAAI,GAAAO,IAAA,CAAJP,IAAI;MAAEX,SAAS,GAAAkB,IAAA,CAATlB,SAAS;IAC9B;IACAgB,MAAM,CAACL,IAAI,CAAC,GAAG;MAAEX,SAAS;MAAEQ,KAAK,EAAEA,KAAK,GAAG;IAAE,CAAC;EAChD,CAAC,CAAC;EACF,OAAOQ,MAAM;AACf;AAEO,SAASG,cAAcA,CAACC,OAAY,EAAEC,WAAgB,EAAElB,OAAY,EAAEmB,eAAoB,EAAE;EACjGF,OAAO,GAAG,IAAAP,cAAM,EAACO,OAAO,EAAE,SAAS,CAAC;EACpCA,OAAO,GAAG,IAAAG,cAAM,EAACH,OAAO,EAAE,OAAO,CAAC;EAElC,IAAMI,iBAAiB,GAAGrB,OAAO,CAACE,MAAM,GAAG,CAAC;EAC5C,IAAMoB,WAAW,GAAGV,cAAc,CAACZ,OAAO,CAAC;EAE3C,IAAIuB,YAAY,GAAG,IAAAC,WAAG,EAACP,OAAO,EAAEQ,MAAM,IAAI;IACxC;IACA,IAAMC,QAAQ,GAAGJ,WAAW,CAACG,MAAM,CAACjB,IAAI,CAAC,IAAIc,WAAW,CAACG,MAAM,CAACjB,IAAI,CAAC,CAACX,SAAS,KAAK,QAAQ;IAC5F;IACA,IAAM8B,SAAS,GAAGL,WAAW,CAACG,MAAM,CAACjB,IAAI,CAAC,IAAIc,WAAW,CAACG,MAAM,CAACjB,IAAI,CAAC,CAACX,SAAS,KAAK,SAAS;;IAE9F;IACA,IAAM+B,eAAe,GAAGP,iBAAiB,IAAIC,WAAW,CAACG,MAAM,CAACjB,IAAI,CAAC,GAAGc,WAAW,CAACG,MAAM,CAACjB,IAAI,CAAC,CAACH,KAAK,GAAG,IAAI;IAE7G,IAAMQ,MAAM,GAAG;MACbgB,GAAG,EAAEJ,MAAM,CAACjB,IAAI;MAChBsB,SAAS,YAAAC,MAAA,CAAYC,IAAI,CAACC,SAAS,CAACR,MAAM,CAACjB,IAAI,CAAC,MAAG;MACnD0B,KAAK,EAAET,MAAM,CAACU,YAAY;MAC1BC,MAAM,EAAE;QAAEC,QAAQ,EAAE;MAAE,CAAC;MAAE;MACzBC,SAAS,EAAE,IAAAC,WAAG,EAACjB,WAAW,EAAE,CAACG,MAAM,CAACjB,IAAI,EAAE,WAAW,CAAC,EAAE,IAAI,CAAC;MAC7DgC,KAAK,eACHpD,MAAA,CAAAO,OAAA,CAAA8C,aAAA,CAACrD,MAAA,CAAAO,OAAK,CAAC+C,QAAQ,QACZjB,MAAM,CAACkB,WAAW,iBACjBvD,MAAA,CAAAO,OAAA,CAAA8C,aAAA;QAAMG,KAAK,EAAE;UAAEC,YAAY,EAAE;QAAE;MAAE,gBAC/BzD,MAAA,CAAAO,OAAA,CAAA8C,aAAA,CAAClD,QAAA,CAAAI,OAAO;QAACmD,SAAS,EAAC,KAAK;QAACN,KAAK,EAAEf,MAAM,CAACkB;MAAY,gBACjDvD,MAAA,CAAAO,OAAA,CAAA8C,aAAA;QAAKM,SAAS,EAAC;MAA6B,gBAC1C3D,MAAA,CAAAO,OAAA,CAAA8C,aAAA;QAAGM,SAAS,EAAC,mBAAmB;QAAC,eAAY;MAAM,CAAI,CACpD,CACE,CACL,CACP,eACD3D,MAAA,CAAAO,OAAA,CAAA8C,aAAA,CAAClD,QAAA,CAAAI,OAAO;QAACmD,SAAS,EAAC,KAAK;QAACN,KAAK,EAAEf,MAAM,CAACe;MAAM,gBAC3CpD,MAAA,CAAAO,OAAA,CAAA8C,aAAA;QAAKM,SAAS,EAAC,6BAA6B;QAAC,0BAAwBnB;MAAgB,GAClFH,MAAM,CAACe,KACL,CACE,CACK,CACjB;MACDQ,YAAY,EAAEA,CAAA,MAAO;QACnBD,SAAS,EAAE,IAAAE,mBAAE,EAAC;UACZ,sCAAsC,EAAEvB,QAAQ,IAAIC;QACtD,CAAC,CAAC;QACFuB,OAAO,EAAGC,KAAU,IAAKhC,eAAe,CAACrB,aAAa,CAAC2B,MAAM,CAACjB,IAAI,EAAER,OAAO,EAAEmD,KAAK,CAACC,QAAQ,CAAC;MAC9F,CAAC;IACH,CAAC;;IAED;IACA,IAAMC,UAAU,GAAGC,gBAAW,CAAC7B,MAAM,CAAC8B,SAAS,CAAC;IAChD,IAAMC,SAAS,GAAGH,UAAU,CAAC5B,MAAM,CAAC;IACpC;IACAZ,MAAM,CAAC4C,MAAM,GAAG,CAACC,MAAW,EAAEC,GAAQ,MAAM;MAC1CC,QAAQ,eAAExE,MAAA,CAAAO,OAAA,CAAA8C,aAAA,CAACe,SAAS;QAACG,GAAG,EAAEA,GAAG,CAACE;MAAO,CAAE,CAAC;MACxCC,KAAK,EAAE;QAAEf,SAAS,gBAAAhB,MAAA,CAAgBN,MAAM,CAAC8B,SAAS;MAAG;IACvD,CAAC,CAAC;IAEF,OAAO1C,MAAM;EACf,CAAC,CAAC;EAEFU,YAAY,CAACZ,IAAI,CAAC;IAChBkB,GAAG,EAAE,6CAA6C;IAClD;IACAC,SAAS,EAAE,IAAI;IACf;IACAU,KAAK,EAAE,EAAE;IACTO,SAAS,EAAE,4BAA4B;IACvCU,MAAM,EAAEA,CAAA,KAAM,EAAE;IAChB;IACAT,YAAY,EAAEA,CAAA,MAAO;MAAED,SAAS,EAAE;IAA6B,CAAC;EAClE,CAAC,CAAC;EAEF,IAAI7B,WAAW,EAAE;IACf;IACAK,YAAY,GAAG,CACb;MACEM,GAAG,EAAE,cAAc;MACnBW,KAAK,EAAEtB,WAAW;MAClB;MACA8B,YAAY,EAAEA,CAAA,MAAO;QAAED,SAAS,EAAE;MAA6B,CAAC,CAAC;MACjEa,QAAQ,EAAErC;IACZ,CAAC,CACF;EACH;EAEA,OAAOA,YAAY;AACrB;AAEO,SAASwC,QAAQA,CAACC,IAAS,EAAE;EAClC,OAAO,IAAAxC,WAAG,EAACwC,IAAI,EAAE,CAACH,MAAM,EAAExD,KAAK,MAAM;IAAEwB,GAAG,WAAAE,MAAA,CAAW1B,KAAK,CAAE;IAAEwD;EAAO,CAAC,CAAC,CAAC;AAC1E;AAEO,SAASI,UAAUA,CAACD,IAAS,EAAEE,UAAe,EAAEC,aAAkB,EAAE;EACzE,IAAID,UAAU,KAAK,EAAE,IAAIC,aAAa,CAACjE,MAAM,GAAG,CAAC,EAAE;IACjDgE,UAAU,GAAGA,UAAU,CAACE,WAAW,CAAC,CAAC;IACrC,IAAMC,WAAW,GAAG,IAAA7C,WAAG,EAAC2C,aAAa,EAAE1C,MAAM,IAAI;MAC/C;MACA,IAAM4B,UAAU,GAAGC,gBAAW,CAAC7B,MAAM,CAAC8B,SAAS,CAAC;MAChD,IAAAe,WAAA,GAAwBjB,UAAU,CAAC5B,MAAM,CAAC;QAAlC8C,WAAW,GAAAD,WAAA,CAAXC,WAAW;MACnB,OAAQZ,GAAQ,IAAK;QACnB,IAAAa,YAAA,GAAiBD,WAAW,CAACZ,GAAG,CAAC;UAAzBc,IAAI,GAAAD,YAAA,CAAJC,IAAI;QACZ,OACE,IAAAC,gBAAQ,EAACD,IAAI,CAAC,CACXL,WAAW,CAAC,CAAC,CACbO,OAAO,CAACT,UAAU,CAAC,IAAI,CAAC;MAE/B,CAAC;IACH,CAAC,CAAC;IAEF,OAAO,IAAAxD,cAAM,EAACsD,IAAI,EAAEL,GAAG,IAAI,IAAAiB,YAAI,EAACP,WAAW,EAAEQ,KAAK,IAAIA,KAAK,CAAClB,GAAG,CAACE,MAAM,CAAC,CAAC,CAAC;EAC3E;EACA,OAAOG,IAAI;AACb;AAEO,SAASc,QAAQA,CAACd,IAAS,EAAEhE,OAAY,EAAE;EAChD,IAAIA,OAAO,CAACE,MAAM,KAAK,CAAC,IAAI8D,IAAI,CAAC9D,MAAM,KAAK,CAAC,EAAE;IAC7C,OAAO8D,IAAI;EACb;EAEA,IAAMe,UAAU,GAAG;IAAEC,MAAM,EAAE,CAAC;IAAEC,OAAO,EAAE,CAAC;EAAE,CAAC;;EAE7C;EACA,OAAO,CAAC,GAAGjB,IAAI,CAAC,CAACkB,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;IAC9B,IAAIC,EAAE;IACN,IAAIC,EAAE;IACN,KAAK,IAAI/E,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGP,OAAO,CAACE,MAAM,EAAEK,CAAC,IAAI,CAAC,EAAE;MAC1C8E,EAAE,GAAGF,CAAC,CAACtB,MAAM,CAAC7D,OAAO,CAACO,CAAC,CAAC,CAACC,IAAI,CAAC;MAC9B8E,EAAE,GAAGF,CAAC,CAACvB,MAAM,CAAC7D,OAAO,CAACO,CAAC,CAAC,CAACC,IAAI,CAAC;MAC9B,IAAI,IAAA+E,aAAK,EAACF,EAAE,CAAC,IAAIA,EAAE,GAAGC,EAAE,EAAE;QACxB;QACA;QACA,OAAO,CAAC,CAAC,GAAGP,UAAU,CAAC/E,OAAO,CAACO,CAAC,CAAC,CAACV,SAAS,CAAC;MAC9C;MACA,IAAIwF,EAAE,GAAGC,EAAE,IAAI,IAAAC,aAAK,EAACD,EAAE,CAAC,EAAE;QACxB;QACA;QACA,OAAO,CAAC,GAAGP,UAAU,CAAC/E,OAAO,CAACO,CAAC,CAAC,CAACV,SAAS,CAAC;MAC7C;IACF;IACA,OAAO,CAAC;EACV,CAAC,CAAC;AACJ"}