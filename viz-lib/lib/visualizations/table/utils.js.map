{"version":3,"file":"utils.js","names":["isNil","map","get","filter","each","sortBy","some","findIndex","toString","React","cx","Tooltip","ColumnTypes","nextOrderByDirection","direction","toggleOrderBy","columnName","orderBy","arguments","length","undefined","multiColumnSort","index","i","name","item","push","getOrderByInfo","result","_ref","prepareColumns","columns","searchInput","onOrderByChange","isMultiColumnSort","orderByInfo","tableColumns","column","isAscend","isDescend","sortColumnIndex","key","dataIndex","concat","JSON","stringify","align","alignContent","sorter","multiple","sortOrder","title","createElement","Fragment","description","style","paddingRight","placement","className","onHeaderCell","onClick","event","shiftKey","initColumn","displayAs","Component","render","unused","row","children","record","props","initRows","rows","filterRows","searchTerm","searchColumns","toUpperCase","matchFields","_initColumn","prepareData","_prepareData","text","indexOf","match","sortRows","directions","ascend","descend","sort","a","b","va","vb"],"sources":["../../../src/visualizations/table/utils.tsx"],"sourcesContent":["import { isNil, map, get, filter, each, sortBy, some, findIndex, toString } from \"lodash\";\nimport React from \"react\";\nimport cx from \"classnames\";\nimport Tooltip from \"antd/lib/tooltip\";\nimport ColumnTypes from \"./columns\";\n\nfunction nextOrderByDirection(direction: any) {\n  switch (direction) {\n    case \"ascend\":\n      return \"descend\";\n    case \"descend\":\n      return null;\n    default:\n      return \"ascend\";\n  }\n}\n\nfunction toggleOrderBy(columnName: any, orderBy = [], multiColumnSort = false) {\n  // @ts-expect-error ts-migrate(2339) FIXME: Property 'name' does not exist on type 'never'.\n  const index = findIndex(orderBy, i => i.name === columnName);\n  const item = { name: columnName, direction: \"ascend\" };\n  if (index >= 0) {\n    // @ts-expect-error ts-migrate(2322) FIXME: Type 'string | null' is not assignable to type 'st... Remove this comment to see the full error message\n    item.direction = nextOrderByDirection(orderBy[index].direction);\n  }\n\n  if (multiColumnSort) {\n    if (!item.direction) {\n      // @ts-expect-error ts-migrate(2339) FIXME: Property 'name' does not exist on type 'never'.\n      return filter(orderBy, i => i.name !== columnName);\n    }\n    if (index >= 0) {\n      // @ts-expect-error ts-migrate(2322) FIXME: Type '{ name: any; direction: string; }' is not as... Remove this comment to see the full error message\n      orderBy[index] = item;\n    } else {\n      // @ts-expect-error ts-migrate(2345) FIXME: Argument of type '{ name: any; direction: string; ... Remove this comment to see the full error message\n      orderBy.push(item);\n    }\n    return [...orderBy];\n  }\n  return item.direction ? [item] : [];\n}\n\nfunction getOrderByInfo(orderBy: any) {\n  const result = {};\n  each(orderBy, ({ name, direction }, index) => {\n    // @ts-expect-error ts-migrate(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\n    result[name] = { direction, index: index + 1 };\n  });\n  return result;\n}\n\nexport function prepareColumns(columns: any, searchInput: any, orderBy: any, onOrderByChange: any) {\n  columns = filter(columns, \"visible\");\n  columns = sortBy(columns, \"order\");\n\n  const isMultiColumnSort = orderBy.length > 1;\n  const orderByInfo = getOrderByInfo(orderBy);\n\n  let tableColumns = map(columns, column => {\n    // @ts-expect-error ts-migrate(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\n    const isAscend = orderByInfo[column.name] && orderByInfo[column.name].direction === \"ascend\";\n    // @ts-expect-error ts-migrate(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\n    const isDescend = orderByInfo[column.name] && orderByInfo[column.name].direction === \"descend\";\n\n    // @ts-expect-error ts-migrate(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\n    const sortColumnIndex = isMultiColumnSort && orderByInfo[column.name] ? orderByInfo[column.name].index : null;\n\n    const result = {\n      key: column.name,\n      dataIndex: `record[${JSON.stringify(column.name)}]`,\n      align: column.alignContent,\n      sorter: { multiple: 1 }, // using { multiple: 1 } to allow built-in multi-column sort arrows\n      sortOrder: get(orderByInfo, [column.name, \"direction\"], null),\n      title: (\n        <React.Fragment>\n          {column.description && (\n            <span style={{ paddingRight: 5 }}>\n              <Tooltip placement=\"top\" title={column.description}>\n                <div className=\"table-visualization-heading\">\n                  <i className=\"fa fa-info-circle\" aria-hidden=\"true\"></i>\n                </div>\n              </Tooltip>\n            </span>\n          )}\n          <Tooltip placement=\"top\" title={column.title}>\n            <div className=\"table-visualization-heading\" data-sort-column-index={sortColumnIndex}>\n              {column.title}\n            </div>\n          </Tooltip>\n        </React.Fragment>\n      ),\n      onHeaderCell: () => ({\n        className: cx({\n          \"table-visualization-column-is-sorted\": isAscend || isDescend,\n        }),\n        onClick: (event: any) => onOrderByChange(toggleOrderBy(column.name, orderBy, event.shiftKey)),\n      }),\n    };\n\n    // @ts-expect-error ts-migrate(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\n    const initColumn = ColumnTypes[column.displayAs];\n    const Component = initColumn(column);\n    // @ts-expect-error ts-migrate(2339) FIXME: Property 'render' does not exist on type '{ key: a... Remove this comment to see the full error message\n    result.render = (unused: any, row: any) => ({\n      children: <Component row={row.record} />,\n      props: { className: `display-as-${column.displayAs}` },\n    });\n\n    return result;\n  });\n\n  tableColumns.push({\n    key: \"###Redash::Visualizations::Table::Spacer###\",\n    // @ts-expect-error ts-migrate(2322) FIXME: Type 'null' is not assignable to type 'string'.\n    dataIndex: null,\n    // @ts-expect-error ts-migrate(2322) FIXME: Type 'string' is not assignable to type 'Element'.\n    title: \"\",\n    className: \"table-visualization-spacer\",\n    render: () => \"\",\n    // @ts-expect-error ts-migrate(2741) FIXME: Property 'onClick' is missing in type '{ className... Remove this comment to see the full error message\n    onHeaderCell: () => ({ className: \"table-visualization-spacer\" }),\n  });\n\n  if (searchInput) {\n    // Add searchInput as the ColumnGroup for all table columns\n    tableColumns = [\n      {\n        key: \"table-search\",\n        title: searchInput,\n        // @ts-expect-error ts-migrate(2741) FIXME: Property 'onClick' is missing in type '{ className... Remove this comment to see the full error message\n        onHeaderCell: () => ({ className: \"table-visualization-search\" }),\n        children: tableColumns,\n      },\n    ];\n  }\n\n  return tableColumns;\n}\n\nexport function initRows(rows: any) {\n  return map(rows, (record, index) => ({ key: `record${index}`, record }));\n}\n\nexport function filterRows(rows: any, searchTerm: any, searchColumns: any) {\n  if (searchTerm !== \"\" && searchColumns.length > 0) {\n    searchTerm = searchTerm.toUpperCase();\n    const matchFields = map(searchColumns, column => {\n      // @ts-expect-error ts-migrate(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\n      const initColumn = ColumnTypes[column.displayAs];\n      const { prepareData } = initColumn(column);\n      return (row: any) => {\n        const { text } = prepareData(row);\n        return (\n          toString(text)\n            .toUpperCase()\n            .indexOf(searchTerm) >= 0\n        );\n      };\n    });\n\n    return filter(rows, row => some(matchFields, match => match(row.record)));\n  }\n  return rows;\n}\n\nexport function sortRows(rows: any, orderBy: any) {\n  if (orderBy.length === 0 || rows.length === 0) {\n    return rows;\n  }\n\n  const directions = { ascend: 1, descend: -1 };\n\n  // Create a copy of array before sorting, because .sort() will modify original array\n  return [...rows].sort((a, b) => {\n    let va;\n    let vb;\n    for (let i = 0; i < orderBy.length; i += 1) {\n      va = a.record[orderBy[i].name];\n      vb = b.record[orderBy[i].name];\n      if (isNil(va) || va < vb) {\n        // if a < b - we should return -1, but take in account direction\n        // @ts-expect-error ts-migrate(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\n        return -1 * directions[orderBy[i].direction];\n      }\n      if (va > vb || isNil(vb)) {\n        // if a > b - we should return 1, but take in account direction\n        // @ts-expect-error ts-migrate(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\n        return 1 * directions[orderBy[i].direction];\n      }\n    }\n    return 0;\n  });\n}\n"],"mappings":"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"}