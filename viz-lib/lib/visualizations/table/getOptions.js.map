{"version":3,"file":"getOptions.js","names":["_lodash","_interopRequireDefault","require","_visualizationsSettings","obj","__esModule","default","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","value","_toPropertyKey","configurable","writable","arg","_toPrimitive","String","input","hint","prim","Symbol","toPrimitive","undefined","res","call","TypeError","Number","DEFAULT_OPTIONS","itemsPerPage","paginationSize","filterTypes","getColumnNameWithoutType","column","typeSplit","indexOf","parts","split","_","includes","getColumnContentAlignment","type","getDefaultColumnsOptions","columns","displayAs","integer","float","boolean","date","datetime","map","col","index","name","visible","order","title","allowSearch","alignContent","allowHTML","highlightLinks","getDefaultFormatOptions","dateTimeFormat","visualizationsSettings","dateFormat","numberFormat","integerFormat","floatFormat","nullValue","booleanValues","imageUrlTemplate","imageTitleTemplate","imageWidth","imageHeight","linkUrlTemplate","linkTextTemplate","linkTitleTemplate","linkOpenInNewTab","wereColumnsReordered","queryColumns","visualizationColumns","getColumnsOptions","options","fromPairs","extend","omit","each","sortBy","getOptions","_ref"],"sources":["../../../src/visualizations/table/getOptions.ts"],"sourcesContent":["import _ from \"lodash\";\nimport { visualizationsSettings } from \"@/visualizations/visualizationsSettings\";\n\nconst DEFAULT_OPTIONS = {\n  itemsPerPage: 25,\n  paginationSize: \"default\", // not editable through Editor\n};\n\nconst filterTypes = [\"filter\", \"multi-filter\", \"multiFilter\"];\n\nfunction getColumnNameWithoutType(column: any) {\n  let typeSplit;\n  if (column.indexOf(\"::\") !== -1) {\n    typeSplit = \"::\";\n  } else if (column.indexOf(\"__\") !== -1) {\n    typeSplit = \"__\";\n  } else {\n    return column;\n  }\n\n  const parts = column.split(typeSplit);\n  if (parts[0] === \"\" && parts.length === 2) {\n    return parts[1];\n  }\n\n  if (!_.includes(filterTypes, parts[1])) {\n    return column;\n  }\n\n  return parts[0];\n}\n\nfunction getColumnContentAlignment(type: any) {\n  return [\"integer\", \"float\", \"boolean\", \"date\", \"datetime\"].indexOf(type) >= 0 ? \"right\" : \"left\";\n}\n\nfunction getDefaultColumnsOptions(columns: any) {\n  const displayAs = {\n    integer: \"number\",\n    float: \"number\",\n    boolean: \"boolean\",\n    date: \"datetime\",\n    datetime: \"datetime\",\n  };\n\n  return _.map(columns, (col, index) => ({\n    name: col.name,\n    type: col.type,\n    // @ts-expect-error ts-migrate(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\n    displayAs: displayAs[col.type] || \"string\",\n    visible: true,\n    order: 100000 + index,\n    title: getColumnNameWithoutType(col.name),\n    allowSearch: false,\n    alignContent: getColumnContentAlignment(col.type),\n    // `string` cell options\n    allowHTML: false,\n    highlightLinks: false,\n  }));\n}\n\nfunction getDefaultFormatOptions(column: any) {\n  const dateTimeFormat = {\n    date: visualizationsSettings.dateFormat || \"DD/MM/YYYY\",\n    datetime: visualizationsSettings.dateTimeFormat || \"DD/MM/YYYY HH:mm\",\n  };\n  const numberFormat = {\n    integer: visualizationsSettings.integerFormat || \"0,0\",\n    float: visualizationsSettings.floatFormat || \"0,0.00\",\n  };\n  return {\n    // @ts-expect-error ts-migrate(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\n    dateTimeFormat: dateTimeFormat[column.type],\n    // @ts-expect-error ts-migrate(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\n    numberFormat: numberFormat[column.type],\n    nullValue: visualizationsSettings.nullValue,\n    booleanValues: visualizationsSettings.booleanValues || [\"false\", \"true\"],\n    // `image` cell options\n    imageUrlTemplate: \"{{ @ }}\",\n    imageTitleTemplate: \"{{ @ }}\",\n    imageWidth: \"\",\n    imageHeight: \"\",\n    // `link` cell options\n    linkUrlTemplate: \"{{ @ }}\",\n    linkTextTemplate: \"{{ @ }}\",\n    linkTitleTemplate: \"{{ @ }}\",\n    linkOpenInNewTab: true,\n  };\n}\n\nfunction wereColumnsReordered(queryColumns: any, visualizationColumns: any) {\n  queryColumns = _.map(queryColumns, col => col.name);\n  visualizationColumns = _.map(visualizationColumns, col => col.name);\n\n  // Some columns may be removed - so skip them (but keep original order)\n  visualizationColumns = _.filter(visualizationColumns, col => _.includes(queryColumns, col));\n  // Pick query columns that were previously saved with viz (but keep order too)\n  queryColumns = _.filter(queryColumns, col => _.includes(visualizationColumns, col));\n\n  // Both array now have the same size as they both contains only common columns\n  // (in fact, it was an intersection, that kept order of items on both arrays).\n  // Now check for equality item-by-item; if common columns are in the same order -\n  // they were not reordered in editor\n  for (let i = 0; i < queryColumns.length; i += 1) {\n    if (visualizationColumns[i] !== queryColumns[i]) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction getColumnsOptions(columns: any, visualizationColumns: any) {\n  const options = getDefaultColumnsOptions(columns);\n\n  if (wereColumnsReordered(columns, visualizationColumns)) {\n    visualizationColumns = _.fromPairs(\n      _.map(visualizationColumns, (col, index) => [col.name, _.extend({}, col, { order: index })])\n    );\n  } else {\n    visualizationColumns = _.fromPairs(_.map(visualizationColumns, col => [col.name, _.omit(col, \"order\")]));\n  }\n\n  _.each(options, col => _.extend(col, visualizationColumns[col.name]));\n\n  return _.sortBy(options, \"order\");\n}\n\nexport default function getOptions(options: any, { columns }: any) {\n  options = { ...DEFAULT_OPTIONS, ...options };\n  options.columns = _.map(getColumnsOptions(columns, options.columns), col => ({\n    ...getDefaultFormatOptions(col),\n    ...col,\n  }));\n  return options;\n}\n"],"mappings":"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"}