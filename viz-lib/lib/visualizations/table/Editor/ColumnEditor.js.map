{"version":3,"file":"ColumnEditor.js","names":["map","React","useDebouncedCallback","Grid","Section","Select","Input","Checkbox","TextAlignmentSelect","ColumnTypes","ColumnEditor","_ref","column","onChange","handleChange","changes","_objectSpread","_useDebouncedCallback","_useDebouncedCallback2","_slicedToArray","handleChangeDebounced","AdditionalOptions","displayAs","Editor","createElement","className","Row","gutter","type","align","Col","span","concat","name","defaultValue","title","event","target","value","alignContent","defaultChecked","allowSearch","checked","label","description","_ref2","key","friendlyName","Option","defaultProps"],"sources":["../../../../src/visualizations/table/Editor/ColumnEditor.tsx"],"sourcesContent":["import { map, keys } from \"lodash\";\nimport React from \"react\";\nimport { useDebouncedCallback } from \"use-debounce\";\nimport * as Grid from \"antd/lib/grid\";\nimport { Section, Select, Input, Checkbox, TextAlignmentSelect } from \"@/components/visualizations/editor\";\n\nimport ColumnTypes from \"../columns\";\n\ntype OwnProps = {\n  column: {\n    name: string;\n    title?: string;\n    visible?: boolean;\n    alignContent?: \"left\" | \"center\" | \"right\";\n    displayAs?: any; // TODO: PropTypes.oneOf(keys(ColumnTypes))\n  };\n  onChange?: (...args: any[]) => any;\n};\n\ntype Props = OwnProps & typeof ColumnEditor.defaultProps;\n\nexport default function ColumnEditor({ column, onChange }: Props) {\n  function handleChange(changes: any) {\n    onChange({ ...column, ...changes });\n  }\n\n  const [handleChangeDebounced] = useDebouncedCallback(handleChange, 200);\n\n  // @ts-expect-error ts-migrate(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\n  const AdditionalOptions = ColumnTypes[column.displayAs].Editor || null;\n\n  return (\n    <div className=\"table-visualization-editor-column\">\n      {/* @ts-expect-error ts-migrate(2745) FIXME: This JSX tag's 'children' prop expects type 'never... Remove this comment to see the full error message */}\n      <Section>\n        {/* @ts-expect-error ts-migrate(2322) FIXME: Type '{ children: Element[]; gutter: number; type:... Remove this comment to see the full error message */}\n        <Grid.Row gutter={15} type=\"flex\" align=\"middle\">\n          <Grid.Col span={16}>\n            <Input\n              data-test={`Table.Column.${column.name}.Title`}\n              defaultValue={column.title}\n              onChange={(event: any) => handleChangeDebounced({ title: event.target.value })}\n            />\n          </Grid.Col>\n          <Grid.Col span={8}>\n            <TextAlignmentSelect\n              data-test={`Table.Column.${column.name}.TextAlignment`}\n              defaultValue={column.alignContent}\n              onChange={(event: any) => handleChange({ alignContent: event.target.value })}\n            />\n          </Grid.Col>\n        </Grid.Row>\n      </Section>\n\n      {/* @ts-expect-error ts-migrate(2745) FIXME: This JSX tag's 'children' prop expects type 'never... Remove this comment to see the full error message */}\n      <Section>\n        <Checkbox\n          data-test={`Table.Column.${column.name}.UseForSearch`}\n          // @ts-expect-error ts-migrate(2339) FIXME: Property 'allowSearch' does not exist on type '{ n... Remove this comment to see the full error message\n          defaultChecked={column.allowSearch}\n          onChange={event => handleChange({ allowSearch: event.target.checked })}>\n          Use for search\n        </Checkbox>\n      </Section>\n\n      {/* @ts-expect-error ts-migrate(2745) FIXME: This JSX tag's 'children' prop expects type 'never... Remove this comment to see the full error message */}\n      <Section>\n        <Input\n          label=\"Description\"\n          // @ts-expect-error ts-migrate(2339) FIXME: Property 'description' does not exist on type '{ n... Remove this comment to see the full error message\n          defaultValue={column.description}\n          onChange={(event: any) => handleChangeDebounced({ description: event.target.value })}\n        />\n      </Section>\n\n      {/* @ts-expect-error ts-migrate(2745) FIXME: This JSX tag's 'children' prop expects type 'never... Remove this comment to see the full error message */}\n      <Section>\n        <Select\n          label=\"Display as:\"\n          data-test={`Table.Column.${column.name}.DisplayAs`}\n          defaultValue={column.displayAs}\n          onChange={(displayAs: any) => handleChange({ displayAs })}>\n          {map(ColumnTypes, ({ friendlyName }, key) => (\n            // @ts-expect-error ts-migrate(2339) FIXME: Property 'Option' does not exist on type '({ class... Remove this comment to see the full error message\n            <Select.Option key={key} data-test={`Table.Column.${column.name}.DisplayAs.${key}`}>\n              {friendlyName}\n              {/* @ts-expect-error ts-migrate(2339) FIXME: Property 'Option' does not exist on type '({ class... Remove this comment to see the full error message */}\n            </Select.Option>\n          ))}\n        </Select>\n      </Section>\n\n      {AdditionalOptions && <AdditionalOptions column={column} onChange={handleChange} />}\n    </div>\n  );\n}\n\nColumnEditor.defaultProps = {\n  onChange: () => {},\n};\n"],"mappings":"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"}