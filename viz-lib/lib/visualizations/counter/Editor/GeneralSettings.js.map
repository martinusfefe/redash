{"version":3,"file":"GeneralSettings.js","names":["_lodash","require","_react","_interopRequireDefault","_editor","_propTypes","obj","__esModule","default","GeneralSettings","_ref","options","data","visualizationName","onOptionsChange","createElement","Fragment","Section","Input","layout","label","defaultValue","counterLabel","placeholder","onChange","e","target","value","Select","counterColName","disabled","countRow","map","columns","col","Option","key","name","InputNumber","rowNumber","targetColName","targetRowNumber","Switch","defaultChecked","propTypes","EditorPropTypes"],"sources":["../../../../src/visualizations/counter/Editor/GeneralSettings.tsx"],"sourcesContent":["import { map } from \"lodash\";\nimport React from \"react\";\nimport { Section, Select, Input, InputNumber, Switch } from \"@/components/visualizations/editor\";\nimport { EditorPropTypes } from \"@/visualizations/prop-types\";\n\nexport default function GeneralSettings({ options, data, visualizationName, onOptionsChange }: any) {\n  return (\n    <React.Fragment>\n      {/* @ts-expect-error ts-migrate(2745) FIXME: This JSX tag's 'children' prop expects type 'never... Remove this comment to see the full error message */}\n      <Section>\n        <Input\n          layout=\"horizontal\"\n          label=\"Counter Label\"\n          data-test=\"Counter.General.Label\"\n          defaultValue={options.counterLabel}\n          placeholder={visualizationName}\n          onChange={(e: any) => onOptionsChange({ counterLabel: e.target.value })}\n        />\n      </Section>\n\n      {/* @ts-expect-error ts-migrate(2745) FIXME: This JSX tag's 'children' prop expects type 'never... Remove this comment to see the full error message */}\n      <Section>\n        <Select\n          layout=\"horizontal\"\n          label=\"Counter Value Column Name\"\n          data-test=\"Counter.General.ValueColumn\"\n          defaultValue={options.counterColName}\n          disabled={options.countRow}\n          onChange={(counterColName: any) => onOptionsChange({ counterColName })}>\n          {map(data.columns, col => (\n            // @ts-expect-error ts-migrate(2339) FIXME: Property 'Option' does not exist on type '({ class... Remove this comment to see the full error message\n            <Select.Option key={col.name} data-test={\"Counter.General.ValueColumn.\" + col.name}>\n              {col.name}\n              {/* @ts-expect-error ts-migrate(2339) FIXME: Property 'Option' does not exist on type '({ class... Remove this comment to see the full error message */}\n            </Select.Option>\n          ))}\n        </Select>\n      </Section>\n\n      {/* @ts-expect-error ts-migrate(2745) FIXME: This JSX tag's 'children' prop expects type 'never... Remove this comment to see the full error message */}\n      <Section>\n        <InputNumber\n          layout=\"horizontal\"\n          label=\"Counter Value Row Number\"\n          data-test=\"Counter.General.ValueRowNumber\"\n          defaultValue={options.rowNumber}\n          disabled={options.countRow}\n          onChange={(rowNumber: any) => onOptionsChange({ rowNumber })}\n        />\n      </Section>\n\n      {/* @ts-expect-error ts-migrate(2745) FIXME: This JSX tag's 'children' prop expects type 'never... Remove this comment to see the full error message */}\n      <Section>\n        <Select\n          layout=\"horizontal\"\n          label=\"Target Value Column Name\"\n          data-test=\"Counter.General.TargetValueColumn\"\n          defaultValue={options.targetColName}\n          onChange={(targetColName: any) => onOptionsChange({ targetColName })}>\n          {/* @ts-expect-error ts-migrate(2339) FIXME: Property 'Option' does not exist on type '({ class... Remove this comment to see the full error message */}\n          <Select.Option value=\"\">No target value</Select.Option>\n          {map(data.columns, col => (\n            // @ts-expect-error ts-migrate(2339) FIXME: Property 'Option' does not exist on type '({ class... Remove this comment to see the full error message\n            <Select.Option key={col.name} data-test={\"Counter.General.TargetValueColumn.\" + col.name}>\n              {col.name}\n              {/* @ts-expect-error ts-migrate(2339) FIXME: Property 'Option' does not exist on type '({ class... Remove this comment to see the full error message */}\n            </Select.Option>\n          ))}\n        </Select>\n      </Section>\n\n      {/* @ts-expect-error ts-migrate(2745) FIXME: This JSX tag's 'children' prop expects type 'never... Remove this comment to see the full error message */}\n      <Section>\n        <InputNumber\n          layout=\"horizontal\"\n          label=\"Target Value Row Number\"\n          data-test=\"Counter.General.TargetValueRowNumber\"\n          defaultValue={options.targetRowNumber}\n          onChange={(targetRowNumber: any) => onOptionsChange({ targetRowNumber })}\n        />\n      </Section>\n\n      {/* @ts-expect-error ts-migrate(2745) FIXME: This JSX tag's 'children' prop expects type 'never... Remove this comment to see the full error message */}\n      <Section>\n        {/* @ts-expect-error ts-migrate(2745) FIXME: This JSX tag's 'children' prop expects type 'never... Remove this comment to see the full error message */}\n        <Switch\n          // @ts-expect-error ts-migrate(2322) FIXME: Type 'string' is not assignable to type 'never'.\n          data-test=\"Counter.General.CountRows\"\n          // @ts-expect-error ts-migrate(2322) FIXME: Type 'any' is not assignable to type 'never'.\n          defaultChecked={options.countRow}\n          // @ts-expect-error ts-migrate(2322) FIXME: Type '(countRow: any) => any' is not assignable to... Remove this comment to see the full error message\n          onChange={(countRow: any) => onOptionsChange({ countRow })}>\n          Count Rows\n        </Switch>\n      </Section>\n    </React.Fragment>\n  );\n}\n\nGeneralSettings.propTypes = EditorPropTypes;\n"],"mappings":"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"}