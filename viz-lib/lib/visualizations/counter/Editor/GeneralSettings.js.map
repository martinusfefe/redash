{"version":3,"file":"GeneralSettings.js","names":["map","React","Section","Select","Input","InputNumber","Switch","EditorPropTypes","GeneralSettings","_ref","options","data","visualizationName","onOptionsChange","createElement","Fragment","layout","label","defaultValue","counterLabel","placeholder","onChange","e","target","value","counterColName","disabled","countRow","columns","col","Option","key","name","rowNumber","targetColName","targetRowNumber","defaultChecked","propTypes"],"sources":["../../../../src/visualizations/counter/Editor/GeneralSettings.tsx"],"sourcesContent":["import { map } from \"lodash\";\nimport React from \"react\";\nimport { Section, Select, Input, InputNumber, Switch } from \"@/components/visualizations/editor\";\nimport { EditorPropTypes } from \"@/visualizations/prop-types\";\n\nexport default function GeneralSettings({ options, data, visualizationName, onOptionsChange }: any) {\n  return (\n    <React.Fragment>\n      {/* @ts-expect-error ts-migrate(2745) FIXME: This JSX tag's 'children' prop expects type 'never... Remove this comment to see the full error message */}\n      <Section>\n        <Input\n          layout=\"horizontal\"\n          label=\"Counter Label\"\n          data-test=\"Counter.General.Label\"\n          defaultValue={options.counterLabel}\n          placeholder={visualizationName}\n          onChange={(e: any) => onOptionsChange({ counterLabel: e.target.value })}\n        />\n      </Section>\n\n      {/* @ts-expect-error ts-migrate(2745) FIXME: This JSX tag's 'children' prop expects type 'never... Remove this comment to see the full error message */}\n      <Section>\n        <Select\n          layout=\"horizontal\"\n          label=\"Counter Value Column Name\"\n          data-test=\"Counter.General.ValueColumn\"\n          defaultValue={options.counterColName}\n          disabled={options.countRow}\n          onChange={(counterColName: any) => onOptionsChange({ counterColName })}>\n          {map(data.columns, col => (\n            // @ts-expect-error ts-migrate(2339) FIXME: Property 'Option' does not exist on type '({ class... Remove this comment to see the full error message\n            <Select.Option key={col.name} data-test={\"Counter.General.ValueColumn.\" + col.name}>\n              {col.name}\n              {/* @ts-expect-error ts-migrate(2339) FIXME: Property 'Option' does not exist on type '({ class... Remove this comment to see the full error message */}\n            </Select.Option>\n          ))}\n        </Select>\n      </Section>\n\n      {/* @ts-expect-error ts-migrate(2745) FIXME: This JSX tag's 'children' prop expects type 'never... Remove this comment to see the full error message */}\n      <Section>\n        <InputNumber\n          layout=\"horizontal\"\n          label=\"Counter Value Row Number\"\n          data-test=\"Counter.General.ValueRowNumber\"\n          defaultValue={options.rowNumber}\n          disabled={options.countRow}\n          onChange={(rowNumber: any) => onOptionsChange({ rowNumber })}\n        />\n      </Section>\n\n      {/* @ts-expect-error ts-migrate(2745) FIXME: This JSX tag's 'children' prop expects type 'never... Remove this comment to see the full error message */}\n      <Section>\n        <Select\n          layout=\"horizontal\"\n          label=\"Target Value Column Name\"\n          data-test=\"Counter.General.TargetValueColumn\"\n          defaultValue={options.targetColName}\n          onChange={(targetColName: any) => onOptionsChange({ targetColName })}>\n          {/* @ts-expect-error ts-migrate(2339) FIXME: Property 'Option' does not exist on type '({ class... Remove this comment to see the full error message */}\n          <Select.Option value=\"\">No target value</Select.Option>\n          {map(data.columns, col => (\n            // @ts-expect-error ts-migrate(2339) FIXME: Property 'Option' does not exist on type '({ class... Remove this comment to see the full error message\n            <Select.Option key={col.name} data-test={\"Counter.General.TargetValueColumn.\" + col.name}>\n              {col.name}\n              {/* @ts-expect-error ts-migrate(2339) FIXME: Property 'Option' does not exist on type '({ class... Remove this comment to see the full error message */}\n            </Select.Option>\n          ))}\n        </Select>\n      </Section>\n\n      {/* @ts-expect-error ts-migrate(2745) FIXME: This JSX tag's 'children' prop expects type 'never... Remove this comment to see the full error message */}\n      <Section>\n        <InputNumber\n          layout=\"horizontal\"\n          label=\"Target Value Row Number\"\n          data-test=\"Counter.General.TargetValueRowNumber\"\n          defaultValue={options.targetRowNumber}\n          onChange={(targetRowNumber: any) => onOptionsChange({ targetRowNumber })}\n        />\n      </Section>\n\n      {/* @ts-expect-error ts-migrate(2745) FIXME: This JSX tag's 'children' prop expects type 'never... Remove this comment to see the full error message */}\n      <Section>\n        {/* @ts-expect-error ts-migrate(2745) FIXME: This JSX tag's 'children' prop expects type 'never... Remove this comment to see the full error message */}\n        <Switch\n          // @ts-expect-error ts-migrate(2322) FIXME: Type 'string' is not assignable to type 'never'.\n          data-test=\"Counter.General.CountRows\"\n          // @ts-expect-error ts-migrate(2322) FIXME: Type 'any' is not assignable to type 'never'.\n          defaultChecked={options.countRow}\n          // @ts-expect-error ts-migrate(2322) FIXME: Type '(countRow: any) => any' is not assignable to... Remove this comment to see the full error message\n          onChange={(countRow: any) => onOptionsChange({ countRow })}>\n          Count Rows\n        </Switch>\n      </Section>\n    </React.Fragment>\n  );\n}\n\nGeneralSettings.propTypes = EditorPropTypes;\n"],"mappings":"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"}