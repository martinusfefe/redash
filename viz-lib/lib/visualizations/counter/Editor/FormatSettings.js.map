{"version":3,"file":"FormatSettings.js","names":["React","Section","Input","InputNumber","Switch","EditorPropTypes","isValueNumber","FormatSettings","_ref","options","data","onOptionsChange","inputsEnabled","rows","createElement","Fragment","layout","label","defaultValue","stringDecimal","disabled","onChange","stringDecChar","e","target","value","stringThouSep","stringPrefix","stringSuffix","defaultChecked","formatTargetValue","propTypes"],"sources":["../../../../src/visualizations/counter/Editor/FormatSettings.tsx"],"sourcesContent":["import React from \"react\";\nimport { Section, Input, InputNumber, Switch } from \"@/components/visualizations/editor\";\nimport { EditorPropTypes } from \"@/visualizations/prop-types\";\n\nimport { isValueNumber } from \"../utils\";\n\nexport default function FormatSettings({ options, data, onOptionsChange }: any) {\n  const inputsEnabled = isValueNumber(data.rows, options);\n  return (\n    <React.Fragment>\n      {/* @ts-expect-error ts-migrate(2745) FIXME: This JSX tag's 'children' prop expects type 'never... Remove this comment to see the full error message */}\n      <Section>\n        <InputNumber\n          layout=\"horizontal\"\n          label=\"Formatting Decimal Place\"\n          data-test=\"Counter.Formatting.DecimalPlace\"\n          defaultValue={options.stringDecimal}\n          disabled={!inputsEnabled}\n          onChange={(stringDecimal: any) => onOptionsChange({ stringDecimal })}\n        />\n      </Section>\n\n      {/* @ts-expect-error ts-migrate(2745) FIXME: This JSX tag's 'children' prop expects type 'never... Remove this comment to see the full error message */}\n      <Section>\n        <Input\n          layout=\"horizontal\"\n          label=\"Formatting Decimal Character\"\n          data-test=\"Counter.Formatting.DecimalCharacter\"\n          defaultValue={options.stringDecChar}\n          disabled={!inputsEnabled}\n          onChange={(e: any) => onOptionsChange({ stringDecChar: e.target.value })}\n        />\n      </Section>\n\n      {/* @ts-expect-error ts-migrate(2745) FIXME: This JSX tag's 'children' prop expects type 'never... Remove this comment to see the full error message */}\n      <Section>\n        <Input\n          layout=\"horizontal\"\n          label=\"Formatting Thousands Separator\"\n          data-test=\"Counter.Formatting.ThousandsSeparator\"\n          defaultValue={options.stringThouSep}\n          disabled={!inputsEnabled}\n          onChange={(e: any) => onOptionsChange({ stringThouSep: e.target.value })}\n        />\n      </Section>\n\n      {/* @ts-expect-error ts-migrate(2745) FIXME: This JSX tag's 'children' prop expects type 'never... Remove this comment to see the full error message */}\n      <Section>\n        <Input\n          layout=\"horizontal\"\n          label=\"Formatting String Prefix\"\n          data-test=\"Counter.Formatting.StringPrefix\"\n          defaultValue={options.stringPrefix}\n          disabled={!inputsEnabled}\n          onChange={(e: any) => onOptionsChange({ stringPrefix: e.target.value })}\n        />\n      </Section>\n\n      {/* @ts-expect-error ts-migrate(2745) FIXME: This JSX tag's 'children' prop expects type 'never... Remove this comment to see the full error message */}\n      <Section>\n        <Input\n          layout=\"horizontal\"\n          label=\"Formatting String Suffix\"\n          data-test=\"Counter.Formatting.StringSuffix\"\n          defaultValue={options.stringSuffix}\n          disabled={!inputsEnabled}\n          onChange={(e: any) => onOptionsChange({ stringSuffix: e.target.value })}\n        />\n      </Section>\n\n      {/* @ts-expect-error ts-migrate(2745) FIXME: This JSX tag's 'children' prop expects type 'never... Remove this comment to see the full error message */}\n      <Section>\n        {/* @ts-expect-error ts-migrate(2745) FIXME: This JSX tag's 'children' prop expects type 'never... Remove this comment to see the full error message */}\n        <Switch\n          // @ts-expect-error ts-migrate(2322) FIXME: Type 'string' is not assignable to type 'never'.\n          data-test=\"Counter.Formatting.FormatTargetValue\"\n          // @ts-expect-error ts-migrate(2322) FIXME: Type 'any' is not assignable to type 'never'.\n          defaultChecked={options.formatTargetValue}\n          // @ts-expect-error ts-migrate(2322) FIXME: Type '(formatTargetValue: any) => any' is not assi... Remove this comment to see the full error message\n          onChange={(formatTargetValue: any) => onOptionsChange({ formatTargetValue })}>\n          Format Target Value\n        </Switch>\n      </Section>\n    </React.Fragment>\n  );\n}\n\nFormatSettings.propTypes = EditorPropTypes;\n"],"mappings":"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"}