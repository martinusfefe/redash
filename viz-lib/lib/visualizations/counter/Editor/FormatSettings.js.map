{"version":3,"file":"FormatSettings.js","names":["_react","_interopRequireDefault","require","_editor","_propTypes","_utils","obj","__esModule","default","FormatSettings","_ref","options","data","onOptionsChange","inputsEnabled","isValueNumber","rows","createElement","Fragment","Section","InputNumber","layout","label","defaultValue","stringDecimal","disabled","onChange","Input","stringDecChar","e","target","value","stringThouSep","stringPrefix","stringSuffix","Switch","defaultChecked","formatTargetValue","propTypes","EditorPropTypes"],"sources":["../../../../src/visualizations/counter/Editor/FormatSettings.tsx"],"sourcesContent":["import React from \"react\";\nimport { Section, Input, InputNumber, Switch } from \"@/components/visualizations/editor\";\nimport { EditorPropTypes } from \"@/visualizations/prop-types\";\n\nimport { isValueNumber } from \"../utils\";\n\nexport default function FormatSettings({ options, data, onOptionsChange }: any) {\n  const inputsEnabled = isValueNumber(data.rows, options);\n  return (\n    <React.Fragment>\n      {/* @ts-expect-error ts-migrate(2745) FIXME: This JSX tag's 'children' prop expects type 'never... Remove this comment to see the full error message */}\n      <Section>\n        <InputNumber\n          layout=\"horizontal\"\n          label=\"Formatting Decimal Place\"\n          data-test=\"Counter.Formatting.DecimalPlace\"\n          defaultValue={options.stringDecimal}\n          disabled={!inputsEnabled}\n          onChange={(stringDecimal: any) => onOptionsChange({ stringDecimal })}\n        />\n      </Section>\n\n      {/* @ts-expect-error ts-migrate(2745) FIXME: This JSX tag's 'children' prop expects type 'never... Remove this comment to see the full error message */}\n      <Section>\n        <Input\n          layout=\"horizontal\"\n          label=\"Formatting Decimal Character\"\n          data-test=\"Counter.Formatting.DecimalCharacter\"\n          defaultValue={options.stringDecChar}\n          disabled={!inputsEnabled}\n          onChange={(e: any) => onOptionsChange({ stringDecChar: e.target.value })}\n        />\n      </Section>\n\n      {/* @ts-expect-error ts-migrate(2745) FIXME: This JSX tag's 'children' prop expects type 'never... Remove this comment to see the full error message */}\n      <Section>\n        <Input\n          layout=\"horizontal\"\n          label=\"Formatting Thousands Separator\"\n          data-test=\"Counter.Formatting.ThousandsSeparator\"\n          defaultValue={options.stringThouSep}\n          disabled={!inputsEnabled}\n          onChange={(e: any) => onOptionsChange({ stringThouSep: e.target.value })}\n        />\n      </Section>\n\n      {/* @ts-expect-error ts-migrate(2745) FIXME: This JSX tag's 'children' prop expects type 'never... Remove this comment to see the full error message */}\n      <Section>\n        <Input\n          layout=\"horizontal\"\n          label=\"Formatting String Prefix\"\n          data-test=\"Counter.Formatting.StringPrefix\"\n          defaultValue={options.stringPrefix}\n          disabled={!inputsEnabled}\n          onChange={(e: any) => onOptionsChange({ stringPrefix: e.target.value })}\n        />\n      </Section>\n\n      {/* @ts-expect-error ts-migrate(2745) FIXME: This JSX tag's 'children' prop expects type 'never... Remove this comment to see the full error message */}\n      <Section>\n        <Input\n          layout=\"horizontal\"\n          label=\"Formatting String Suffix\"\n          data-test=\"Counter.Formatting.StringSuffix\"\n          defaultValue={options.stringSuffix}\n          disabled={!inputsEnabled}\n          onChange={(e: any) => onOptionsChange({ stringSuffix: e.target.value })}\n        />\n      </Section>\n\n      {/* @ts-expect-error ts-migrate(2745) FIXME: This JSX tag's 'children' prop expects type 'never... Remove this comment to see the full error message */}\n      <Section>\n        {/* @ts-expect-error ts-migrate(2745) FIXME: This JSX tag's 'children' prop expects type 'never... Remove this comment to see the full error message */}\n        <Switch\n          // @ts-expect-error ts-migrate(2322) FIXME: Type 'string' is not assignable to type 'never'.\n          data-test=\"Counter.Formatting.FormatTargetValue\"\n          // @ts-expect-error ts-migrate(2322) FIXME: Type 'any' is not assignable to type 'never'.\n          defaultChecked={options.formatTargetValue}\n          // @ts-expect-error ts-migrate(2322) FIXME: Type '(formatTargetValue: any) => any' is not assi... Remove this comment to see the full error message\n          onChange={(formatTargetValue: any) => onOptionsChange({ formatTargetValue })}>\n          Format Target Value\n        </Switch>\n      </Section>\n    </React.Fragment>\n  );\n}\n\nFormatSettings.propTypes = EditorPropTypes;\n"],"mappings":"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"}