{"version":3,"file":"utils.js","names":["isNumber","isFinite","toString","numeral","numberFormat","value","decimalPoints","decimalDelimiter","thousandsDelimiter","locale","localeData","savedDelimiters","delimiters","thousands","decimal","formatString","Number","result","format","getRowNumber","index","rowsCount","parseInt","wrappedIndex","Math","abs","formatValue","_ref","stringPrefix","stringSuffix","stringDecimal","stringDecChar","stringThouSep","formatTooltip","getCounterData","rows","options","visualizationName","length","countRow","counterColName","targetColName","counterLabel","counterValue","rowNumber","showTrend","targetRowNumber","targetValue","delta","trendPositive","counterValueTooltip","tooltipFormat","targetValueTooltip","formatTargetValue","isValueNumber"],"sources":["../../../src/visualizations/counter/utils.ts"],"sourcesContent":["import { isNumber, isFinite, toString } from \"lodash\";\nimport numeral from \"numeral\";\n\n// TODO: allow user to specify number format string instead of delimiters only\n// It will allow to remove this function (move all that weird formatting logic to a migration\n// that will set number format for all existing counter visualization)\nfunction numberFormat(value: any, decimalPoints: any, decimalDelimiter: any, thousandsDelimiter: any) {\n  // Temporarily update locale data (restore defaults after formatting)\n  const locale = numeral.localeData();\n  const savedDelimiters = locale.delimiters;\n\n  // Mimic old behavior - AngularJS `number` filter defaults:\n  // - `,` as thousands delimiter\n  // - `.` as decimal delimiter\n  // - three decimal points\n  locale.delimiters = {\n    thousands: \",\",\n    decimal: \".\",\n  };\n  let formatString = \"0,0.000\";\n  if ((Number.isFinite(decimalPoints) && decimalPoints >= 0) || decimalDelimiter || thousandsDelimiter) {\n    locale.delimiters = {\n      thousands: thousandsDelimiter,\n      decimal: decimalDelimiter || \".\",\n    };\n\n    formatString = \"0,0\";\n    if (decimalPoints > 0) {\n      formatString += \".\";\n      while (decimalPoints > 0) {\n        formatString += \"0\";\n        decimalPoints -= 1;\n      }\n    }\n  }\n  const result = numeral(value).format(formatString);\n\n  locale.delimiters = savedDelimiters;\n  return result;\n}\n\n// 0 - special case, use first record\n// 1..N - 1-based record number from beginning (wraps if greater than dataset size)\n// -1..-N - 1-based record number from end (wraps if greater than dataset size)\nfunction getRowNumber(index: any, rowsCount: any) {\n  index = parseInt(index, 10) || 0;\n  if (index === 0) {\n    return index;\n  }\n  const wrappedIndex = (Math.abs(index) - 1) % rowsCount;\n  return index > 0 ? wrappedIndex : rowsCount - wrappedIndex - 1;\n}\n\nfunction formatValue(value: any, { stringPrefix, stringSuffix, stringDecimal, stringDecChar, stringThouSep }: any) {\n  if (isNumber(value)) {\n    value = numberFormat(value, stringDecimal, stringDecChar, stringThouSep);\n    return toString(stringPrefix) + value + toString(stringSuffix);\n  }\n  return toString(value);\n}\n\nfunction formatTooltip(value: any, formatString: any) {\n  if (isNumber(value)) {\n    return numeral(value).format(formatString);\n  }\n  return toString(value);\n}\n\nexport function getCounterData(rows: any, options: any, visualizationName: any) {\n  const result = {};\n  const rowsCount = rows.length;\n\n  if (rowsCount > 0 || options.countRow) {\n    const counterColName = options.counterColName;\n    const targetColName = options.targetColName;\n\n    // @ts-expect-error ts-migrate(2339) FIXME: Property 'counterLabel' does not exist on type '{}... Remove this comment to see the full error message\n    result.counterLabel = options.counterLabel || visualizationName;\n\n    if (options.countRow) {\n      // @ts-expect-error ts-migrate(2339) FIXME: Property 'counterValue' does not exist on type '{}... Remove this comment to see the full error message\n      result.counterValue = rowsCount;\n    } else if (counterColName) {\n      const rowNumber = getRowNumber(options.rowNumber, rowsCount);\n      // @ts-expect-error ts-migrate(2339) FIXME: Property 'counterValue' does not exist on type '{}... Remove this comment to see the full error message\n      result.counterValue = rows[rowNumber][counterColName];\n    }\n\n    // @ts-expect-error ts-migrate(2339) FIXME: Property 'showTrend' does not exist on type '{}'.\n    result.showTrend = false;\n\n    if (targetColName) {\n      const targetRowNumber = getRowNumber(options.targetRowNumber, rowsCount);\n      // @ts-expect-error ts-migrate(2339) FIXME: Property 'targetValue' does not exist on type '{}'... Remove this comment to see the full error message\n      result.targetValue = rows[targetRowNumber][targetColName];\n\n      // @ts-expect-error ts-migrate(2339) FIXME: Property 'counterValue' does not exist on type '{}... Remove this comment to see the full error message\n      if (Number.isFinite(result.counterValue) && isFinite(result.targetValue)) {\n        // @ts-expect-error ts-migrate(2339) FIXME: Property 'counterValue' does not exist on type '{}... Remove this comment to see the full error message\n        const delta = result.counterValue - result.targetValue;\n        // @ts-expect-error ts-migrate(2339) FIXME: Property 'showTrend' does not exist on type '{}'.\n        result.showTrend = true;\n        // @ts-expect-error ts-migrate(2339) FIXME: Property 'trendPositive' does not exist on type '{... Remove this comment to see the full error message\n        result.trendPositive = delta >= 0;\n      }\n    } else {\n      // @ts-expect-error ts-migrate(2339) FIXME: Property 'targetValue' does not exist on type '{}'... Remove this comment to see the full error message\n      result.targetValue = null;\n    }\n\n    // @ts-expect-error ts-migrate(2339) FIXME: Property 'counterValueTooltip' does not exist on t... Remove this comment to see the full error message\n    result.counterValueTooltip = formatTooltip(result.counterValue, options.tooltipFormat);\n    // @ts-expect-error ts-migrate(2339) FIXME: Property 'targetValueTooltip' does not exist on ty... Remove this comment to see the full error message\n    result.targetValueTooltip = formatTooltip(result.targetValue, options.tooltipFormat);\n\n    // @ts-expect-error ts-migrate(2339) FIXME: Property 'counterValue' does not exist on type '{}... Remove this comment to see the full error message\n    result.counterValue = formatValue(result.counterValue, options);\n\n    if (options.formatTargetValue) {\n      // @ts-expect-error ts-migrate(2339) FIXME: Property 'targetValue' does not exist on type '{}'... Remove this comment to see the full error message\n      result.targetValue = formatValue(result.targetValue, options);\n    } else {\n      // @ts-expect-error ts-migrate(2339) FIXME: Property 'targetValue' does not exist on type '{}'... Remove this comment to see the full error message\n      if (isFinite(result.targetValue)) {\n        // @ts-expect-error ts-migrate(2339) FIXME: Property 'targetValue' does not exist on type '{}'... Remove this comment to see the full error message\n        result.targetValue = numeral(result.targetValue).format(\"0[.]00[0]\");\n      }\n    }\n  }\n\n  return result;\n}\n\nexport function isValueNumber(rows: any, options: any) {\n  if (options.countRow) {\n    return true; // array length is always a number\n  }\n\n  const rowsCount = rows.length;\n  if (rowsCount > 0) {\n    const rowNumber = getRowNumber(options.rowNumber, rowsCount);\n    const counterColName = options.counterColName;\n    if (counterColName) {\n      return isNumber(rows[rowNumber][counterColName]);\n    }\n  }\n\n  return false;\n}\n"],"mappings":"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"}