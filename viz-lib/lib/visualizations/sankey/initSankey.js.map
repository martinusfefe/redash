{"version":3,"file":"initSankey.js","names":["_lodash","require","_d","_interopRequireDefault","_d3sankey","obj","__esModule","default","getConnectedNodes","node","console","log","nodes","sourceLinks","forEach","link","push","target","targetLinks","source","graph","data","nodesDict","links","validKey","key","dataKeys","sortBy","filter","keys","identity","normalizeName","name","isNil","getNode","level","concat","String","id","getLink","value","addLink","sourceName","targetName","depth","parseInt","row","color","d3","scale","category20","map","d","extend","replace","values","spreadNodes","height","nodesByBreadth","nest","x","entries","sum","o","dy","padding","length","reduce","y0","y","isDataValid","find","columns","c","every","rows","v","isString","isFinite","prepareDataRows","mapValues","isNumber","isNaN","parseFloat","initSankey","element","select","selectAll","remove","format","margin","top","right","bottom","left","width","offsetWidth","offsetHeight","svg","append","attr","sankey","d3sankey","nodeWidth","nodePadding","size","path","layout","relayout","enter","l","style","Math","max","sort","a","b","text","n","nodeMouseOver","currentNode","i","includes","nodeMouseOut","on","rgb","darker"],"sources":["../../../src/visualizations/sankey/initSankey.ts"],"sourcesContent":["import {\n  isNil,\n  map,\n  extend,\n  sortBy,\n  includes,\n  filter,\n  reduce,\n  find,\n  keys,\n  values,\n  identity,\n  mapValues,\n  every,\n  isNaN,\n  isNumber,\n  isString,\n} from \"lodash\";\nimport d3 from \"d3\";\nimport d3sankey, { NodeType, LinkType, SourceTargetType, DType } from \"./d3sankey\";\nimport { SankeyDataType } from \".\";\n\nexport type ExtendedSankeyDataType = Partial<SankeyDataType> & { nodes: any[]; links: any[] };\n\nfunction getConnectedNodes(node: NodeType) {\n  console.log(node);\n  // source link = this node is the source, I need the targets\n  const nodes: any = [];\n  node.sourceLinks.forEach((link: LinkType) => {\n    nodes.push(link.target);\n  });\n  node.targetLinks.forEach((link: LinkType) => {\n    nodes.push(link.source);\n  });\n\n  return nodes;\n}\n\nfunction graph(data: ExtendedSankeyDataType[\"rows\"]) {\n  const nodesDict = {};\n  const links = {};\n  const nodes: any[] = [];\n\n  const validKey = (key: any) => key !== \"value\";\n  // @ts-expect-error\n  const dataKeys = sortBy(filter(keys(data[0]), validKey), identity);\n\n  function normalizeName(name: any) {\n    if (!isNil(name)) {\n      return \"\" + name;\n    }\n\n    return \"Exit\";\n  }\n\n  function getNode(name: string, level: any) {\n    name = normalizeName(name);\n    const key = `${name}:${String(level)}`;\n    // @ts-expect-error ts-migrate(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\n    let node = nodesDict[key];\n    if (!node) {\n      node = { name };\n      node.id = nodes.push(node) - 1;\n      // @ts-expect-error ts-migrate(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\n      nodesDict[key] = node;\n    }\n    return node;\n  }\n\n  function getLink(source: SourceTargetType, target: SourceTargetType) {\n    // @ts-expect-error ts-migrate(2538) FIXME: Type 'any[]' cannot be used as an index type.\n    let link = links[[source, target]];\n    if (!link) {\n      link = { target, source, value: 0 };\n      // @ts-expect-error ts-migrate(2538) FIXME: Type 'any[]' cannot be used as an index type.\n      links[[source, target]] = link;\n    }\n\n    return link;\n  }\n\n  function addLink(sourceName: any, targetName: any, value: any, depth: any) {\n    if ((sourceName === \"\" || !sourceName) && depth > 1) {\n      return;\n    }\n\n    const source = getNode(sourceName, depth);\n    const target = getNode(targetName, depth + 1);\n    const link = getLink(source.id, target.id);\n    link.value += parseInt(value, 10);\n  }\n\n  // @ts-expect-error\n  data.forEach((row: any) => {\n    addLink(row[dataKeys[0]], row[dataKeys[1]], row.value || 0, 1);\n    addLink(row[dataKeys[1]], row[dataKeys[2]], row.value || 0, 2);\n    addLink(row[dataKeys[2]], row[dataKeys[3]], row.value || 0, 3);\n    addLink(row[dataKeys[3]], row[dataKeys[4]], row.value || 0, 4);\n    addLink(row[dataKeys[4]], null, row.value || 0, 5); // this line ensures that the last stage has a corresponding exit node\n  });\n\n  // @ts-expect-error ts-migrate(2339) FIXME: Property 'scale' does not exist on type 'typeof im... Remove this comment to see the full error message\n  const color = d3.scale.category20();\n\n  return {\n    nodes: map(nodes, d => extend(d, { color: color(d.name.replace(/ .*/, \"\")) })),\n    links: values(links),\n  };\n}\n\nfunction spreadNodes(height: any, data: ExtendedSankeyDataType) {\n  const nodesByBreadth = d3\n    // @ts-expect-error ts-migrate(2339) FIXME: Property 'nest' does not exist on type 'typeof imp... Remove this comment to see the full error message\n    .nest()\n    .key((d: DType) => d.x)\n    .entries(data.nodes)\n    // @ts-expect-error\n    .map((d: DType) => d.values);\n\n  nodesByBreadth.forEach((nodes: any) => {\n    nodes = filter(\n      sortBy(nodes, node => -node.value),\n      node => node.name !== \"Exit\"\n    );\n\n    // @ts-expect-error ts-migrate(2571) FIXME: Object is of type 'unknown'.\n    const sum = d3.sum(nodes, o => o.dy);\n    const padding = (height - sum) / nodes.length;\n\n    reduce(\n      nodes,\n      (y0, node) => {\n        node.y = y0;\n        return y0 + node.dy + padding;\n      },\n      0\n    );\n  });\n}\n\nfunction isDataValid(data: ExtendedSankeyDataType) {\n  // data should contain column named 'value', otherwise no reason to render anything at all\n  if (!data || !find(data.columns, c => c.name === \"value\")) {\n    return false;\n  }\n  // prepareData will have coerced any invalid data rows into NaN, which is verified below\n  return every(data.rows, row =>\n    every(row, v => {\n      if (!v || isString(v)) {\n        return true;\n      }\n      return isFinite(v);\n    })\n  );\n}\n\n// will coerce number strings into valid numbers\nfunction prepareDataRows(rows: ExtendedSankeyDataType[\"rows\"]) {\n  return map(rows, row =>\n    mapValues(row, v => {\n      if (!v || isNumber(v)) {\n        return v;\n      }\n      return isNaN(parseFloat(v)) ? v : parseFloat(v);\n    })\n  );\n}\n\nexport default function initSankey(data: ExtendedSankeyDataType) {\n  data.rows = prepareDataRows(data.rows) as ExtendedSankeyDataType[\"rows\"];\n\n  if (!isDataValid(data)) {\n    return (element: HTMLDivElement) => {\n      d3.select(element)\n        .selectAll(\"*\")\n        .remove();\n    };\n  }\n\n  data = graph(data.rows);\n  // @ts-expect-error\n  const format = (d: DType) => d3.format(\",.0f\")(d); // TODO: editor option ?\n\n  return (element: HTMLDivElement) => {\n    d3.select(element)\n      .selectAll(\"*\")\n      .remove();\n\n    const margin = {\n      top: 10,\n      right: 10,\n      bottom: 10,\n      left: 10,\n    };\n    const width = element.offsetWidth - margin.left - margin.right;\n    const height = element.offsetHeight - margin.top - margin.bottom;\n\n    if (width <= 0 || height <= 0) {\n      return;\n    }\n\n    // append the svg canvas to the page\n    const svg: d3.Selection<SVGGElement, any, any, any> = d3\n      .select(element)\n      .append(\"svg\")\n      .attr(\"class\", \"sankey\")\n      .attr(\"width\", width + margin.left + margin.right)\n      .attr(\"height\", height + margin.top + margin.bottom)\n      .append(\"g\")\n      .attr(\"transform\", `translate(${margin.left},${margin.top})`);\n\n    // Set the sankey diagram properties\n    const sankey = d3sankey()\n      .nodeWidth(15)\n      .nodePadding(10)\n      .size([width, height]);\n\n    const path = sankey.link();\n\n    sankey\n      .nodes(data.nodes)\n      .links(data.links)\n      .layout(0);\n\n    spreadNodes(height, data);\n    sankey.relayout();\n\n    // add in the links\n    const link = svg\n      .append(\"g\")\n      .selectAll(\".link\")\n      .data(data.links)\n      .enter()\n      .append(\"path\")\n      .filter(l => l.target.name !== \"Exit\")\n      .attr(\"class\", \"link\")\n      .attr(\"d\", path)\n      .style(\"stroke-width\", d => Math.max(1, d.dy))\n      .sort((a, b) => b.dy - a.dy);\n\n    // add the link titles\n    link.append(\"title\").text(d => `${d.source.name} â†’ ${d.target.name}\\n${format(d.value)}`);\n\n    const node = svg\n      .append(\"g\")\n      .selectAll(\".node\")\n      .data(data.nodes)\n      .enter()\n      .append(\"g\")\n      .filter(n => n.name !== \"Exit\")\n      .attr(\"class\", \"node\")\n      .attr(\"transform\", (d: DType) => `translate(${d.x},${d.y})`);\n\n    function nodeMouseOver(currentNode: NodeType) {\n      let nodes = getConnectedNodes(currentNode);\n      nodes = map(nodes, i => i.id);\n      node\n        .filter(d => {\n          if (d === currentNode) {\n            return false;\n          }\n          return !includes(nodes, d.id);\n        })\n        .style(\"opacity\", 0.2);\n      link\n        .filter(l => !(includes(currentNode.sourceLinks, l) || includes(currentNode.targetLinks, l)))\n        .style(\"opacity\", 0.2);\n    }\n\n    function nodeMouseOut() {\n      node.style(\"opacity\", 1);\n      link.style(\"opacity\", 1);\n    }\n\n    // add in the nodes\n    node.on(\"mouseover\", nodeMouseOver).on(\"mouseout\", nodeMouseOut);\n\n    // add the rectangles for the nodes\n    // FIXME: d is DType, but d3 will not accept a nonstandard function\n    node\n      .append(\"rect\")\n      .attr(\"height\", (d: any) => d.dy)\n      .attr(\"width\", sankey.nodeWidth())\n      .style(\"fill\", (d: any) => d.color)\n      // @ts-expect-error\n      .style(\"stroke\", (d: any) => d3.rgb(d.color).darker(2))\n      .append(\"title\")\n      .text((d: any) => `${d.name}\\n${format(d.value)}`);\n\n    // add in the title for the nodes\n    node\n      .append(\"text\")\n      .attr(\"x\", -6)\n      .attr(\"y\", (d: any) => d.dy / 2)\n      .attr(\"dy\", \".35em\")\n      .attr(\"text-anchor\", \"end\")\n      .attr(\"transform\", null)\n      .text((d: any) => d.name)\n      .filter((d: any) => d.x < width / 2)\n      .attr(\"x\", 6 + sankey.nodeWidth())\n      .attr(\"text-anchor\", \"start\");\n  };\n}\n"],"mappings":";;;;;;AAAA,IAAAA,OAAA,GAAAC,OAAA;AAkBA,IAAAC,EAAA,GAAAC,sBAAA,CAAAF,OAAA;AACA,IAAAG,SAAA,GAAAD,sBAAA,CAAAF,OAAA;AAAmF,SAAAE,uBAAAE,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,KAAAE,OAAA,EAAAF,GAAA;AAKnF,SAASG,iBAAiBA,CAACC,IAAc,EAAE;EACzCC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;EACjB;EACA,IAAMG,KAAU,GAAG,EAAE;EACrBH,IAAI,CAACI,WAAW,CAACC,OAAO,CAAEC,IAAc,IAAK;IAC3CH,KAAK,CAACI,IAAI,CAACD,IAAI,CAACE,MAAM,CAAC;EACzB,CAAC,CAAC;EACFR,IAAI,CAACS,WAAW,CAACJ,OAAO,CAAEC,IAAc,IAAK;IAC3CH,KAAK,CAACI,IAAI,CAACD,IAAI,CAACI,MAAM,CAAC;EACzB,CAAC,CAAC;EAEF,OAAOP,KAAK;AACd;AAEA,SAASQ,KAAKA,CAACC,IAAoC,EAAE;EACnD,IAAMC,SAAS,GAAG,CAAC,CAAC;EACpB,IAAMC,KAAK,GAAG,CAAC,CAAC;EAChB,IAAMX,KAAY,GAAG,EAAE;EAEvB,IAAMY,QAAQ,GAAIC,GAAQ,IAAKA,GAAG,KAAK,OAAO;EAC9C;EACA,IAAMC,QAAQ,GAAG,IAAAC,cAAM,EAAC,IAAAC,cAAM,EAAC,IAAAC,YAAI,EAACR,IAAI,CAAC,CAAC,CAAC,CAAC,EAAEG,QAAQ,CAAC,EAAEM,gBAAQ,CAAC;EAElE,SAASC,aAAaA,CAACC,IAAS,EAAE;IAChC,IAAI,CAAC,IAAAC,aAAK,EAACD,IAAI,CAAC,EAAE;MAChB,OAAO,EAAE,GAAGA,IAAI;IAClB;IAEA,OAAO,MAAM;EACf;EAEA,SAASE,OAAOA,CAACF,IAAY,EAAEG,KAAU,EAAE;IACzCH,IAAI,GAAGD,aAAa,CAACC,IAAI,CAAC;IAC1B,IAAMP,GAAG,MAAAW,MAAA,CAAMJ,IAAI,OAAAI,MAAA,CAAIC,MAAM,CAACF,KAAK,CAAC,CAAE;IACtC;IACA,IAAI1B,IAAI,GAAGa,SAAS,CAACG,GAAG,CAAC;IACzB,IAAI,CAAChB,IAAI,EAAE;MACTA,IAAI,GAAG;QAAEuB;MAAK,CAAC;MACfvB,IAAI,CAAC6B,EAAE,GAAG1B,KAAK,CAACI,IAAI,CAACP,IAAI,CAAC,GAAG,CAAC;MAC9B;MACAa,SAAS,CAACG,GAAG,CAAC,GAAGhB,IAAI;IACvB;IACA,OAAOA,IAAI;EACb;EAEA,SAAS8B,OAAOA,CAACpB,MAAwB,EAAEF,MAAwB,EAAE;IACnE;IACA,IAAIF,IAAI,GAAGQ,KAAK,CAAC,CAACJ,MAAM,EAAEF,MAAM,CAAC,CAAC;IAClC,IAAI,CAACF,IAAI,EAAE;MACTA,IAAI,GAAG;QAAEE,MAAM;QAAEE,MAAM;QAAEqB,KAAK,EAAE;MAAE,CAAC;MACnC;MACAjB,KAAK,CAAC,CAACJ,MAAM,EAAEF,MAAM,CAAC,CAAC,GAAGF,IAAI;IAChC;IAEA,OAAOA,IAAI;EACb;EAEA,SAAS0B,OAAOA,CAACC,UAAe,EAAEC,UAAe,EAAEH,KAAU,EAAEI,KAAU,EAAE;IACzE,IAAI,CAACF,UAAU,KAAK,EAAE,IAAI,CAACA,UAAU,KAAKE,KAAK,GAAG,CAAC,EAAE;MACnD;IACF;IAEA,IAAMzB,MAAM,GAAGe,OAAO,CAACQ,UAAU,EAAEE,KAAK,CAAC;IACzC,IAAM3B,MAAM,GAAGiB,OAAO,CAACS,UAAU,EAAEC,KAAK,GAAG,CAAC,CAAC;IAC7C,IAAM7B,IAAI,GAAGwB,OAAO,CAACpB,MAAM,CAACmB,EAAE,EAAErB,MAAM,CAACqB,EAAE,CAAC;IAC1CvB,IAAI,CAACyB,KAAK,IAAIK,QAAQ,CAACL,KAAK,EAAE,EAAE,CAAC;EACnC;;EAEA;EACAnB,IAAI,CAACP,OAAO,CAAEgC,GAAQ,IAAK;IACzBL,OAAO,CAACK,GAAG,CAACpB,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAEoB,GAAG,CAACpB,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAEoB,GAAG,CAACN,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC;IAC9DC,OAAO,CAACK,GAAG,CAACpB,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAEoB,GAAG,CAACpB,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAEoB,GAAG,CAACN,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC;IAC9DC,OAAO,CAACK,GAAG,CAACpB,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAEoB,GAAG,CAACpB,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAEoB,GAAG,CAACN,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC;IAC9DC,OAAO,CAACK,GAAG,CAACpB,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAEoB,GAAG,CAACpB,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAEoB,GAAG,CAACN,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC;IAC9DC,OAAO,CAACK,GAAG,CAACpB,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,EAAEoB,GAAG,CAACN,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EACtD,CAAC,CAAC;;EAEF;EACA,IAAMO,KAAK,GAAGC,UAAE,CAACC,KAAK,CAACC,UAAU,CAAC,CAAC;EAEnC,OAAO;IACLtC,KAAK,EAAE,IAAAuC,WAAG,EAACvC,KAAK,EAAEwC,CAAC,IAAI,IAAAC,cAAM,EAACD,CAAC,EAAE;MAAEL,KAAK,EAAEA,KAAK,CAACK,CAAC,CAACpB,IAAI,CAACsB,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC;IAAE,CAAC,CAAC,CAAC;IAC9E/B,KAAK,EAAE,IAAAgC,cAAM,EAAChC,KAAK;EACrB,CAAC;AACH;AAEA,SAASiC,WAAWA,CAACC,MAAW,EAAEpC,IAA4B,EAAE;EAC9D,IAAMqC,cAAc,GAAGV;EACrB;EAAA,CACCW,IAAI,CAAC,CAAC,CACNlC,GAAG,CAAE2B,CAAQ,IAAKA,CAAC,CAACQ,CAAC,CAAC,CACtBC,OAAO,CAACxC,IAAI,CAACT,KAAK;EACnB;EAAA,CACCuC,GAAG,CAAEC,CAAQ,IAAKA,CAAC,CAACG,MAAM,CAAC;EAE9BG,cAAc,CAAC5C,OAAO,CAAEF,KAAU,IAAK;IACrCA,KAAK,GAAG,IAAAgB,cAAM,EACZ,IAAAD,cAAM,EAACf,KAAK,EAAEH,IAAI,IAAI,CAACA,IAAI,CAAC+B,KAAK,CAAC,EAClC/B,IAAI,IAAIA,IAAI,CAACuB,IAAI,KAAK,MACxB,CAAC;;IAED;IACA,IAAM8B,GAAG,GAAGd,UAAE,CAACc,GAAG,CAAClD,KAAK,EAAEmD,CAAC,IAAIA,CAAC,CAACC,EAAE,CAAC;IACpC,IAAMC,OAAO,GAAG,CAACR,MAAM,GAAGK,GAAG,IAAIlD,KAAK,CAACsD,MAAM;IAE7C,IAAAC,cAAM,EACJvD,KAAK,EACL,CAACwD,EAAE,EAAE3D,IAAI,KAAK;MACZA,IAAI,CAAC4D,CAAC,GAAGD,EAAE;MACX,OAAOA,EAAE,GAAG3D,IAAI,CAACuD,EAAE,GAAGC,OAAO;IAC/B,CAAC,EACD,CACF,CAAC;EACH,CAAC,CAAC;AACJ;AAEA,SAASK,WAAWA,CAACjD,IAA4B,EAAE;EACjD;EACA,IAAI,CAACA,IAAI,IAAI,CAAC,IAAAkD,YAAI,EAAClD,IAAI,CAACmD,OAAO,EAAEC,CAAC,IAAIA,CAAC,CAACzC,IAAI,KAAK,OAAO,CAAC,EAAE;IACzD,OAAO,KAAK;EACd;EACA;EACA,OAAO,IAAA0C,aAAK,EAACrD,IAAI,CAACsD,IAAI,EAAE7B,GAAG,IACzB,IAAA4B,aAAK,EAAC5B,GAAG,EAAE8B,CAAC,IAAI;IACd,IAAI,CAACA,CAAC,IAAI,IAAAC,gBAAQ,EAACD,CAAC,CAAC,EAAE;MACrB,OAAO,IAAI;IACb;IACA,OAAOE,QAAQ,CAACF,CAAC,CAAC;EACpB,CAAC,CACH,CAAC;AACH;;AAEA;AACA,SAASG,eAAeA,CAACJ,IAAoC,EAAE;EAC7D,OAAO,IAAAxB,WAAG,EAACwB,IAAI,EAAE7B,GAAG,IAClB,IAAAkC,iBAAS,EAAClC,GAAG,EAAE8B,CAAC,IAAI;IAClB,IAAI,CAACA,CAAC,IAAI,IAAAK,gBAAQ,EAACL,CAAC,CAAC,EAAE;MACrB,OAAOA,CAAC;IACV;IACA,OAAO,IAAAM,aAAK,EAACC,UAAU,CAACP,CAAC,CAAC,CAAC,GAAGA,CAAC,GAAGO,UAAU,CAACP,CAAC,CAAC;EACjD,CAAC,CACH,CAAC;AACH;AAEe,SAASQ,UAAUA,CAAC/D,IAA4B,EAAE;EAC/DA,IAAI,CAACsD,IAAI,GAAGI,eAAe,CAAC1D,IAAI,CAACsD,IAAI,CAAmC;EAExE,IAAI,CAACL,WAAW,CAACjD,IAAI,CAAC,EAAE;IACtB,OAAQgE,OAAuB,IAAK;MAClCrC,UAAE,CAACsC,MAAM,CAACD,OAAO,CAAC,CACfE,SAAS,CAAC,GAAG,CAAC,CACdC,MAAM,CAAC,CAAC;IACb,CAAC;EACH;EAEAnE,IAAI,GAAGD,KAAK,CAACC,IAAI,CAACsD,IAAI,CAAC;EACvB;EACA,IAAMc,MAAM,GAAIrC,CAAQ,IAAKJ,UAAE,CAACyC,MAAM,CAAC,MAAM,CAAC,CAACrC,CAAC,CAAC,CAAC,CAAC;;EAEnD,OAAQiC,OAAuB,IAAK;IAClCrC,UAAE,CAACsC,MAAM,CAACD,OAAO,CAAC,CACfE,SAAS,CAAC,GAAG,CAAC,CACdC,MAAM,CAAC,CAAC;IAEX,IAAME,MAAM,GAAG;MACbC,GAAG,EAAE,EAAE;MACPC,KAAK,EAAE,EAAE;MACTC,MAAM,EAAE,EAAE;MACVC,IAAI,EAAE;IACR,CAAC;IACD,IAAMC,KAAK,GAAGV,OAAO,CAACW,WAAW,GAAGN,MAAM,CAACI,IAAI,GAAGJ,MAAM,CAACE,KAAK;IAC9D,IAAMnC,MAAM,GAAG4B,OAAO,CAACY,YAAY,GAAGP,MAAM,CAACC,GAAG,GAAGD,MAAM,CAACG,MAAM;IAEhE,IAAIE,KAAK,IAAI,CAAC,IAAItC,MAAM,IAAI,CAAC,EAAE;MAC7B;IACF;;IAEA;IACA,IAAMyC,GAA6C,GAAGlD,UAAE,CACrDsC,MAAM,CAACD,OAAO,CAAC,CACfc,MAAM,CAAC,KAAK,CAAC,CACbC,IAAI,CAAC,OAAO,EAAE,QAAQ,CAAC,CACvBA,IAAI,CAAC,OAAO,EAAEL,KAAK,GAAGL,MAAM,CAACI,IAAI,GAAGJ,MAAM,CAACE,KAAK,CAAC,CACjDQ,IAAI,CAAC,QAAQ,EAAE3C,MAAM,GAAGiC,MAAM,CAACC,GAAG,GAAGD,MAAM,CAACG,MAAM,CAAC,CACnDM,MAAM,CAAC,GAAG,CAAC,CACXC,IAAI,CAAC,WAAW,eAAAhE,MAAA,CAAesD,MAAM,CAACI,IAAI,OAAA1D,MAAA,CAAIsD,MAAM,CAACC,GAAG,MAAG,CAAC;;IAE/D;IACA,IAAMU,MAAM,GAAG,IAAAC,iBAAQ,EAAC,CAAC,CACtBC,SAAS,CAAC,EAAE,CAAC,CACbC,WAAW,CAAC,EAAE,CAAC,CACfC,IAAI,CAAC,CAACV,KAAK,EAAEtC,MAAM,CAAC,CAAC;IAExB,IAAMiD,IAAI,GAAGL,MAAM,CAACtF,IAAI,CAAC,CAAC;IAE1BsF,MAAM,CACHzF,KAAK,CAACS,IAAI,CAACT,KAAK,CAAC,CACjBW,KAAK,CAACF,IAAI,CAACE,KAAK,CAAC,CACjBoF,MAAM,CAAC,CAAC,CAAC;IAEZnD,WAAW,CAACC,MAAM,EAAEpC,IAAI,CAAC;IACzBgF,MAAM,CAACO,QAAQ,CAAC,CAAC;;IAEjB;IACA,IAAM7F,IAAI,GAAGmF,GAAG,CACbC,MAAM,CAAC,GAAG,CAAC,CACXZ,SAAS,CAAC,OAAO,CAAC,CAClBlE,IAAI,CAACA,IAAI,CAACE,KAAK,CAAC,CAChBsF,KAAK,CAAC,CAAC,CACPV,MAAM,CAAC,MAAM,CAAC,CACdvE,MAAM,CAACkF,CAAC,IAAIA,CAAC,CAAC7F,MAAM,CAACe,IAAI,KAAK,MAAM,CAAC,CACrCoE,IAAI,CAAC,OAAO,EAAE,MAAM,CAAC,CACrBA,IAAI,CAAC,GAAG,EAAEM,IAAI,CAAC,CACfK,KAAK,CAAC,cAAc,EAAE3D,CAAC,IAAI4D,IAAI,CAACC,GAAG,CAAC,CAAC,EAAE7D,CAAC,CAACY,EAAE,CAAC,CAAC,CAC7CkD,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAACpD,EAAE,GAAGmD,CAAC,CAACnD,EAAE,CAAC;;IAE9B;IACAjD,IAAI,CAACoF,MAAM,CAAC,OAAO,CAAC,CAACkB,IAAI,CAACjE,CAAC,OAAAhB,MAAA,CAAOgB,CAAC,CAACjC,MAAM,CAACa,IAAI,cAAAI,MAAA,CAAMgB,CAAC,CAACnC,MAAM,CAACe,IAAI,QAAAI,MAAA,CAAKqD,MAAM,CAACrC,CAAC,CAACZ,KAAK,CAAC,CAAE,CAAC;IAEzF,IAAM/B,IAAI,GAAGyF,GAAG,CACbC,MAAM,CAAC,GAAG,CAAC,CACXZ,SAAS,CAAC,OAAO,CAAC,CAClBlE,IAAI,CAACA,IAAI,CAACT,KAAK,CAAC,CAChBiG,KAAK,CAAC,CAAC,CACPV,MAAM,CAAC,GAAG,CAAC,CACXvE,MAAM,CAAC0F,CAAC,IAAIA,CAAC,CAACtF,IAAI,KAAK,MAAM,CAAC,CAC9BoE,IAAI,CAAC,OAAO,EAAE,MAAM,CAAC,CACrBA,IAAI,CAAC,WAAW,EAAGhD,CAAQ,iBAAAhB,MAAA,CAAkBgB,CAAC,CAACQ,CAAC,OAAAxB,MAAA,CAAIgB,CAAC,CAACiB,CAAC,MAAG,CAAC;IAE9D,SAASkD,aAAaA,CAACC,WAAqB,EAAE;MAC5C,IAAI5G,KAAK,GAAGJ,iBAAiB,CAACgH,WAAW,CAAC;MAC1C5G,KAAK,GAAG,IAAAuC,WAAG,EAACvC,KAAK,EAAE6G,CAAC,IAAIA,CAAC,CAACnF,EAAE,CAAC;MAC7B7B,IAAI,CACDmB,MAAM,CAACwB,CAAC,IAAI;QACX,IAAIA,CAAC,KAAKoE,WAAW,EAAE;UACrB,OAAO,KAAK;QACd;QACA,OAAO,CAAC,IAAAE,gBAAQ,EAAC9G,KAAK,EAAEwC,CAAC,CAACd,EAAE,CAAC;MAC/B,CAAC,CAAC,CACDyE,KAAK,CAAC,SAAS,EAAE,GAAG,CAAC;MACxBhG,IAAI,CACDa,MAAM,CAACkF,CAAC,IAAI,EAAE,IAAAY,gBAAQ,EAACF,WAAW,CAAC3G,WAAW,EAAEiG,CAAC,CAAC,IAAI,IAAAY,gBAAQ,EAACF,WAAW,CAACtG,WAAW,EAAE4F,CAAC,CAAC,CAAC,CAAC,CAC5FC,KAAK,CAAC,SAAS,EAAE,GAAG,CAAC;IAC1B;IAEA,SAASY,YAAYA,CAAA,EAAG;MACtBlH,IAAI,CAACsG,KAAK,CAAC,SAAS,EAAE,CAAC,CAAC;MACxBhG,IAAI,CAACgG,KAAK,CAAC,SAAS,EAAE,CAAC,CAAC;IAC1B;;IAEA;IACAtG,IAAI,CAACmH,EAAE,CAAC,WAAW,EAAEL,aAAa,CAAC,CAACK,EAAE,CAAC,UAAU,EAAED,YAAY,CAAC;;IAEhE;IACA;IACAlH,IAAI,CACD0F,MAAM,CAAC,MAAM,CAAC,CACdC,IAAI,CAAC,QAAQ,EAAGhD,CAAM,IAAKA,CAAC,CAACY,EAAE,CAAC,CAChCoC,IAAI,CAAC,OAAO,EAAEC,MAAM,CAACE,SAAS,CAAC,CAAC,CAAC,CACjCQ,KAAK,CAAC,MAAM,EAAG3D,CAAM,IAAKA,CAAC,CAACL,KAAK;IAClC;IAAA,CACCgE,KAAK,CAAC,QAAQ,EAAG3D,CAAM,IAAKJ,UAAE,CAAC6E,GAAG,CAACzE,CAAC,CAACL,KAAK,CAAC,CAAC+E,MAAM,CAAC,CAAC,CAAC,CAAC,CACtD3B,MAAM,CAAC,OAAO,CAAC,CACfkB,IAAI,CAAEjE,CAAM,OAAAhB,MAAA,CAAQgB,CAAC,CAACpB,IAAI,QAAAI,MAAA,CAAKqD,MAAM,CAACrC,CAAC,CAACZ,KAAK,CAAC,CAAE,CAAC;;IAEpD;IACA/B,IAAI,CACD0F,MAAM,CAAC,MAAM,CAAC,CACdC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CACbA,IAAI,CAAC,GAAG,EAAGhD,CAAM,IAAKA,CAAC,CAACY,EAAE,GAAG,CAAC,CAAC,CAC/BoC,IAAI,CAAC,IAAI,EAAE,OAAO,CAAC,CACnBA,IAAI,CAAC,aAAa,EAAE,KAAK,CAAC,CAC1BA,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,CACvBiB,IAAI,CAAEjE,CAAM,IAAKA,CAAC,CAACpB,IAAI,CAAC,CACxBJ,MAAM,CAAEwB,CAAM,IAAKA,CAAC,CAACQ,CAAC,GAAGmC,KAAK,GAAG,CAAC,CAAC,CACnCK,IAAI,CAAC,GAAG,EAAE,CAAC,GAAGC,MAAM,CAACE,SAAS,CAAC,CAAC,CAAC,CACjCH,IAAI,CAAC,aAAa,EAAE,OAAO,CAAC;EACjC,CAAC;AACH"}