{"version":3,"file":"initSankey.js","names":["isNil","map","extend","sortBy","includes","filter","reduce","find","keys","values","identity","mapValues","every","isNaN","isNumber","isString","d3","d3sankey","getConnectedNodes","node","console","log","nodes","sourceLinks","forEach","link","push","target","targetLinks","source","graph","data","nodesDict","links","validKey","key","dataKeys","normalizeName","name","getNode","level","concat","String","id","getLink","value","addLink","sourceName","targetName","depth","parseInt","row","color","scale","category20","d","replace","spreadNodes","height","nodesByBreadth","nest","x","entries","sum","o","dy","padding","length","y0","y","isDataValid","columns","c","rows","v","isFinite","prepareDataRows","parseFloat","initSankey","element","select","selectAll","remove","format","margin","top","right","bottom","left","width","offsetWidth","offsetHeight","svg","append","attr","sankey","nodeWidth","nodePadding","size","path","layout","relayout","enter","l","style","Math","max","sort","a","b","text","n","nodeMouseOver","currentNode","i","nodeMouseOut","on","rgb","darker"],"sources":["../../../src/visualizations/sankey/initSankey.ts"],"sourcesContent":["import {\n  isNil,\n  map,\n  extend,\n  sortBy,\n  includes,\n  filter,\n  reduce,\n  find,\n  keys,\n  values,\n  identity,\n  mapValues,\n  every,\n  isNaN,\n  isNumber,\n  isString,\n} from \"lodash\";\nimport * as d3 from \"d3\";\nimport d3sankey, { NodeType, LinkType, SourceTargetType, DType } from \"./d3sankey\";\nimport { SankeyDataType } from \".\";\n\nexport type ExtendedSankeyDataType = Partial<SankeyDataType> & { nodes: any[]; links: any[] };\n\nfunction getConnectedNodes(node: NodeType) {\n  console.log(node);\n  // source link = this node is the source, I need the targets\n  const nodes: any = [];\n  node.sourceLinks.forEach((link: LinkType) => {\n    nodes.push(link.target);\n  });\n  node.targetLinks.forEach((link: LinkType) => {\n    nodes.push(link.source);\n  });\n\n  return nodes;\n}\n\nfunction graph(data: ExtendedSankeyDataType[\"rows\"]) {\n  const nodesDict = {};\n  const links = {};\n  const nodes: any[] = [];\n\n  const validKey = (key: any) => key !== \"value\";\n  // @ts-expect-error\n  const dataKeys = sortBy(filter(keys(data[0]), validKey), identity);\n\n  function normalizeName(name: any) {\n    if (!isNil(name)) {\n      return \"\" + name;\n    }\n\n    return \"Exit\";\n  }\n\n  function getNode(name: string, level: any) {\n    name = normalizeName(name);\n    const key = `${name}:${String(level)}`;\n    // @ts-expect-error ts-migrate(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\n    let node = nodesDict[key];\n    if (!node) {\n      node = { name };\n      node.id = nodes.push(node) - 1;\n      // @ts-expect-error ts-migrate(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\n      nodesDict[key] = node;\n    }\n    return node;\n  }\n\n  function getLink(source: SourceTargetType, target: SourceTargetType) {\n    // @ts-expect-error ts-migrate(2538) FIXME: Type 'any[]' cannot be used as an index type.\n    let link = links[[source, target]];\n    if (!link) {\n      link = { target, source, value: 0 };\n      // @ts-expect-error ts-migrate(2538) FIXME: Type 'any[]' cannot be used as an index type.\n      links[[source, target]] = link;\n    }\n\n    return link;\n  }\n\n  function addLink(sourceName: any, targetName: any, value: any, depth: any) {\n    if ((sourceName === \"\" || !sourceName) && depth > 1) {\n      return;\n    }\n\n    const source = getNode(sourceName, depth);\n    const target = getNode(targetName, depth + 1);\n    const link = getLink(source.id, target.id);\n    link.value += parseInt(value, 10);\n  }\n\n  // @ts-expect-error\n  data.forEach((row: any) => {\n    addLink(row[dataKeys[0]], row[dataKeys[1]], row.value || 0, 1);\n    addLink(row[dataKeys[1]], row[dataKeys[2]], row.value || 0, 2);\n    addLink(row[dataKeys[2]], row[dataKeys[3]], row.value || 0, 3);\n    addLink(row[dataKeys[3]], row[dataKeys[4]], row.value || 0, 4);\n    addLink(row[dataKeys[4]], null, row.value || 0, 5); // this line ensures that the last stage has a corresponding exit node\n  });\n\n  // @ts-expect-error ts-migrate(2339) FIXME: Property 'scale' does not exist on type 'typeof im... Remove this comment to see the full error message\n  const color = d3.scale.category20();\n\n  return {\n    nodes: map(nodes, d => extend(d, { color: color(d.name.replace(/ .*/, \"\")) })),\n    links: values(links),\n  };\n}\n\nfunction spreadNodes(height: any, data: ExtendedSankeyDataType) {\n  const nodesByBreadth = d3\n    // @ts-expect-error ts-migrate(2339) FIXME: Property 'nest' does not exist on type 'typeof imp... Remove this comment to see the full error message\n    .nest()\n    .key((d: DType) => d.x)\n    .entries(data.nodes)\n    // @ts-expect-error\n    .map((d: DType) => d.values);\n\n  nodesByBreadth.forEach((nodes: any) => {\n    nodes = filter(\n      sortBy(nodes, node => -node.value),\n      node => node.name !== \"Exit\"\n    );\n\n    // @ts-expect-error ts-migrate(2571) FIXME: Object is of type 'unknown'.\n    const sum = d3.sum(nodes, o => o.dy);\n    const padding = (height - sum) / nodes.length;\n\n    reduce(\n      nodes,\n      (y0, node) => {\n        node.y = y0;\n        return y0 + node.dy + padding;\n      },\n      0\n    );\n  });\n}\n\nfunction isDataValid(data: ExtendedSankeyDataType) {\n  // data should contain column named 'value', otherwise no reason to render anything at all\n  if (!data || !find(data.columns, c => c.name === \"value\")) {\n    return false;\n  }\n  // prepareData will have coerced any invalid data rows into NaN, which is verified below\n  return every(data.rows, row =>\n    every(row, v => {\n      if (!v || isString(v)) {\n        return true;\n      }\n      return isFinite(v);\n    })\n  );\n}\n\n// will coerce number strings into valid numbers\nfunction prepareDataRows(rows: ExtendedSankeyDataType[\"rows\"]) {\n  return map(rows, row =>\n    mapValues(row, v => {\n      if (!v || isNumber(v)) {\n        return v;\n      }\n      return isNaN(parseFloat(v)) ? v : parseFloat(v);\n    })\n  );\n}\n\nexport default function initSankey(data: ExtendedSankeyDataType) {\n  data.rows = prepareDataRows(data.rows) as ExtendedSankeyDataType[\"rows\"];\n\n  if (!isDataValid(data)) {\n    return (element: HTMLDivElement) => {\n      d3.select(element)\n        .selectAll(\"*\")\n        .remove();\n    };\n  }\n\n  data = graph(data.rows);\n  // @ts-expect-error\n  const format = (d: DType) => d3.format(\",.0f\")(d); // TODO: editor option ?\n\n  return (element: HTMLDivElement) => {\n    d3.select(element)\n      .selectAll(\"*\")\n      .remove();\n\n    const margin = {\n      top: 10,\n      right: 10,\n      bottom: 10,\n      left: 10,\n    };\n    const width = element.offsetWidth - margin.left - margin.right;\n    const height = element.offsetHeight - margin.top - margin.bottom;\n\n    if (width <= 0 || height <= 0) {\n      return;\n    }\n\n    // append the svg canvas to the page\n    const svg: d3.Selection<SVGGElement, any, any, any> = d3\n      .select(element)\n      .append(\"svg\")\n      .attr(\"class\", \"sankey\")\n      .attr(\"width\", width + margin.left + margin.right)\n      .attr(\"height\", height + margin.top + margin.bottom)\n      .append(\"g\")\n      .attr(\"transform\", `translate(${margin.left},${margin.top})`);\n\n    // Set the sankey diagram properties\n    const sankey = d3sankey()\n      .nodeWidth(15)\n      .nodePadding(10)\n      .size([width, height]);\n\n    const path = sankey.link();\n\n    sankey\n      .nodes(data.nodes)\n      .links(data.links)\n      .layout(0);\n\n    spreadNodes(height, data);\n    sankey.relayout();\n\n    // add in the links\n    const link = svg\n      .append(\"g\")\n      .selectAll(\".link\")\n      .data(data.links)\n      .enter()\n      .append(\"path\")\n      .filter(l => l.target.name !== \"Exit\")\n      .attr(\"class\", \"link\")\n      .attr(\"d\", path)\n      .style(\"stroke-width\", d => Math.max(1, d.dy))\n      .sort((a, b) => b.dy - a.dy);\n\n    // add the link titles\n    link.append(\"title\").text(d => `${d.source.name} â†’ ${d.target.name}\\n${format(d.value)}`);\n\n    const node = svg\n      .append(\"g\")\n      .selectAll(\".node\")\n      .data(data.nodes)\n      .enter()\n      .append(\"g\")\n      .filter(n => n.name !== \"Exit\")\n      .attr(\"class\", \"node\")\n      .attr(\"transform\", (d: DType) => `translate(${d.x},${d.y})`);\n\n    function nodeMouseOver(currentNode: NodeType) {\n      let nodes = getConnectedNodes(currentNode);\n      nodes = map(nodes, i => i.id);\n      node\n        .filter(d => {\n          if (d === currentNode) {\n            return false;\n          }\n          return !includes(nodes, d.id);\n        })\n        .style(\"opacity\", 0.2);\n      link\n        .filter(l => !(includes(currentNode.sourceLinks, l) || includes(currentNode.targetLinks, l)))\n        .style(\"opacity\", 0.2);\n    }\n\n    function nodeMouseOut() {\n      node.style(\"opacity\", 1);\n      link.style(\"opacity\", 1);\n    }\n\n    // add in the nodes\n    node.on(\"mouseover\", nodeMouseOver).on(\"mouseout\", nodeMouseOut);\n\n    // add the rectangles for the nodes\n    // FIXME: d is DType, but d3 will not accept a nonstandard function\n    node\n      .append(\"rect\")\n      .attr(\"height\", (d: any) => d.dy)\n      .attr(\"width\", sankey.nodeWidth())\n      .style(\"fill\", (d: any) => d.color)\n      // @ts-expect-error\n      .style(\"stroke\", (d: any) => d3.rgb(d.color).darker(2))\n      .append(\"title\")\n      .text((d: any) => `${d.name}\\n${format(d.value)}`);\n\n    // add in the title for the nodes\n    node\n      .append(\"text\")\n      .attr(\"x\", -6)\n      .attr(\"y\", (d: any) => d.dy / 2)\n      .attr(\"dy\", \".35em\")\n      .attr(\"text-anchor\", \"end\")\n      .attr(\"transform\", null)\n      .text((d: any) => d.name)\n      .filter((d: any) => d.x < width / 2)\n      .attr(\"x\", 6 + sankey.nodeWidth())\n      .attr(\"text-anchor\", \"start\");\n  };\n}\n"],"mappings":"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"}