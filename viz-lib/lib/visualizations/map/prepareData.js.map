{"version":3,"file":"prepareData.js","names":["d3","_interopRequireWildcard","require","_lodash","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","prepareData","data","options","colorScale","scale","category10","classify","latColName","lonColName","pointGroups","groupBy","rows","All","filter","map","name","points","row","lat","lon","isNil","omit","length","result","extend","groups","color"],"sources":["../../../src/visualizations/map/prepareData.ts"],"sourcesContent":["import * as d3 from \"d3\";\nimport { isNil, extend, map, filter, groupBy, omit } from \"lodash\";\n\nexport default function prepareData(data: any, options: any) {\n  // @ts-expect-error ts-migrate(2339) FIXME: Property 'scale' does not exist on type 'typeof im... Remove this comment to see the full error message\n  const colorScale = d3.scale.category10();\n\n  const { classify, latColName, lonColName } = options;\n\n  const pointGroups = classify ? groupBy(data.rows, classify) : { All: data.rows };\n\n  return filter(\n    map(pointGroups, (rows, name) => {\n      const points = filter(\n        map(rows, row => {\n          const lat = row[latColName];\n          const lon = row[lonColName];\n          if (isNil(lat) || isNil(lon)) {\n            return null;\n          }\n          return { lat, lon, row: omit(row, [latColName, lonColName]) };\n        })\n      );\n      if (points.length === 0) {\n        return null;\n      }\n\n      const result = extend({}, options.groups[name], { name, points });\n      if (isNil(result.color)) {\n        result.color = colorScale(name);\n      }\n\n      return result;\n    })\n  );\n}\n"],"mappings":"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"}