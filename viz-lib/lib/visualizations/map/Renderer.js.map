{"version":3,"file":"Renderer.js","names":["_lodash","require","_react","_interopRequireWildcard","_propTypes","_prepareData","_interopRequireDefault","_initMap","obj","__esModule","default","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_slicedToArray","arr","i","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","TypeError","o","minLen","_arrayLikeToArray","n","toString","slice","constructor","name","Array","from","test","len","length","arr2","_i","Symbol","iterator","_s","_e","_x","_r","_arr","_n","_d","next","done","push","value","err","return","isArray","useMemoWithDeepCompare","create","inputs","valueRef","useRef","useMemo","isEqual","current","Renderer","_ref","data","options","onOptionsChange","_useState","useState","_useState2","container","setContainer","optionsWithoutBounds","omit","groups","prepareData","_useState3","_useState4","map","setMap","useEffect","_map","initMap","destroy","updateLayers","updateBounds","bounds","onBoundsChange","merge","createElement","className","ref","propTypes","RendererPropTypes"],"sources":["../../../src/visualizations/map/Renderer.tsx"],"sourcesContent":["import { isEqual, omit, merge } from \"lodash\";\nimport React, { useState, useEffect, useRef, useMemo } from \"react\";\nimport { RendererPropTypes } from \"@/visualizations/prop-types\";\n\nimport prepareData from \"./prepareData\";\nimport initMap from \"./initMap\";\n\nfunction useMemoWithDeepCompare(create: any, inputs: any) {\n  const valueRef = useRef();\n  const value = useMemo(create, inputs);\n  if (!isEqual(value, valueRef.current)) {\n    // @ts-expect-error ts-migrate(2322) FIXME: Type 'unknown' is not assignable to type 'undefine... Remove this comment to see the full error message\n    valueRef.current = value;\n  }\n  return valueRef.current;\n}\n\nexport default function Renderer({ data, options, onOptionsChange }: any) {\n  const [container, setContainer] = useState(null);\n\n  const optionsWithoutBounds = useMemoWithDeepCompare(() => omit(options, [\"bounds\"]), [options]);\n\n  const groups = useMemo(() => prepareData(data, optionsWithoutBounds), [data, optionsWithoutBounds]);\n\n  const [map, setMap] = useState(null);\n\n  useEffect(() => {\n    if (container) {\n      const _map = initMap(container);\n      // @ts-expect-error ts-migrate(2345) FIXME: Argument of type '{ onBoundsChange: () => void; up... Remove this comment to see the full error message\n      setMap(_map);\n      return () => {\n        _map.destroy();\n      };\n    }\n  }, [container]);\n\n  useEffect(() => {\n    if (map) {\n      // @ts-expect-error ts-migrate(2531) FIXME: Object is possibly 'null'.\n      map.updateLayers(groups, optionsWithoutBounds);\n    }\n  }, [map, groups, optionsWithoutBounds]);\n\n  useEffect(() => {\n    if (map) {\n      // @ts-expect-error ts-migrate(2531) FIXME: Object is possibly 'null'.\n      map.updateBounds(options.bounds);\n    }\n  }, [map, options.bounds]);\n\n  useEffect(() => {\n    if (map && onOptionsChange) {\n      // @ts-expect-error ts-migrate(2531) FIXME: Object is possibly 'null'.\n      map.onBoundsChange = (bounds: any) => {\n        onOptionsChange(merge({}, options, { bounds }));\n      };\n    }\n  }, [map, options, onOptionsChange]);\n\n  // @ts-expect-error ts-migrate(2322) FIXME: Type 'Dispatch<SetStateAction<null>>' is not assig... Remove this comment to see the full error message\n  return <div className=\"map-visualization-container\" ref={setContainer} />;\n}\n\nRenderer.propTypes = RendererPropTypes;\n"],"mappings":"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"}