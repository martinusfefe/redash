{"version":3,"file":"GroupsSettings.js","names":["map","React","useMemo","useCallback","Table","ColorPicker","EditorPropTypes","ColorPalette","prepareData","GroupsSettings","_ref","options","data","onOptionsChange","groups","_ref2","name","color","colors","_objectSpread","Automatic","updateGroupOption","prop","value","columns","title","dataIndex","width","render","unused","item","createElement","interactive","presetColors","placement","triggerProps","concat","onChange","addonAfter","Label","dataSource","rowKey","showHeader","pagination","propTypes"],"sources":["../../../../src/visualizations/map/Editor/GroupsSettings.tsx"],"sourcesContent":["import { map } from \"lodash\";\nimport React, { useMemo, useCallback } from \"react\";\nimport Table from \"antd/lib/table\";\nimport ColorPicker from \"@/components/ColorPicker\";\nimport { EditorPropTypes } from \"@/visualizations/prop-types\";\nimport ColorPalette from \"@/visualizations/ColorPalette\";\n\nimport prepareData from \"../prepareData\";\n\nexport default function GroupsSettings({ options, data, onOptionsChange }: any) {\n  const groups = useMemo(\n    () => map(prepareData(data, options), ({ name }) => ({ name, color: (options.groups[name] || {}).color || null })),\n    [data, options]\n  );\n\n  const colors = useMemo(\n    () => ({\n      Automatic: null,\n      ...ColorPalette,\n    }),\n    []\n  );\n\n  const updateGroupOption = useCallback(\n    (name, prop, value) => {\n      onOptionsChange({\n        groups: {\n          [name]: {\n            [prop]: value,\n          },\n        },\n      });\n    },\n    [onOptionsChange]\n  );\n\n  const columns = [\n    {\n      title: \"Group\",\n      dataIndex: \"name\",\n    },\n    {\n      title: \"Color\",\n      dataIndex: \"color\",\n      width: \"1%\",\n      render: (unused: any, item: any) => (\n        <ColorPicker\n          // @ts-expect-error ts-migrate(2322) FIXME: Type 'boolean' is not assignable to type 'never'.\n          interactive\n          // @ts-expect-error ts-migrate(2322) FIXME: Type '{ \"Indian Red\": string; \"Green 2\": string; \"... Remove this comment to see the full error message\n          presetColors={colors}\n          // @ts-expect-error ts-migrate(2322) FIXME: Type 'string' is not assignable to type 'never'.\n          placement=\"topRight\"\n          // @ts-expect-error ts-migrate(2322) FIXME: Type 'any' is not assignable to type 'never'.\n          color={item.color}\n          // @ts-expect-error ts-migrate(2322) FIXME: Type 'string' is not assignable to type 'never'.\n          triggerProps={{ \"data-test\": `Map.Editor.Groups.${item.name}.Color` }}\n          // @ts-expect-error ts-migrate(2322) FIXME: Type '(value: any) => void' is not assignable to t... Remove this comment to see the full error message\n          onChange={(value: any) => updateGroupOption(item.name, \"color\", value)}\n          // @ts-expect-error ts-migrate(2322) FIXME: Type 'Element' is not assignable to type 'never'.\n          addonAfter={<ColorPicker.Label color={item.color} presetColors={colors} />}\n        />\n      ),\n    },\n  ];\n\n  return <Table columns={columns} dataSource={groups} rowKey=\"name\" showHeader={false} pagination={false} />;\n}\n\nGroupsSettings.propTypes = EditorPropTypes;\n"],"mappings":";;;;;AAAA,SAASA,GAAG,QAAQ,QAAQ;AAC5B,OAAOC,KAAK,IAAIC,OAAO,EAAEC,WAAW,QAAQ,OAAO;AACnD,OAAOC,KAAK,MAAM,gBAAgB;AAClC,OAAOC,WAAW;AAClB,SAASC,eAAe;AACxB,OAAOC,YAAY;AAEnB,OAAOC,WAAW;AAElB,eAAe,SAASC,cAAcA,CAAAC,IAAA,EAA0C;EAAA,IAAvCC,OAAO,GAAAD,IAAA,CAAPC,OAAO;IAAEC,IAAI,GAAAF,IAAA,CAAJE,IAAI;IAAEC,eAAe,GAAAH,IAAA,CAAfG,eAAe;EACrE,IAAMC,MAAM,GAAGZ,OAAO,CACpB,MAAMF,GAAG,CAACQ,WAAW,CAACI,IAAI,EAAED,OAAO,CAAC,EAAEI,KAAA;IAAA,IAAGC,IAAI,GAAAD,KAAA,CAAJC,IAAI;IAAA,OAAQ;MAAEA,IAAI;MAAEC,KAAK,EAAE,CAACN,OAAO,CAACG,MAAM,CAACE,IAAI,CAAC,IAAI,CAAC,CAAC,EAAEC,KAAK,IAAI;IAAK,CAAC;EAAA,CAAC,CAAC,EAClH,CAACL,IAAI,EAAED,OAAO,CAChB,CAAC;EAED,IAAMO,MAAM,GAAGhB,OAAO,CACpB,MAAAiB,aAAA;IACEC,SAAS,EAAE;EAAI,GACZb,YAAY,CACf,EACF,EACF,CAAC;EAED,IAAMc,iBAAiB,GAAGlB,WAAW,CACnC,CAACa,IAAI,EAAEM,IAAI,EAAEC,KAAK,KAAK;IACrBV,eAAe,CAAC;MACdC,MAAM,EAAE;QACN,CAACE,IAAI,GAAG;UACN,CAACM,IAAI,GAAGC;QACV;MACF;IACF,CAAC,CAAC;EACJ,CAAC,EACD,CAACV,eAAe,CAClB,CAAC;EAED,IAAMW,OAAO,GAAG,CACd;IACEC,KAAK,EAAE,OAAO;IACdC,SAAS,EAAE;EACb,CAAC,EACD;IACED,KAAK,EAAE,OAAO;IACdC,SAAS,EAAE,OAAO;IAClBC,KAAK,EAAE,IAAI;IACXC,MAAM,EAAEA,CAACC,MAAW,EAAEC,IAAS,kBAC7B7B,KAAA,CAAA8B,aAAA,CAAC1B;IACC;IAAA;MACA2B,WAAW;MACX;MAAA;MACAC,YAAY,EAAEf;MACd;MAAA;MACAgB,SAAS,EAAC;MACV;MAAA;MACAjB,KAAK,EAAEa,IAAI,CAACb;MACZ;MAAA;MACAkB,YAAY,EAAE;QAAE,WAAW,uBAAAC,MAAA,CAAuBN,IAAI,CAACd,IAAI;MAAS;MACpE;MAAA;MACAqB,QAAQ,EAAGd,KAAU,IAAKF,iBAAiB,CAACS,IAAI,CAACd,IAAI,EAAE,OAAO,EAAEO,KAAK;MACrE;MAAA;MACAe,UAAU,eAAErC,KAAA,CAAA8B,aAAA,CAAC1B,WAAW,CAACkC,KAAK;QAACtB,KAAK,EAAEa,IAAI,CAACb,KAAM;QAACgB,YAAY,EAAEf;MAAO,CAAE;IAAE,CAC5E;EAEL,CAAC,CACF;EAED,oBAAOjB,KAAA,CAAA8B,aAAA,CAAC3B,KAAK;IAACoB,OAAO,EAAEA,OAAQ;IAACgB,UAAU,EAAE1B,MAAO;IAAC2B,MAAM,EAAC,MAAM;IAACC,UAAU,EAAE,KAAM;IAACC,UAAU,EAAE;EAAM,CAAE,CAAC;AAC5G;AAEAlC,cAAc,CAACmC,SAAS,GAAGtC,eAAe"}