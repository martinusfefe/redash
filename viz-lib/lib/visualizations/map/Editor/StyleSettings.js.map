{"version":3,"file":"StyleSettings.js","names":["isNil","map","React","useMemo","useDebouncedCallback","Section","Select","Checkbox","Input","ColorPicker","ContextHelp","EditorPropTypes","ColorPalette","mapTiles","name","url","CustomColorPalette","_objectSpread","White","getCustomIconOptionFields","iconShape","showIcon","showBackgroundColor","showBorderColor","StyleSettings","_ref","options","onOptionsChange","_useDebouncedCallback","_useDebouncedCallback2","_slicedToArray","debouncedOnOptionsChange","_useMemo","isCustomMarkersStyleAllowed","classify","createElement","Fragment","label","value","mapTileUrl","onChange","_ref2","Option","key","Title","defaultChecked","clusterMarkers","event","target","checked","disabled","customizeMarkers","placement","arrowPointAtCenter","layout","style","marginBottom","href","rel","defaultValue","iconFont","interactive","presetColors","color","foregroundColor","triggerProps","addonAfter","Label","backgroundColor","borderColor","propTypes"],"sources":["../../../../src/visualizations/map/Editor/StyleSettings.tsx"],"sourcesContent":["import { isNil, map } from \"lodash\";\nimport React, { useMemo } from \"react\";\nimport { useDebouncedCallback } from \"use-debounce\";\nimport { Section, Select, Checkbox, Input, ColorPicker, ContextHelp } from \"@/components/visualizations/editor\";\nimport { EditorPropTypes } from \"@/visualizations/prop-types\";\nimport ColorPalette from \"@/visualizations/ColorPalette\";\n\nconst mapTiles = [\n  {\n    name: \"OpenStreetMap\",\n    url: \"//{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n  },\n  {\n    name: \"OpenStreetMap BW\",\n    url: \"//{s}.tiles.wmflabs.org/bw-mapnik/{z}/{x}/{y}.png\",\n  },\n  {\n    name: \"OpenStreetMap DE\",\n    url: \"//{s}.tile.openstreetmap.de/tiles/osmde/{z}/{x}/{y}.png\",\n  },\n  {\n    name: \"OpenStreetMap FR\",\n    url: \"//{s}.tile.openstreetmap.fr/osmfr/{z}/{x}/{y}.png\",\n  },\n  {\n    name: \"OpenStreetMap Hot\",\n    url: \"//{s}.tile.openstreetmap.fr/hot/{z}/{x}/{y}.png\",\n  },\n  {\n    name: \"Thunderforest\",\n    url: \"//{s}.tile.thunderforest.com/cycle/{z}/{x}/{y}.png\",\n  },\n  {\n    name: \"Thunderforest Spinal\",\n    url: \"//{s}.tile.thunderforest.com/spinal-map/{z}/{x}/{y}.png\",\n  },\n  {\n    name: \"OpenMapSurfer\",\n    url: \"//korona.geog.uni-heidelberg.de/tiles/roads/x={x}&y={y}&z={z}\",\n  },\n  {\n    name: \"Stamen Toner\",\n    url: \"//stamen-tiles-{s}.a.ssl.fastly.net/toner/{z}/{x}/{y}.png\",\n  },\n  {\n    name: \"Stamen Toner Background\",\n    url: \"//stamen-tiles-{s}.a.ssl.fastly.net/toner-background/{z}/{x}/{y}.png\",\n  },\n  {\n    name: \"Stamen Toner Lite\",\n    url: \"//stamen-tiles-{s}.a.ssl.fastly.net/toner-lite/{z}/{x}/{y}.png\",\n  },\n  {\n    name: \"OpenTopoMap\",\n    url: \"//{s}.tile.opentopomap.org/{z}/{x}/{y}.png\",\n  },\n];\n\nconst CustomColorPalette = {\n  White: \"#ffffff\",\n  ...ColorPalette,\n};\n\nfunction getCustomIconOptionFields(iconShape: any) {\n  switch (iconShape) {\n    case \"doughnut\":\n      return { showIcon: false, showBackgroundColor: true, showBorderColor: true };\n    case \"circle-dot\":\n    case \"rectangle-dot\":\n      return { showIcon: false, showBackgroundColor: false, showBorderColor: true };\n    default:\n      return { showIcon: true, showBackgroundColor: true, showBorderColor: true };\n  }\n}\n\nexport default function StyleSettings({ options, onOptionsChange }: any) {\n  const [debouncedOnOptionsChange] = useDebouncedCallback(onOptionsChange, 200);\n\n  const { showIcon, showBackgroundColor, showBorderColor } = useMemo(\n    () => getCustomIconOptionFields(options.iconShape),\n    [options.iconShape]\n  );\n\n  const isCustomMarkersStyleAllowed = isNil(options.classify);\n\n  return (\n    <React.Fragment>\n      {/* @ts-expect-error ts-migrate(2745) FIXME: This JSX tag's 'children' prop expects type 'never... Remove this comment to see the full error message */}\n      <Section>\n        <Select\n          label=\"Map Tiles\"\n          data-test=\"Map.Editor.Tiles\"\n          value={options.mapTileUrl}\n          onChange={(mapTileUrl: any) => onOptionsChange({ mapTileUrl })}>\n          {map(mapTiles, ({ name, url }) => (\n            // @ts-expect-error ts-migrate(2339) FIXME: Property 'Option' does not exist on type '({ class... Remove this comment to see the full error message\n            <Select.Option key={url} data-test={\"Map.Editor.Tiles.\" + name}>\n              {name}\n              {/* @ts-expect-error ts-migrate(2339) FIXME: Property 'Option' does not exist on type '({ class... Remove this comment to see the full error message */}\n            </Select.Option>\n          ))}\n        </Select>\n      </Section>\n\n      {/* @ts-expect-error ts-migrate(2745) FIXME: This JSX tag's 'children' prop expects type 'never... Remove this comment to see the full error message */}\n      <Section.Title>Markers</Section.Title>\n\n      {/* @ts-expect-error ts-migrate(2745) FIXME: This JSX tag's 'children' prop expects type 'never... Remove this comment to see the full error message */}\n      <Section>\n        <Checkbox\n          data-test=\"Map.Editor.ClusterMarkers\"\n          defaultChecked={options.clusterMarkers}\n          onChange={event => onOptionsChange({ clusterMarkers: event.target.checked })}>\n          Cluster Markers\n        </Checkbox>\n      </Section>\n\n      {/* @ts-expect-error ts-migrate(2746) FIXME: This JSX tag's 'children' prop expects a single ch... Remove this comment to see the full error message */}\n      <Section>\n        <Checkbox\n          data-test=\"Map.Editor.CustomizeMarkers\"\n          disabled={!isCustomMarkersStyleAllowed}\n          defaultChecked={options.customizeMarkers}\n          onChange={event => onOptionsChange({ customizeMarkers: event.target.checked })}>\n          Override default style\n        </Checkbox>\n        {!isCustomMarkersStyleAllowed && (\n          // @ts-expect-error ts-migrate(2746) FIXME: This JSX tag's 'children' prop expects a single ch... Remove this comment to see the full error message\n          <ContextHelp placement=\"topLeft\" arrowPointAtCenter>\n            Custom marker styles are not available\n            <br />\n            when <b>Group By</b> column selected.\n          </ContextHelp>\n        )}\n      </Section>\n\n      {isCustomMarkersStyleAllowed && options.customizeMarkers && (\n        <React.Fragment>\n          {/* @ts-expect-error ts-migrate(2745) FIXME: This JSX tag's 'children' prop expects type 'never... Remove this comment to see the full error message */}\n          <Section>\n            <Select\n              layout=\"horizontal\"\n              label=\"Shape\"\n              data-test=\"Map.Editor.MarkerShape\"\n              value={options.iconShape}\n              onChange={(iconShape: any) => onOptionsChange({ iconShape })}>\n              {/* @ts-expect-error ts-migrate(2339) FIXME: Property 'Option' does not exist on type '({ class... Remove this comment to see the full error message */}\n              <Select.Option key=\"marker\" data-test=\"Map.Editor.MarkerShape.marker\">\n                Marker + Icon\n                {/* @ts-expect-error ts-migrate(2339) FIXME: Property 'Option' does not exist on type '({ class... Remove this comment to see the full error message */}\n              </Select.Option>\n              {/* @ts-expect-error ts-migrate(2339) FIXME: Property 'Option' does not exist on type '({ class... Remove this comment to see the full error message */}\n              <Select.Option key=\"doughnut\" data-test=\"Map.Editor.MarkerShape.doughnut\">\n                Circle\n                {/* @ts-expect-error ts-migrate(2339) FIXME: Property 'Option' does not exist on type '({ class... Remove this comment to see the full error message */}\n              </Select.Option>\n              {/* @ts-expect-error ts-migrate(2339) FIXME: Property 'Option' does not exist on type '({ class... Remove this comment to see the full error message */}\n              <Select.Option key=\"circle-dot\" data-test=\"Map.Editor.MarkerShape.circle-dot\">\n                Circle Dot\n                {/* @ts-expect-error ts-migrate(2339) FIXME: Property 'Option' does not exist on type '({ class... Remove this comment to see the full error message */}\n              </Select.Option>\n              {/* @ts-expect-error ts-migrate(2339) FIXME: Property 'Option' does not exist on type '({ class... Remove this comment to see the full error message */}\n              <Select.Option key=\"circle\" data-test=\"Map.Editor.MarkerShape.circle\">\n                Circle + Icon\n                {/* @ts-expect-error ts-migrate(2339) FIXME: Property 'Option' does not exist on type '({ class... Remove this comment to see the full error message */}\n              </Select.Option>\n              {/* @ts-expect-error ts-migrate(2339) FIXME: Property 'Option' does not exist on type '({ class... Remove this comment to see the full error message */}\n              <Select.Option key=\"rectangle-dot\" data-test=\"Map.Editor.MarkerShape.rectangle-dot\">\n                Square Dot\n                {/* @ts-expect-error ts-migrate(2339) FIXME: Property 'Option' does not exist on type '({ class... Remove this comment to see the full error message */}\n              </Select.Option>\n              {/* @ts-expect-error ts-migrate(2339) FIXME: Property 'Option' does not exist on type '({ class... Remove this comment to see the full error message */}\n              <Select.Option key=\"rectangle\" data-test=\"Map.Editor.MarkerShape.rectangle\">\n                Square + Icon\n                {/* @ts-expect-error ts-migrate(2339) FIXME: Property 'Option' does not exist on type '({ class... Remove this comment to see the full error message */}\n              </Select.Option>\n            </Select>\n          </Section>\n\n          {showIcon && (\n            // @ts-expect-error ts-migrate(2745) FIXME: This JSX tag's 'children' prop expects type 'never... Remove this comment to see the full error message\n            <Section>\n              <Input\n                layout=\"horizontal\"\n                label={\n                  <React.Fragment>\n                    Icon\n                    {/* @ts-expect-error ts-migrate(2746) FIXME: This JSX tag's 'children' prop expects a single ch... Remove this comment to see the full error message */}\n                    <ContextHelp placement=\"topLeft\" arrowPointAtCenter>\n                      <div style={{ marginBottom: 5 }}>\n                        Enter an icon name from{\" \"}\n                        <a href=\"https://fontawesome.com/v4.7.0/icons/\" target=\"_blank\" rel=\"noopener noreferrer\">\n                          Font-Awesome 4.7\n                        </a>\n                      </div>\n                      <div style={{ marginBottom: 5 }}>\n                        Examples: <code>check</code>, <code>times-circle</code>, <code>flag</code>\n                      </div>\n                      <div>Leave blank to remove.</div>\n                    </ContextHelp>\n                  </React.Fragment>\n                }\n                data-test=\"Map.Editor.MarkerIcon\"\n                defaultValue={options.iconFont}\n                onChange={(event: any) => debouncedOnOptionsChange({ iconFont: event.target.value })}\n              />\n            </Section>\n          )}\n\n          {showIcon && (\n            // @ts-expect-error ts-migrate(2745) FIXME: This JSX tag's 'children' prop expects type 'never... Remove this comment to see the full error message\n            <Section>\n              <ColorPicker\n                layout=\"horizontal\"\n                label=\"Icon Color\"\n                interactive\n                presetColors={CustomColorPalette}\n                placement=\"topRight\"\n                color={options.foregroundColor}\n                triggerProps={{ \"data-test\": \"Map.Editor.MarkerIconColor\" }}\n                onChange={(foregroundColor: any) => onOptionsChange({ foregroundColor })}\n                // @ts-expect-error ts-migrate(2339) FIXME: Property 'Label' does not exist on type '({ classN... Remove this comment to see the full error message\n                addonAfter={<ColorPicker.Label color={options.foregroundColor} presetColors={CustomColorPalette} />}\n              />\n            </Section>\n          )}\n\n          {showBackgroundColor && (\n            // @ts-expect-error ts-migrate(2745) FIXME: This JSX tag's 'children' prop expects type 'never... Remove this comment to see the full error message\n            <Section>\n              <ColorPicker\n                layout=\"horizontal\"\n                label=\"Background Color\"\n                interactive\n                presetColors={CustomColorPalette}\n                placement=\"topRight\"\n                color={options.backgroundColor}\n                triggerProps={{ \"data-test\": \"Map.Editor.MarkerBackgroundColor\" }}\n                onChange={(backgroundColor: any) => onOptionsChange({ backgroundColor })}\n                // @ts-expect-error ts-migrate(2339) FIXME: Property 'Label' does not exist on type '({ classN... Remove this comment to see the full error message\n                addonAfter={<ColorPicker.Label color={options.backgroundColor} presetColors={CustomColorPalette} />}\n              />\n            </Section>\n          )}\n\n          {showBorderColor && (\n            // @ts-expect-error ts-migrate(2745) FIXME: This JSX tag's 'children' prop expects type 'never... Remove this comment to see the full error message\n            <Section>\n              <ColorPicker\n                layout=\"horizontal\"\n                label=\"Border Color\"\n                interactive\n                presetColors={CustomColorPalette}\n                placement=\"topRight\"\n                color={options.borderColor}\n                triggerProps={{ \"data-test\": \"Map.Editor.MarkerBorderColor\" }}\n                onChange={(borderColor: any) => onOptionsChange({ borderColor })}\n                // @ts-expect-error ts-migrate(2339) FIXME: Property 'Label' does not exist on type '({ classN... Remove this comment to see the full error message\n                addonAfter={<ColorPicker.Label color={options.borderColor} presetColors={CustomColorPalette} />}\n              />\n            </Section>\n          )}\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n}\n\nStyleSettings.propTypes = EditorPropTypes;\n"],"mappings":"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"}