{"version":3,"file":"GeneralSettings.js","names":["_lodash","require","_react","_interopRequireWildcard","_editor","_propTypes","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","getColumns","column","unusedColumns","filter","v","isNil","GeneralSettings","_ref","options","data","onOptionsChange","useMemo","difference","map","columns","c","name","latColName","lonColName","classify","createElement","Fragment","Section","Select","label","value","onChange","col","Option","allowClear","placeholder","undefined","propTypes","EditorPropTypes"],"sources":["../../../../src/visualizations/map/Editor/GeneralSettings.tsx"],"sourcesContent":["import { isNil, map, filter, difference } from \"lodash\";\nimport React, { useMemo } from \"react\";\nimport { Section, Select } from \"@/components/visualizations/editor\";\nimport { EditorPropTypes } from \"@/visualizations/prop-types\";\n\nfunction getColumns(column: any, unusedColumns: any) {\n  return filter([column, ...unusedColumns], v => !isNil(v));\n}\n\nexport default function GeneralSettings({ options, data, onOptionsChange }: any) {\n  const unusedColumns = useMemo(\n    () =>\n      difference(\n        map(data.columns, c => c.name),\n        [options.latColName, options.lonColName, options.classify]\n      ),\n    [data, options.latColName, options.lonColName, options.classify]\n  );\n\n  return (\n    <React.Fragment>\n      {/* @ts-expect-error ts-migrate(2745) FIXME: This JSX tag's 'children' prop expects type 'never... Remove this comment to see the full error message */}\n      <Section>\n        <Select\n          label=\"Latitude Column Name\"\n          data-test=\"Map.Editor.LatitudeColumnName\"\n          value={options.latColName}\n          onChange={(latColName: any) => onOptionsChange({ latColName })}>\n          {map(getColumns(options.latColName, unusedColumns), col => (\n            // @ts-expect-error ts-migrate(2339) FIXME: Property 'Option' does not exist on type '({ class... Remove this comment to see the full error message\n            <Select.Option key={col} data-test={\"Map.Editor.LatitudeColumnName.\" + col}>\n              {col}\n              {/* @ts-expect-error ts-migrate(2339) FIXME: Property 'Option' does not exist on type '({ class... Remove this comment to see the full error message */}\n            </Select.Option>\n          ))}\n        </Select>\n      </Section>\n\n      {/* @ts-expect-error ts-migrate(2745) FIXME: This JSX tag's 'children' prop expects type 'never... Remove this comment to see the full error message */}\n      <Section>\n        <Select\n          label=\"Longitude Column Name\"\n          data-test=\"Map.Editor.LongitudeColumnName\"\n          value={options.lonColName}\n          onChange={(lonColName: any) => onOptionsChange({ lonColName })}>\n          {map(getColumns(options.lonColName, unusedColumns), col => (\n            // @ts-expect-error ts-migrate(2339) FIXME: Property 'Option' does not exist on type '({ class... Remove this comment to see the full error message\n            <Select.Option key={col} data-test={\"Map.Editor.LongitudeColumnName.\" + col}>\n              {col}\n              {/* @ts-expect-error ts-migrate(2339) FIXME: Property 'Option' does not exist on type '({ class... Remove this comment to see the full error message */}\n            </Select.Option>\n          ))}\n        </Select>\n      </Section>\n\n      {/* @ts-expect-error ts-migrate(2745) FIXME: This JSX tag's 'children' prop expects type 'never... Remove this comment to see the full error message */}\n      <Section>\n        <Select\n          label=\"Group By\"\n          data-test=\"Map.Editor.GroupBy\"\n          allowClear\n          placeholder=\"none\"\n          value={options.classify || undefined}\n          onChange={(column: any) => onOptionsChange({ classify: column || null })}>\n          {map(getColumns(options.classify, unusedColumns), col => (\n            // @ts-expect-error ts-migrate(2339) FIXME: Property 'Option' does not exist on type '({ class... Remove this comment to see the full error message\n            <Select.Option key={col} data-test={\"Map.Editor.GroupBy.\" + col}>\n              {col}\n              {/* @ts-expect-error ts-migrate(2339) FIXME: Property 'Option' does not exist on type '({ class... Remove this comment to see the full error message */}\n            </Select.Option>\n          ))}\n        </Select>\n      </Section>\n    </React.Fragment>\n  );\n}\n\nGeneralSettings.propTypes = EditorPropTypes;\n"],"mappings":";;;;;;AAAA,IAAAA,OAAA,GAAAC,OAAA;AACA,IAAAC,MAAA,GAAAC,uBAAA,CAAAF,OAAA;AACA,IAAAG,OAAA,GAAAH,OAAA;AACA,IAAAI,UAAA,GAAAJ,OAAA;AAA8D,SAAAK,yBAAAC,WAAA,eAAAC,OAAA,kCAAAC,iBAAA,OAAAD,OAAA,QAAAE,gBAAA,OAAAF,OAAA,YAAAF,wBAAA,YAAAA,yBAAAC,WAAA,WAAAA,WAAA,GAAAG,gBAAA,GAAAD,iBAAA,KAAAF,WAAA;AAAA,SAAAJ,wBAAAQ,GAAA,EAAAJ,WAAA,SAAAA,WAAA,IAAAI,GAAA,IAAAA,GAAA,CAAAC,UAAA,WAAAD,GAAA,QAAAA,GAAA,oBAAAA,GAAA,wBAAAA,GAAA,4BAAAE,OAAA,EAAAF,GAAA,UAAAG,KAAA,GAAAR,wBAAA,CAAAC,WAAA,OAAAO,KAAA,IAAAA,KAAA,CAAAC,GAAA,CAAAJ,GAAA,YAAAG,KAAA,CAAAE,GAAA,CAAAL,GAAA,SAAAM,MAAA,WAAAC,qBAAA,GAAAC,MAAA,CAAAC,cAAA,IAAAD,MAAA,CAAAE,wBAAA,WAAAC,GAAA,IAAAX,GAAA,QAAAW,GAAA,kBAAAH,MAAA,CAAAI,SAAA,CAAAC,cAAA,CAAAC,IAAA,CAAAd,GAAA,EAAAW,GAAA,SAAAI,IAAA,GAAAR,qBAAA,GAAAC,MAAA,CAAAE,wBAAA,CAAAV,GAAA,EAAAW,GAAA,cAAAI,IAAA,KAAAA,IAAA,CAAAV,GAAA,IAAAU,IAAA,CAAAC,GAAA,KAAAR,MAAA,CAAAC,cAAA,CAAAH,MAAA,EAAAK,GAAA,EAAAI,IAAA,YAAAT,MAAA,CAAAK,GAAA,IAAAX,GAAA,CAAAW,GAAA,SAAAL,MAAA,CAAAJ,OAAA,GAAAF,GAAA,MAAAG,KAAA,IAAAA,KAAA,CAAAa,GAAA,CAAAhB,GAAA,EAAAM,MAAA,YAAAA,MAAA;AAE9D,SAASW,UAAUA,CAACC,MAAW,EAAEC,aAAkB,EAAE;EACnD,OAAO,IAAAC,cAAM,EAAC,CAACF,MAAM,EAAE,GAAGC,aAAa,CAAC,EAAEE,CAAC,IAAI,CAAC,IAAAC,aAAK,EAACD,CAAC,CAAC,CAAC;AAC3D;AAEe,SAASE,eAAeA,CAAAC,IAAA,EAA0C;EAAA,IAAvCC,OAAO,GAAAD,IAAA,CAAPC,OAAO;IAAEC,IAAI,GAAAF,IAAA,CAAJE,IAAI;IAAEC,eAAe,GAAAH,IAAA,CAAfG,eAAe;EACtE,IAAMR,aAAa,GAAG,IAAAS,cAAO,EAC3B,MACE,IAAAC,kBAAU,EACR,IAAAC,WAAG,EAACJ,IAAI,CAACK,OAAO,EAAEC,CAAC,IAAIA,CAAC,CAACC,IAAI,CAAC,EAC9B,CAACR,OAAO,CAACS,UAAU,EAAET,OAAO,CAACU,UAAU,EAAEV,OAAO,CAACW,QAAQ,CAC3D,CAAC,EACH,CAACV,IAAI,EAAED,OAAO,CAACS,UAAU,EAAET,OAAO,CAACU,UAAU,EAAEV,OAAO,CAACW,QAAQ,CACjE,CAAC;EAED,oBACE7C,MAAA,CAAAW,OAAA,CAAAmC,aAAA,CAAC9C,MAAA,CAAAW,OAAK,CAACoC,QAAQ,qBAEb/C,MAAA,CAAAW,OAAA,CAAAmC,aAAA,CAAC5C,OAAA,CAAA8C,OAAO,qBACNhD,MAAA,CAAAW,OAAA,CAAAmC,aAAA,CAAC5C,OAAA,CAAA+C,MAAM;IACLC,KAAK,EAAC,sBAAsB;IAC5B,aAAU,+BAA+B;IACzCC,KAAK,EAAEjB,OAAO,CAACS,UAAW;IAC1BS,QAAQ,EAAGT,UAAe,IAAKP,eAAe,CAAC;MAAEO;IAAW,CAAC;EAAE,GAC9D,IAAAJ,WAAG,EAACb,UAAU,CAACQ,OAAO,CAACS,UAAU,EAAEf,aAAa,CAAC,EAAEyB,GAAG;EAAA;EACrD;EACArD,MAAA,CAAAW,OAAA,CAAAmC,aAAA,CAAC5C,OAAA,CAAA+C,MAAM,CAACK,MAAM;IAAClC,GAAG,EAAEiC,GAAI;IAAC,aAAW,gCAAgC,GAAGA;EAAI,GACxEA,GAEY,CAChB,CACK,CACD,CAAC,eAGVrD,MAAA,CAAAW,OAAA,CAAAmC,aAAA,CAAC5C,OAAA,CAAA8C,OAAO,qBACNhD,MAAA,CAAAW,OAAA,CAAAmC,aAAA,CAAC5C,OAAA,CAAA+C,MAAM;IACLC,KAAK,EAAC,uBAAuB;IAC7B,aAAU,gCAAgC;IAC1CC,KAAK,EAAEjB,OAAO,CAACU,UAAW;IAC1BQ,QAAQ,EAAGR,UAAe,IAAKR,eAAe,CAAC;MAAEQ;IAAW,CAAC;EAAE,GAC9D,IAAAL,WAAG,EAACb,UAAU,CAACQ,OAAO,CAACU,UAAU,EAAEhB,aAAa,CAAC,EAAEyB,GAAG;EAAA;EACrD;EACArD,MAAA,CAAAW,OAAA,CAAAmC,aAAA,CAAC5C,OAAA,CAAA+C,MAAM,CAACK,MAAM;IAAClC,GAAG,EAAEiC,GAAI;IAAC,aAAW,iCAAiC,GAAGA;EAAI,GACzEA,GAEY,CAChB,CACK,CACD,CAAC,eAGVrD,MAAA,CAAAW,OAAA,CAAAmC,aAAA,CAAC5C,OAAA,CAAA8C,OAAO,qBACNhD,MAAA,CAAAW,OAAA,CAAAmC,aAAA,CAAC5C,OAAA,CAAA+C,MAAM;IACLC,KAAK,EAAC,UAAU;IAChB,aAAU,oBAAoB;IAC9BK,UAAU;IACVC,WAAW,EAAC,MAAM;IAClBL,KAAK,EAAEjB,OAAO,CAACW,QAAQ,IAAIY,SAAU;IACrCL,QAAQ,EAAGzB,MAAW,IAAKS,eAAe,CAAC;MAAES,QAAQ,EAAElB,MAAM,IAAI;IAAK,CAAC;EAAE,GACxE,IAAAY,WAAG,EAACb,UAAU,CAACQ,OAAO,CAACW,QAAQ,EAAEjB,aAAa,CAAC,EAAEyB,GAAG;EAAA;EACnD;EACArD,MAAA,CAAAW,OAAA,CAAAmC,aAAA,CAAC5C,OAAA,CAAA+C,MAAM,CAACK,MAAM;IAAClC,GAAG,EAAEiC,GAAI;IAAC,aAAW,qBAAqB,GAAGA;EAAI,GAC7DA,GAEY,CAChB,CACK,CACD,CACK,CAAC;AAErB;AAEArB,eAAe,CAAC0B,SAAS,GAAGC,0BAAe"}