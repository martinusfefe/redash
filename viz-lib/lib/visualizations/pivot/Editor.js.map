{"version":3,"file":"Editor.js","names":["merge","React","Section","Switch","EditorPropTypes","Editor","_ref","options","onOptionsChange","updateOptions","updates","createElement","Fragment","id","defaultChecked","controls","enabled","onChange","rendererOptions","table","rowTotals","colTotals","propTypes"],"sources":["../../../src/visualizations/pivot/Editor.tsx"],"sourcesContent":["import { merge } from \"lodash\";\nimport React from \"react\";\nimport { Section, Switch } from \"@/components/visualizations/editor\";\nimport { EditorPropTypes } from \"@/visualizations/prop-types\";\n\nexport default function Editor({ options, onOptionsChange }: any) {\n  const updateOptions = (updates: any) => {\n    onOptionsChange(merge({}, options, updates));\n  };\n\n  return (\n    <React.Fragment>\n      {/* @ts-expect-error ts-migrate(2745) FIXME: This JSX tag's 'children' prop expects type 'never... Remove this comment to see the full error message */}\n      <Section>\n        {/* @ts-expect-error ts-migrate(2745) FIXME: This JSX tag's 'children' prop expects type 'never... Remove this comment to see the full error message */}\n        <Switch\n          // @ts-expect-error ts-migrate(2322) FIXME: Type 'string' is not assignable to type 'never'.\n          data-test=\"PivotEditor.HideControls\"\n          // @ts-expect-error ts-migrate(2322) FIXME: Type 'string' is not assignable to type 'never'.\n          id=\"pivot-show-controls\"\n          // @ts-expect-error ts-migrate(2322) FIXME: Type 'boolean' is not assignable to type 'never'.\n          defaultChecked={!options.controls.enabled}\n          // @ts-expect-error ts-migrate(2322) FIXME: Type '(enabled: any) => void' is not assignable to... Remove this comment to see the full error message\n          onChange={(enabled: any) => updateOptions({ controls: { enabled: !enabled } })}>\n          Show Pivot Controls\n        </Switch>\n      </Section>\n      {/* @ts-expect-error ts-migrate(2745) FIXME: This JSX tag's 'children' prop expects type 'never... Remove this comment to see the full error message */}\n      <Section>\n        {/* @ts-expect-error ts-migrate(2745) FIXME: This JSX tag's 'children' prop expects type 'never... Remove this comment to see the full error message */}\n        <Switch\n          // @ts-expect-error ts-migrate(2322) FIXME: Type 'string' is not assignable to type 'never'.\n          id=\"pivot-show-row-totals\"\n          // @ts-expect-error ts-migrate(2322) FIXME: Type 'any' is not assignable to type 'never'.\n          defaultChecked={options.rendererOptions.table.rowTotals}\n          // @ts-expect-error ts-migrate(2322) FIXME: Type '(rowTotals: any) => void' is not assignable ... Remove this comment to see the full error message\n          onChange={(rowTotals: any) => updateOptions({ rendererOptions: { table: { rowTotals } } })}>\n          Show Row Totals\n        </Switch>\n      </Section>\n      {/* @ts-expect-error ts-migrate(2745) FIXME: This JSX tag's 'children' prop expects type 'never... Remove this comment to see the full error message */}\n      <Section>\n        {/* @ts-expect-error ts-migrate(2745) FIXME: This JSX tag's 'children' prop expects type 'never... Remove this comment to see the full error message */}\n        <Switch\n          // @ts-expect-error ts-migrate(2322) FIXME: Type 'string' is not assignable to type 'never'.\n          id=\"pivot-show-column-totals\"\n          // @ts-expect-error ts-migrate(2322) FIXME: Type 'any' is not assignable to type 'never'.\n          defaultChecked={options.rendererOptions.table.colTotals}\n          // @ts-expect-error ts-migrate(2322) FIXME: Type '(colTotals: any) => void' is not assignable ... Remove this comment to see the full error message\n          onChange={(colTotals: any) => updateOptions({ rendererOptions: { table: { colTotals } } })}>\n          Show Column Totals\n        </Switch>\n      </Section>\n    </React.Fragment>\n  );\n}\n\nEditor.propTypes = EditorPropTypes;\n"],"mappings":"AAAA,SAASA,KAAK,QAAQ,QAAQ;AAC9B,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,EAAEC,MAAM;AACxB,SAASC,eAAe;AAExB,eAAe,SAASC,MAAMA,CAAAC,IAAA,EAAoC;EAAA,IAAjCC,OAAO,GAAAD,IAAA,CAAPC,OAAO;IAAEC,eAAe,GAAAF,IAAA,CAAfE,eAAe;EACvD,IAAMC,aAAa,GAAIC,OAAY,IAAK;IACtCF,eAAe,CAACR,KAAK,CAAC,CAAC,CAAC,EAAEO,OAAO,EAAEG,OAAO,CAAC,CAAC;EAC9C,CAAC;EAED,oBACET,KAAA,CAAAU,aAAA,CAACV,KAAK,CAACW,QAAQ,qBAEbX,KAAA,CAAAU,aAAA,CAACT,OAAO,qBAEND,KAAA,CAAAU,aAAA,CAACR;EACC;EAAA;IACA,aAAU;IACV;IAAA;IACAU,EAAE,EAAC;IACH;IAAA;IACAC,cAAc,EAAE,CAACP,OAAO,CAACQ,QAAQ,CAACC;IAClC;IAAA;IACAC,QAAQ,EAAGD,OAAY,IAAKP,aAAa,CAAC;MAAEM,QAAQ,EAAE;QAAEC,OAAO,EAAE,CAACA;MAAQ;IAAE,CAAC;EAAE,GAAC,qBAE1E,CACD,CAAC,eAEVf,KAAA,CAAAU,aAAA,CAACT,OAAO,qBAEND,KAAA,CAAAU,aAAA,CAACR;EACC;EAAA;IACAU,EAAE,EAAC;IACH;IAAA;IACAC,cAAc,EAAEP,OAAO,CAACW,eAAe,CAACC,KAAK,CAACC;IAC9C;IAAA;IACAH,QAAQ,EAAGG,SAAc,IAAKX,aAAa,CAAC;MAAES,eAAe,EAAE;QAAEC,KAAK,EAAE;UAAEC;QAAU;MAAE;IAAE,CAAC;EAAE,GAAC,iBAEtF,CACD,CAAC,eAEVnB,KAAA,CAAAU,aAAA,CAACT,OAAO,qBAEND,KAAA,CAAAU,aAAA,CAACR;EACC;EAAA;IACAU,EAAE,EAAC;IACH;IAAA;IACAC,cAAc,EAAEP,OAAO,CAACW,eAAe,CAACC,KAAK,CAACE;IAC9C;IAAA;IACAJ,QAAQ,EAAGI,SAAc,IAAKZ,aAAa,CAAC;MAAES,eAAe,EAAE;QAAEC,KAAK,EAAE;UAAEE;QAAU;MAAE;IAAE,CAAC;EAAE,GAAC,oBAEtF,CACD,CACK,CAAC;AAErB;AAEAhB,MAAM,CAACiB,SAAS,GAAGlB,eAAe"}