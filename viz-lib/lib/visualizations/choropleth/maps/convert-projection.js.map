{"version":3,"file":"convert-projection.js","names":["_require","require","each","map","filter","d3","albersUSA","geo","albersUsa","mercator","geojson","convertPoint","coord","pt","invert","convertLineString","points","convertPolygon","polygon","convertMultiPolygon","multiPolygon","features","feature","geometry","type","coordinates","console","log","JSON","stringify"],"sources":["../../../../src/visualizations/choropleth/maps/convert-projection.ts"],"sourcesContent":["// This helper converts USA map from Mercator projection to Albers (USA)\n// Usage: `node convert-projection.js > usa-albers.geo.json`\n\nconst { each, map, filter } = require(\"lodash\");\n// @ts-expect-error ts-migrate(2403) FIXME: Subsequent variable declarations must have the sam... Remove this comment to see the full error message\nconst d3 = require(\"d3\");\n\n// @ts-expect-error ts-migrate(2339) FIXME: Property 'geo' does not exist on type 'typeof impo... Remove this comment to see the full error message\nconst albersUSA = d3.geo.albersUsa();\n// @ts-expect-error ts-migrate(2339) FIXME: Property 'geo' does not exist on type 'typeof impo... Remove this comment to see the full error message\nconst mercator = d3.geo.mercator();\n\nconst geojson = require(\"./usa.geo.json\");\n\nfunction convertPoint(coord: any) {\n  const pt = albersUSA(coord);\n  return pt ? mercator.invert(pt) : null;\n}\n\nfunction convertLineString(points: any) {\n  return filter(map(points, convertPoint));\n}\n\nfunction convertPolygon(polygon: any) {\n  return map(polygon, convertLineString);\n}\n\nfunction convertMultiPolygon(multiPolygon: any) {\n  return map(multiPolygon, convertPolygon);\n}\n\neach(geojson.features, (feature: any) => {\n  switch (feature.geometry.type) {\n    case \"Polygon\":\n      feature.geometry.coordinates = convertPolygon(feature.geometry.coordinates);\n      break;\n    case \"MultiPolygon\":\n      feature.geometry.coordinates = convertMultiPolygon(feature.geometry.coordinates);\n      break;\n  }\n});\n\nconsole.log(JSON.stringify(geojson));\n"],"mappings":";;AAAA;AACA;;AAEA,IAAAA,QAAA,GAA8BC,OAAO,CAAC,QAAQ,CAAC;EAAvCC,IAAI,GAAAF,QAAA,CAAJE,IAAI;EAAEC,GAAG,GAAAH,QAAA,CAAHG,GAAG;EAAEC,MAAM,GAAAJ,QAAA,CAANI,MAAM;AACzB;AACA,IAAMC,EAAE,GAAGJ,OAAO,CAAC,IAAI,CAAC;;AAExB;AACA,IAAMK,SAAS,GAAGD,EAAE,CAACE,GAAG,CAACC,SAAS,CAAC,CAAC;AACpC;AACA,IAAMC,QAAQ,GAAGJ,EAAE,CAACE,GAAG,CAACE,QAAQ,CAAC,CAAC;AAElC,IAAMC,OAAO,GAAGT,OAAO,iBAAiB,CAAC;AAEzC,SAASU,YAAYA,CAACC,KAAU,EAAE;EAChC,IAAMC,EAAE,GAAGP,SAAS,CAACM,KAAK,CAAC;EAC3B,OAAOC,EAAE,GAAGJ,QAAQ,CAACK,MAAM,CAACD,EAAE,CAAC,GAAG,IAAI;AACxC;AAEA,SAASE,iBAAiBA,CAACC,MAAW,EAAE;EACtC,OAAOZ,MAAM,CAACD,GAAG,CAACa,MAAM,EAAEL,YAAY,CAAC,CAAC;AAC1C;AAEA,SAASM,cAAcA,CAACC,OAAY,EAAE;EACpC,OAAOf,GAAG,CAACe,OAAO,EAAEH,iBAAiB,CAAC;AACxC;AAEA,SAASI,mBAAmBA,CAACC,YAAiB,EAAE;EAC9C,OAAOjB,GAAG,CAACiB,YAAY,EAAEH,cAAc,CAAC;AAC1C;AAEAf,IAAI,CAACQ,OAAO,CAACW,QAAQ,EAAGC,OAAY,IAAK;EACvC,QAAQA,OAAO,CAACC,QAAQ,CAACC,IAAI;IAC3B,KAAK,SAAS;MACZF,OAAO,CAACC,QAAQ,CAACE,WAAW,GAAGR,cAAc,CAACK,OAAO,CAACC,QAAQ,CAACE,WAAW,CAAC;MAC3E;IACF,KAAK,cAAc;MACjBH,OAAO,CAACC,QAAQ,CAACE,WAAW,GAAGN,mBAAmB,CAACG,OAAO,CAACC,QAAQ,CAACE,WAAW,CAAC;MAChF;EACJ;AACF,CAAC,CAAC;AAEFC,OAAO,CAACC,GAAG,CAACC,IAAI,CAACC,SAAS,CAACnB,OAAO,CAAC,CAAC"}