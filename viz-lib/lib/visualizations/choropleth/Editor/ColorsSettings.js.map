{"version":3,"file":"ColorsSettings.js","names":["React","useDebouncedCallback","Section","Select","InputNumber","ColorPicker","EditorPropTypes","ColorPalette","ColorsSettings","_ref","options","onOptionsChange","_useDebouncedCallback","_useDebouncedCallback2","_slicedToArray","onOptionsChangeDebounced","createElement","Fragment","layout","label","defaultValue","clusteringMode","onChange","Option","value","min","max","steps","interactive","presetColors","placement","color","colors","triggerProps","addonAfter","Label","noValue","background","borders","propTypes"],"sources":["../../../../src/visualizations/choropleth/Editor/ColorsSettings.tsx"],"sourcesContent":["import React from \"react\";\nimport { useDebouncedCallback } from \"use-debounce\";\nimport { Section, Select, InputNumber, ColorPicker } from \"@/components/visualizations/editor\";\nimport { EditorPropTypes } from \"@/visualizations/prop-types\";\nimport ColorPalette from \"../ColorPalette\";\n\nexport default function ColorsSettings({ options, onOptionsChange }: any) {\n  const [onOptionsChangeDebounced] = useDebouncedCallback(onOptionsChange, 200);\n\n  return (\n    <React.Fragment>\n      {/* @ts-expect-error ts-migrate(2745) FIXME: This JSX tag's 'children' prop expects type 'never... Remove this comment to see the full error message */}\n      <Section>\n        <Select\n          layout=\"horizontal\"\n          label=\"Clustering Mode\"\n          data-test=\"Choropleth.Editor.ClusteringMode\"\n          defaultValue={options.clusteringMode}\n          onChange={(clusteringMode: any) => onOptionsChange({ clusteringMode })}>\n          {/* @ts-expect-error ts-migrate(2339) FIXME: Property 'Option' does not exist on type '({ class... Remove this comment to see the full error message */}\n          <Select.Option value=\"q\" data-test=\"Choropleth.Editor.ClusteringMode.q\">\n            quantile\n            {/* @ts-expect-error ts-migrate(2339) FIXME: Property 'Option' does not exist on type '({ class... Remove this comment to see the full error message */}\n          </Select.Option>\n          {/* @ts-expect-error ts-migrate(2339) FIXME: Property 'Option' does not exist on type '({ class... Remove this comment to see the full error message */}\n          <Select.Option value=\"e\" data-test=\"Choropleth.Editor.ClusteringMode.e\">\n            equidistant\n            {/* @ts-expect-error ts-migrate(2339) FIXME: Property 'Option' does not exist on type '({ class... Remove this comment to see the full error message */}\n          </Select.Option>\n          {/* @ts-expect-error ts-migrate(2339) FIXME: Property 'Option' does not exist on type '({ class... Remove this comment to see the full error message */}\n          <Select.Option value=\"k\" data-test=\"Choropleth.Editor.ClusteringMode.k\">\n            k-means\n            {/* @ts-expect-error ts-migrate(2339) FIXME: Property 'Option' does not exist on type '({ class... Remove this comment to see the full error message */}\n          </Select.Option>\n        </Select>\n      </Section>\n\n      {/* @ts-expect-error ts-migrate(2745) FIXME: This JSX tag's 'children' prop expects type 'never... Remove this comment to see the full error message */}\n      <Section>\n        <InputNumber\n          layout=\"horizontal\"\n          label=\"Steps\"\n          data-test=\"Choropleth.Editor.ColorSteps\"\n          min={3}\n          max={11}\n          defaultValue={options.steps}\n          onChange={(steps: any) => onOptionsChangeDebounced({ steps })}\n        />\n      </Section>\n\n      {/* @ts-expect-error ts-migrate(2745) FIXME: This JSX tag's 'children' prop expects type 'never... Remove this comment to see the full error message */}\n      <Section>\n        <ColorPicker\n          layout=\"horizontal\"\n          label=\"Min Color\"\n          interactive\n          presetColors={ColorPalette}\n          placement=\"topRight\"\n          color={options.colors.min}\n          triggerProps={{ \"data-test\": \"Choropleth.Editor.Colors.Min\" }}\n          onChange={(min: any) => onOptionsChange({ colors: { min } })}\n          // @ts-expect-error ts-migrate(2339) FIXME: Property 'Label' does not exist on type '({ classN... Remove this comment to see the full error message\n          addonAfter={<ColorPicker.Label color={options.colors.min} presetColors={ColorPalette} />}\n        />\n      </Section>\n\n      {/* @ts-expect-error ts-migrate(2745) FIXME: This JSX tag's 'children' prop expects type 'never... Remove this comment to see the full error message */}\n      <Section>\n        <ColorPicker\n          layout=\"horizontal\"\n          label=\"Max Color\"\n          interactive\n          presetColors={ColorPalette}\n          placement=\"topRight\"\n          color={options.colors.max}\n          triggerProps={{ \"data-test\": \"Choropleth.Editor.Colors.Max\" }}\n          onChange={(max: any) => onOptionsChange({ colors: { max } })}\n          // @ts-expect-error ts-migrate(2339) FIXME: Property 'Label' does not exist on type '({ classN... Remove this comment to see the full error message\n          addonAfter={<ColorPicker.Label color={options.colors.max} presetColors={ColorPalette} />}\n        />\n      </Section>\n\n      {/* @ts-expect-error ts-migrate(2745) FIXME: This JSX tag's 'children' prop expects type 'never... Remove this comment to see the full error message */}\n      <Section>\n        <ColorPicker\n          layout=\"horizontal\"\n          label=\"No Value Color\"\n          interactive\n          presetColors={ColorPalette}\n          placement=\"topRight\"\n          color={options.colors.noValue}\n          triggerProps={{ \"data-test\": \"Choropleth.Editor.Colors.NoValue\" }}\n          onChange={(noValue: any) => onOptionsChange({ colors: { noValue } })}\n          // @ts-expect-error ts-migrate(2339) FIXME: Property 'Label' does not exist on type '({ classN... Remove this comment to see the full error message\n          addonAfter={<ColorPicker.Label color={options.colors.noValue} presetColors={ColorPalette} />}\n        />\n      </Section>\n\n      {/* @ts-expect-error ts-migrate(2745) FIXME: This JSX tag's 'children' prop expects type 'never... Remove this comment to see the full error message */}\n      <Section>\n        <ColorPicker\n          layout=\"horizontal\"\n          label=\"Background Color\"\n          interactive\n          presetColors={ColorPalette}\n          placement=\"topRight\"\n          color={options.colors.background}\n          triggerProps={{ \"data-test\": \"Choropleth.Editor.Colors.Background\" }}\n          onChange={(background: any) => onOptionsChange({ colors: { background } })}\n          // @ts-expect-error ts-migrate(2339) FIXME: Property 'Label' does not exist on type '({ classN... Remove this comment to see the full error message\n          addonAfter={<ColorPicker.Label color={options.colors.background} presetColors={ColorPalette} />}\n        />\n      </Section>\n\n      {/* @ts-expect-error ts-migrate(2745) FIXME: This JSX tag's 'children' prop expects type 'never... Remove this comment to see the full error message */}\n      <Section>\n        <ColorPicker\n          layout=\"horizontal\"\n          label=\"Borders Color\"\n          interactive\n          presetColors={ColorPalette}\n          placement=\"topRight\"\n          color={options.colors.borders}\n          triggerProps={{ \"data-test\": \"Choropleth.Editor.Colors.Borders\" }}\n          onChange={(borders: any) => onOptionsChange({ colors: { borders } })}\n          // @ts-expect-error ts-migrate(2339) FIXME: Property 'Label' does not exist on type '({ classN... Remove this comment to see the full error message\n          addonAfter={<ColorPicker.Label color={options.colors.borders} presetColors={ColorPalette} />}\n        />\n      </Section>\n    </React.Fragment>\n  );\n}\n\nColorsSettings.propTypes = EditorPropTypes;\n"],"mappings":"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"}