{"version":3,"file":"FormatSettings.js","names":["map","React","useMemo","useDebouncedCallback","Grid","Section","Select","Input","Checkbox","TextArea","TextAlignmentSelect","ContextHelp","EditorPropTypes","useLoadGeoJson","getGeoJsonFields","TemplateFormatHint","_ref","geoJsonProperties","createElement","placement","arrowPointAtCenter","style","paddingBottom","length","Fragment","className","maxHeight","overflow","property","key","concat","defaultProps","GeneralSettings","_ref2","options","onOptionsChange","_useDebouncedCallback","_useDebouncedCallback2","_slicedToArray","onOptionsChangeDebounced","_useLoadGeoJson","mapType","_useLoadGeoJson2","geoJson","geoJsonFields","templateFormatHint","Row","gutter","Col","span","label","NumberFormatSpecs","defaultValue","valueFormat","onChange","event","target","value","noValuePlaceholder","checked","legend","visible","disabled","position","Option","alignText","tooltip","enabled","template","popup","rows","propTypes"],"sources":["../../../../src/visualizations/choropleth/Editor/FormatSettings.tsx"],"sourcesContent":["import { map } from \"lodash\";\nimport React, { useMemo } from \"react\";\nimport { useDebouncedCallback } from \"use-debounce\";\nimport * as Grid from \"antd/lib/grid\";\nimport {\n  Section,\n  Select,\n  Input,\n  Checkbox,\n  TextArea,\n  TextAlignmentSelect,\n  ContextHelp,\n} from \"@/components/visualizations/editor\";\nimport { EditorPropTypes } from \"@/visualizations/prop-types\";\n\nimport useLoadGeoJson from \"../hooks/useLoadGeoJson\";\nimport { getGeoJsonFields } from \"./utils\";\n\ntype OwnTemplateFormatHintProps = {\n  geoJsonProperties?: string[];\n};\n\ntype TemplateFormatHintProps = OwnTemplateFormatHintProps & typeof TemplateFormatHint.defaultProps;\n\nfunction TemplateFormatHint({ geoJsonProperties }: TemplateFormatHintProps) {\n  return (\n    // @ts-expect-error ts-migrate(2746) FIXME: This JSX tag's 'children' prop expects a single ch... Remove this comment to see the full error message\n    <ContextHelp placement=\"topLeft\" arrowPointAtCenter>\n      <div style={{ paddingBottom: 5 }}>\n        <div>\n          All query result columns can be referenced using <code>{\"{{ column_name }}\"}</code> syntax.\n        </div>\n        <div>\n          Use <code>{\"{{ @@value }}\"}</code> to access formatted value.\n        </div>\n      </div>\n      {geoJsonProperties.length > 0 && (\n        <React.Fragment>\n          <div className=\"p-b-5\">GeoJSON properties could be accessed by these names:</div>\n          <div style={{ maxHeight: 300, overflow: \"auto\" }}>\n            {map(geoJsonProperties, property => (\n              <div key={property}>\n                <code>{`{{ @@${property}}}`}</code>\n              </div>\n            ))}\n          </div>\n        </React.Fragment>\n      )}\n    </ContextHelp>\n  );\n}\n\nTemplateFormatHint.defaultProps = {\n  geoJsonProperties: [],\n};\n\nexport default function GeneralSettings({ options, onOptionsChange }: any) {\n  const [onOptionsChangeDebounced] = useDebouncedCallback(onOptionsChange, 200);\n  const [geoJson] = useLoadGeoJson(options.mapType);\n  const geoJsonFields = useMemo(() => getGeoJsonFields(geoJson), [geoJson]);\n\n  const templateFormatHint = <TemplateFormatHint geoJsonProperties={geoJsonFields} />;\n\n  return (\n    <div className=\"choropleth-visualization-editor-format-settings\">\n      {/* @ts-expect-error ts-migrate(2745) FIXME: This JSX tag's 'children' prop expects type 'never... Remove this comment to see the full error message */}\n      <Section>\n        <Grid.Row gutter={15}>\n          <Grid.Col span={12}>\n            <Input\n              label={\n                <React.Fragment>\n                  Value Format\n                  <ContextHelp.NumberFormatSpecs />\n                </React.Fragment>\n              }\n              data-test=\"Choropleth.Editor.ValueFormat\"\n              defaultValue={options.valueFormat}\n              onChange={(event: any) => onOptionsChangeDebounced({ valueFormat: event.target.value })}\n            />\n          </Grid.Col>\n          <Grid.Col span={12}>\n            <Input\n              label=\"Value Placeholder\"\n              data-test=\"Choropleth.Editor.ValuePlaceholder\"\n              defaultValue={options.noValuePlaceholder}\n              onChange={(event: any) => onOptionsChangeDebounced({ noValuePlaceholder: event.target.value })}\n            />\n          </Grid.Col>\n        </Grid.Row>\n      </Section>\n\n      {/* @ts-expect-error ts-migrate(2745) FIXME: This JSX tag's 'children' prop expects type 'never... Remove this comment to see the full error message */}\n      <Section>\n        <Checkbox\n          data-test=\"Choropleth.Editor.LegendVisibility\"\n          checked={options.legend.visible}\n          onChange={event => onOptionsChange({ legend: { visible: event.target.checked } })}>\n          Show Legend\n        </Checkbox>\n      </Section>\n\n      {/* @ts-expect-error ts-migrate(2745) FIXME: This JSX tag's 'children' prop expects type 'never... Remove this comment to see the full error message */}\n      <Section>\n        <Grid.Row gutter={15}>\n          <Grid.Col span={12}>\n            <Select\n              label=\"Legend Position\"\n              data-test=\"Choropleth.Editor.LegendPosition\"\n              disabled={!options.legend.visible}\n              defaultValue={options.legend.position}\n              onChange={(position: any) => onOptionsChange({ legend: { position } })}>\n              {/* @ts-expect-error ts-migrate(2339) FIXME: Property 'Option' does not exist on type '({ class... Remove this comment to see the full error message */}\n              <Select.Option value=\"top-left\" data-test=\"Choropleth.Editor.LegendPosition.TopLeft\">\n                top / left\n                {/* @ts-expect-error ts-migrate(2339) FIXME: Property 'Option' does not exist on type '({ class... Remove this comment to see the full error message */}\n              </Select.Option>\n              {/* @ts-expect-error ts-migrate(2339) FIXME: Property 'Option' does not exist on type '({ class... Remove this comment to see the full error message */}\n              <Select.Option value=\"top-right\" data-test=\"Choropleth.Editor.LegendPosition.TopRight\">\n                top / right\n                {/* @ts-expect-error ts-migrate(2339) FIXME: Property 'Option' does not exist on type '({ class... Remove this comment to see the full error message */}\n              </Select.Option>\n              {/* @ts-expect-error ts-migrate(2339) FIXME: Property 'Option' does not exist on type '({ class... Remove this comment to see the full error message */}\n              <Select.Option value=\"bottom-left\" data-test=\"Choropleth.Editor.LegendPosition.BottomLeft\">\n                bottom / left\n                {/* @ts-expect-error ts-migrate(2339) FIXME: Property 'Option' does not exist on type '({ class... Remove this comment to see the full error message */}\n              </Select.Option>\n              {/* @ts-expect-error ts-migrate(2339) FIXME: Property 'Option' does not exist on type '({ class... Remove this comment to see the full error message */}\n              <Select.Option value=\"bottom-right\" data-test=\"Choropleth.Editor.LegendPosition.BottomRight\">\n                bottom / right\n                {/* @ts-expect-error ts-migrate(2339) FIXME: Property 'Option' does not exist on type '({ class... Remove this comment to see the full error message */}\n              </Select.Option>\n            </Select>\n          </Grid.Col>\n          <Grid.Col span={12}>\n            <TextAlignmentSelect\n              data-test=\"Choropleth.Editor.LegendTextAlignment\"\n              label=\"Legend Text Alignment\"\n              disabled={!options.legend.visible}\n              defaultValue={options.legend.alignText}\n              onChange={(event: any) => onOptionsChange({ legend: { alignText: event.target.value } })}\n            />\n          </Grid.Col>\n        </Grid.Row>\n      </Section>\n\n      {/* @ts-expect-error ts-migrate(2745) FIXME: This JSX tag's 'children' prop expects type 'never... Remove this comment to see the full error message */}\n      <Section>\n        <Checkbox\n          data-test=\"Choropleth.Editor.TooltipEnabled\"\n          checked={options.tooltip.enabled}\n          onChange={event => onOptionsChange({ tooltip: { enabled: event.target.checked } })}>\n          Show Tooltip\n        </Checkbox>\n      </Section>\n\n      {/* @ts-expect-error ts-migrate(2745) FIXME: This JSX tag's 'children' prop expects type 'never... Remove this comment to see the full error message */}\n      <Section>\n        <Input\n          label={<React.Fragment>Tooltip Template {templateFormatHint}</React.Fragment>}\n          data-test=\"Choropleth.Editor.TooltipTemplate\"\n          disabled={!options.tooltip.enabled}\n          defaultValue={options.tooltip.template}\n          onChange={(event: any) => onOptionsChangeDebounced({ tooltip: { template: event.target.value } })}\n        />\n      </Section>\n\n      {/* @ts-expect-error ts-migrate(2745) FIXME: This JSX tag's 'children' prop expects type 'never... Remove this comment to see the full error message */}\n      <Section>\n        <Checkbox\n          data-test=\"Choropleth.Editor.PopupEnabled\"\n          checked={options.popup.enabled}\n          onChange={event => onOptionsChange({ popup: { enabled: event.target.checked } })}>\n          Show Popup\n        </Checkbox>\n      </Section>\n\n      {/* @ts-expect-error ts-migrate(2745) FIXME: This JSX tag's 'children' prop expects type 'never... Remove this comment to see the full error message */}\n      <Section>\n        <TextArea\n          label={<React.Fragment>Popup Template {templateFormatHint}</React.Fragment>}\n          data-test=\"Choropleth.Editor.PopupTemplate\"\n          disabled={!options.popup.enabled}\n          rows={4}\n          defaultValue={options.popup.template}\n          onChange={(event: any) => onOptionsChangeDebounced({ popup: { template: event.target.value } })}\n        />\n      </Section>\n    </div>\n  );\n}\n\nGeneralSettings.propTypes = EditorPropTypes;\n"],"mappings":"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"}