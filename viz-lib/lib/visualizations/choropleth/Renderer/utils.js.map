{"version":3,"file":"utils.js","names":["isString","isObject","isFinite","each","map","extend","uniq","filter","first","chroma","createNumberFormatter","createFormatter","darkenColor","color","darken","hex","format","placeholder","formatter","value","prepareData","data","keyColumn","valueColumn","result","item","parseFloat","code","undefined","prepareFeatureProperties","feature","valueFormatted","targetField","properties","key","datum","getValueForFeature","getColorByValue","limits","colors","defaultColor","i","length","createScale","features","options","values","legend","steps","Math","min","max","limit","clusteringMode","scale","index","reverse"],"sources":["../../../../src/visualizations/choropleth/Renderer/utils.ts"],"sourcesContent":["import { isString, isObject, isFinite, each, map, extend, uniq, filter, first } from \"lodash\";\nimport chroma from \"chroma-js\";\nimport { createNumberFormatter as createFormatter } from \"@/lib/value-format\";\n\nexport function darkenColor(color: any) {\n  return chroma(color)\n    .darken()\n    .hex();\n}\n\nexport function createNumberFormatter(format: any, placeholder: any) {\n  const formatter = createFormatter(format);\n  return (value: any) => {\n    if (isFinite(value)) {\n      return formatter(value);\n    }\n    return placeholder;\n  };\n}\n\nexport function prepareData(data: any, keyColumn: any, valueColumn: any) {\n  if (!keyColumn || !valueColumn) {\n    return {};\n  }\n\n  const result = {};\n  each(data, item => {\n    if (item[keyColumn]) {\n      const value = parseFloat(item[valueColumn]);\n      // @ts-expect-error ts-migrate(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\n      result[item[keyColumn]] = {\n        code: item[keyColumn],\n        value: isFinite(value) ? value : undefined,\n        item,\n      };\n    }\n  });\n  return result;\n}\n\nexport function prepareFeatureProperties(feature: any, valueFormatted: any, data: any, targetField: any) {\n  const result = {};\n  each(feature.properties, (value, key) => {\n    // @ts-expect-error ts-migrate(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\n    result[\"@@\" + key] = value;\n  });\n  // @ts-expect-error ts-migrate(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\n  result[\"@@value\"] = valueFormatted;\n  const datum = data[feature.properties[targetField]] || {};\n  return extend(result, datum.item);\n}\n\nexport function getValueForFeature(feature: any, data: any, targetField: any) {\n  const code = feature.properties[targetField];\n  if (isString(code) && isObject(data[code])) {\n    return data[code].value;\n  }\n  return undefined;\n}\n\nexport function getColorByValue(value: any, limits: any, colors: any, defaultColor: any) {\n  if (isFinite(value)) {\n    for (let i = 0; i < limits.length; i += 1) {\n      if (value <= limits[i]) {\n        return colors[i];\n      }\n    }\n  }\n  return defaultColor;\n}\n\nexport function createScale(features: any, data: any, options: any) {\n  // Calculate limits\n  const values = uniq(\n    filter(\n      map(features, feature => getValueForFeature(feature, data, options.targetField)),\n      isFinite\n    )\n  );\n  if (values.length === 0) {\n    return {\n      limits: [],\n      colors: [],\n      legend: [],\n    };\n  }\n  const steps = Math.min(values.length, options.steps);\n  if (steps === 1) {\n    return {\n      limits: values,\n      colors: [options.colors.max],\n      legend: [\n        {\n          color: options.colors.max,\n          limit: first(values),\n        },\n      ],\n    };\n  }\n  const limits = chroma.limits(values, options.clusteringMode, steps - 1);\n\n  // Create color buckets\n  const colors = chroma.scale([options.colors.min, options.colors.max]).colors(limits.length);\n\n  // Group values for legend\n  const legend = map(colors, (color, index) => ({\n    color,\n    limit: limits[index],\n  })).reverse();\n\n  return { limits, colors, legend };\n}\n"],"mappings":"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"}