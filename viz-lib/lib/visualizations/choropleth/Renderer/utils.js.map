{"version":3,"file":"utils.js","names":["_lodash","require","_chromaJs","_interopRequireDefault","_valueFormat","obj","__esModule","default","darkenColor","color","chroma","darken","hex","createNumberFormatter","format","placeholder","formatter","createFormatter","value","isFinite","prepareData","data","keyColumn","valueColumn","result","each","item","parseFloat","code","undefined","prepareFeatureProperties","feature","valueFormatted","targetField","properties","key","datum","extend","getValueForFeature","isString","isObject","getColorByValue","limits","colors","defaultColor","i","length","createScale","features","options","values","uniq","filter","map","legend","steps","Math","min","max","limit","first","clusteringMode","scale","index","reverse"],"sources":["../../../../src/visualizations/choropleth/Renderer/utils.ts"],"sourcesContent":["import { isString, isObject, isFinite, each, map, extend, uniq, filter, first } from \"lodash\";\nimport chroma from \"chroma-js\";\nimport { createNumberFormatter as createFormatter } from \"@/lib/value-format\";\n\nexport function darkenColor(color: any) {\n  return chroma(color)\n    .darken()\n    .hex();\n}\n\nexport function createNumberFormatter(format: any, placeholder: any) {\n  const formatter = createFormatter(format);\n  return (value: any) => {\n    if (isFinite(value)) {\n      return formatter(value);\n    }\n    return placeholder;\n  };\n}\n\nexport function prepareData(data: any, keyColumn: any, valueColumn: any) {\n  if (!keyColumn || !valueColumn) {\n    return {};\n  }\n\n  const result = {};\n  each(data, item => {\n    if (item[keyColumn]) {\n      const value = parseFloat(item[valueColumn]);\n      // @ts-expect-error ts-migrate(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\n      result[item[keyColumn]] = {\n        code: item[keyColumn],\n        value: isFinite(value) ? value : undefined,\n        item,\n      };\n    }\n  });\n  return result;\n}\n\nexport function prepareFeatureProperties(feature: any, valueFormatted: any, data: any, targetField: any) {\n  const result = {};\n  each(feature.properties, (value, key) => {\n    // @ts-expect-error ts-migrate(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\n    result[\"@@\" + key] = value;\n  });\n  // @ts-expect-error ts-migrate(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\n  result[\"@@value\"] = valueFormatted;\n  const datum = data[feature.properties[targetField]] || {};\n  return extend(result, datum.item);\n}\n\nexport function getValueForFeature(feature: any, data: any, targetField: any) {\n  const code = feature.properties[targetField];\n  if (isString(code) && isObject(data[code])) {\n    return data[code].value;\n  }\n  return undefined;\n}\n\nexport function getColorByValue(value: any, limits: any, colors: any, defaultColor: any) {\n  if (isFinite(value)) {\n    for (let i = 0; i < limits.length; i += 1) {\n      if (value <= limits[i]) {\n        return colors[i];\n      }\n    }\n  }\n  return defaultColor;\n}\n\nexport function createScale(features: any, data: any, options: any) {\n  // Calculate limits\n  const values = uniq(\n    filter(\n      map(features, feature => getValueForFeature(feature, data, options.targetField)),\n      isFinite\n    )\n  );\n  if (values.length === 0) {\n    return {\n      limits: [],\n      colors: [],\n      legend: [],\n    };\n  }\n  const steps = Math.min(values.length, options.steps);\n  if (steps === 1) {\n    return {\n      limits: values,\n      colors: [options.colors.max],\n      legend: [\n        {\n          color: options.colors.max,\n          limit: first(values),\n        },\n      ],\n    };\n  }\n  const limits = chroma.limits(values, options.clusteringMode, steps - 1);\n\n  // Create color buckets\n  const colors = chroma.scale([options.colors.min, options.colors.max]).colors(limits.length);\n\n  // Group values for legend\n  const legend = map(colors, (color, index) => ({\n    color,\n    limit: limits[index],\n  })).reverse();\n\n  return { limits, colors, legend };\n}\n"],"mappings":"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"}