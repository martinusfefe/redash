{"version":3,"file":"initChoropleth.js","names":["isFunction","isObject","isArray","map","React","ReactDOM","L","formatSimpleTemplate","sanitize","resizeObserver","createNumberFormatter","createScale","darkenColor","getColorByValue","getValueForFeature","prepareFeatureProperties","Legend","CustomControl","Control","extend","options","position","onAdd","div","document","createElement","className","style","background","backgroundClip","onRemove","unmountComponentAtNode","getContainer","prepareLayer","_ref","feature","layer","data","limits","colors","formatValue","value","targetField","valueFormatted","featureData","color","noValue","setStyle","borders","weight","fillColor","fillOpacity","tooltip","enabled","bindTooltip","template","sticky","popup","bindPopup","on","validateBounds","bounds","fallbackBounds","latLngBounds","isValid","initChoropleth","container","onBoundsChange","_map","center","zoom","zoomSnap","scrollWheelZoom","maxBoundsViscosity","attributionControl","fullscreenControl","_choropleth","_legend","handleMapBoundsChange","getBounds","_southWest","lat","lng","_northEast","boundsChangedFromMap","onMapMoveEnd","off","updateLayers","geoJson","eachLayer","removeLayer","removeControl","features","setMaxBounds","_createScale","legend","valueFormat","noValuePlaceholder","geoJSON","onEachFeature","addTo","mapBounds","fitBounds","animate","duration","maxBounds","panInsideBounds","visible","length","setPosition","replace","addControl","render","items","item","_objectSpread","text","limit","alignText","updateBounds","layerBounds","unwatchResize","invalidateSize","destroy","remove"],"sources":["../../../../src/visualizations/choropleth/Renderer/initChoropleth.tsx"],"sourcesContent":["import { isFunction, isObject, isArray, map } from \"lodash\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport L from \"leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport \"leaflet-fullscreen\";\nimport \"leaflet-fullscreen/dist/leaflet.fullscreen.css\";\nimport { formatSimpleTemplate } from \"@/lib/value-format\";\nimport sanitize from \"@/services/sanitize\";\nimport resizeObserver from \"@/services/resizeObserver\";\nimport {\n  createNumberFormatter,\n  createScale,\n  darkenColor,\n  getColorByValue,\n  getValueForFeature,\n  prepareFeatureProperties,\n} from \"./utils\";\nimport Legend from \"./Legend\";\n\nconst CustomControl = L.Control.extend({\n  options: {\n    position: \"topright\",\n  },\n  onAdd() {\n    const div = document.createElement(\"div\");\n    div.className = \"leaflet-bar leaflet-custom-toolbar\";\n    div.style.background = \"#fff\";\n    div.style.backgroundClip = \"padding-box\";\n    return div;\n  },\n  onRemove() {\n    // @ts-expect-error ts-migrate(2339) FIXME: Property 'getContainer' does not exist on type '{ ... Remove this comment to see the full error message\n    ReactDOM.unmountComponentAtNode(this.getContainer());\n  },\n});\n\nfunction prepareLayer({ feature, layer, data, options, limits, colors, formatValue }: any) {\n  const value = getValueForFeature(feature, data, options.targetField);\n  const valueFormatted = formatValue(value);\n  const featureData = prepareFeatureProperties(feature, valueFormatted, data, options.targetField);\n  const color = getColorByValue(value, limits, colors, options.colors.noValue);\n\n  layer.setStyle({\n    color: options.colors.borders,\n    weight: 1,\n    fillColor: color,\n    fillOpacity: 1,\n  });\n\n  if (options.tooltip.enabled) {\n    layer.bindTooltip(sanitize(formatSimpleTemplate(options.tooltip.template, featureData)), { sticky: true });\n  }\n\n  if (options.popup.enabled) {\n    layer.bindPopup(sanitize(formatSimpleTemplate(options.popup.template, featureData)));\n  }\n\n  layer.on(\"mouseover\", () => {\n    layer.setStyle({\n      weight: 2,\n      fillColor: darkenColor(color),\n    });\n  });\n  layer.on(\"mouseout\", () => {\n    layer.setStyle({\n      weight: 1,\n      fillColor: color,\n    });\n  });\n}\n\nfunction validateBounds(bounds: any, fallbackBounds: any) {\n  if (bounds) {\n    bounds = L.latLngBounds(bounds[0], bounds[1]);\n    if (bounds.isValid()) {\n      return bounds;\n    }\n  }\n  if (fallbackBounds && fallbackBounds.isValid()) {\n    return fallbackBounds;\n  }\n  return null;\n}\n\nexport default function initChoropleth(container: any, onBoundsChange: any) {\n  const _map = L.map(container, {\n    center: [0.0, 0.0],\n    zoom: 1,\n    zoomSnap: 0,\n    scrollWheelZoom: false,\n    maxBoundsViscosity: 1,\n    attributionControl: false,\n    // @ts-expect-error ts-migrate(2345) FIXME: Argument of type '{ center: [number, number]; zoom... Remove this comment to see the full error message\n    fullscreenControl: true,\n  });\n  let _choropleth: any = null;\n  const _legend = new CustomControl();\n\n  function handleMapBoundsChange() {\n    if (isFunction(onBoundsChange)) {\n      const bounds = _map.getBounds();\n      onBoundsChange([\n        // @ts-expect-error ts-migrate(2551) FIXME: Property '_southWest' does not exist on type 'LatL... Remove this comment to see the full error message\n        [bounds._southWest.lat, bounds._southWest.lng],\n        // @ts-expect-error ts-migrate(2551) FIXME: Property '_northEast' does not exist on type 'LatL... Remove this comment to see the full error message\n        [bounds._northEast.lat, bounds._northEast.lng],\n      ]);\n    }\n  }\n\n  let boundsChangedFromMap = false;\n  const onMapMoveEnd = () => {\n    handleMapBoundsChange();\n  };\n  _map.on(\"focus\", () => {\n    boundsChangedFromMap = true;\n    _map.on(\"moveend\", onMapMoveEnd);\n  });\n  _map.on(\"blur\", () => {\n    _map.off(\"moveend\", onMapMoveEnd);\n    boundsChangedFromMap = false;\n  });\n\n  function updateLayers(geoJson: any, data: any, options: any) {\n    _map.eachLayer(layer => _map.removeLayer(layer));\n    _map.removeControl(_legend);\n\n    // @ts-expect-error ts-migrate(2339) FIXME: Property 'features' does not exist on type 'object... Remove this comment to see the full error message\n    if (!isObject(geoJson) || !isArray(geoJson.features)) {\n      _choropleth = null;\n      // @ts-expect-error ts-migrate(2345) FIXME: Argument of type 'null' is not assignable to param... Remove this comment to see the full error message\n      _map.setMaxBounds(null);\n      return;\n    }\n\n    // @ts-expect-error ts-migrate(2339) FIXME: Property 'features' does not exist on type 'object... Remove this comment to see the full error message\n    const { limits, colors, legend } = createScale(geoJson.features, data, options);\n    const formatValue = createNumberFormatter(options.valueFormat, options.noValuePlaceholder);\n\n    // @ts-expect-error ts-migrate(2345) FIXME: Argument of type 'object' is not assignable to par... Remove this comment to see the full error message\n    _choropleth = L.geoJSON(geoJson, {\n      onEachFeature(feature, layer) {\n        prepareLayer({ feature, layer, data, options, limits, colors, formatValue });\n      },\n    }).addTo(_map);\n\n    const mapBounds = _choropleth.getBounds();\n    const bounds = validateBounds(options.bounds, mapBounds);\n    _map.fitBounds(bounds, { animate: false, duration: 0 });\n\n    // equivalent to `_map.setMaxBounds(mapBounds)` but without animation\n    _map.options.maxBounds = mapBounds;\n    _map.panInsideBounds(mapBounds, { animate: false, duration: 0 });\n\n    // update legend\n    if (options.legend.visible && legend.length > 0) {\n      _legend.setPosition(options.legend.position.replace(\"-\", \"\"));\n      _map.addControl(_legend);\n      ReactDOM.render(\n        // @ts-expect-error ts-migrate(2769) FIXME: No overload matches this call.\n        <Legend\n          // @ts-expect-error ts-migrate(2322) FIXME: Type '{ text: any; color: any; limit: any; }[]' is... Remove this comment to see the full error message\n          items={map(legend, item => ({ ...item, text: formatValue(item.limit) }))}\n          alignText={options.legend.alignText}\n        />,\n        _legend.getContainer()\n      );\n    }\n  }\n\n  function updateBounds(bounds: any) {\n    if (!boundsChangedFromMap) {\n      const layerBounds = _choropleth ? _choropleth.getBounds() : _map.getBounds();\n      bounds = validateBounds(bounds, layerBounds);\n      if (bounds) {\n        _map.fitBounds(bounds, { animate: false, duration: 0 });\n      }\n    }\n  }\n\n  const unwatchResize = resizeObserver(container, () => {\n    _map.invalidateSize(false);\n  });\n\n  return {\n    updateLayers,\n    updateBounds,\n    destroy() {\n      unwatchResize();\n      _map.removeControl(_legend); // _map.remove() does not cleanup controls - bug in Leaflet?\n      _map.remove();\n    },\n  };\n}\n"],"mappings":"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"}