{"version":3,"file":"Editor.js","names":["_lodash","require","_react","_interopRequireDefault","Grid","_interopRequireWildcard","_editor","_propTypes","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","Editor","_ref","options","data","onOptionsChange","optionsChanged","newOptions","merge","createElement","Fragment","Section","Select","label","value","column","onChange","map","columns","_ref2","name","Option","frequenciesColumn","_ref3","ControlLabel","Row","gutter","type","Col","span","InputNumber","placeholder","min","wordLengthLimit","max","wordCountLimit","propTypes","EditorPropTypes"],"sources":["../../../src/visualizations/word-cloud/Editor.tsx"],"sourcesContent":["import { map, merge } from \"lodash\";\nimport React from \"react\";\nimport * as Grid from \"antd/lib/grid\";\nimport { Section, Select, InputNumber, ControlLabel } from \"@/components/visualizations/editor\";\nimport { EditorPropTypes } from \"@/visualizations/prop-types\";\n\nexport default function Editor({ options, data, onOptionsChange }: any) {\n  const optionsChanged = (newOptions: any) => {\n    onOptionsChange(merge({}, options, newOptions));\n  };\n\n  return (\n    <React.Fragment>\n      {/* @ts-expect-error ts-migrate(2745) FIXME: This JSX tag's 'children' prop expects type 'never... Remove this comment to see the full error message */}\n      <Section>\n        <Select\n          label=\"Words Column\"\n          data-test=\"WordCloud.WordsColumn\"\n          value={options.column}\n          onChange={(column: any) => optionsChanged({ column })}>\n          {map(data.columns, ({ name }) => (\n            // @ts-expect-error ts-migrate(2339) FIXME: Property 'Option' does not exist on type '({ class... Remove this comment to see the full error message\n            <Select.Option key={name} data-test={\"WordCloud.WordsColumn.\" + name}>\n              {name}\n              {/* @ts-expect-error ts-migrate(2339) FIXME: Property 'Option' does not exist on type '({ class... Remove this comment to see the full error message */}\n            </Select.Option>\n          ))}\n        </Select>\n      </Section>\n      {/* @ts-expect-error ts-migrate(2745) FIXME: This JSX tag's 'children' prop expects type 'never... Remove this comment to see the full error message */}\n      <Section>\n        <Select\n          label=\"Frequencies Column\"\n          data-test=\"WordCloud.FrequenciesColumn\"\n          value={options.frequenciesColumn}\n          onChange={(frequenciesColumn: any) => optionsChanged({ frequenciesColumn })}>\n          {/* @ts-expect-error ts-migrate(2339) FIXME: Property 'Option' does not exist on type '({ class... Remove this comment to see the full error message */}\n          <Select.Option key=\"none\" value=\"\">\n            <i>(count word frequencies automatically)</i>\n            {/* @ts-expect-error ts-migrate(2339) FIXME: Property 'Option' does not exist on type '({ class... Remove this comment to see the full error message */}\n          </Select.Option>\n          {map(data.columns, ({ name }) => (\n            // @ts-expect-error ts-migrate(2339) FIXME: Property 'Option' does not exist on type '({ class... Remove this comment to see the full error message\n            <Select.Option key={\"column-\" + name} value={name} data-test={\"WordCloud.FrequenciesColumn.\" + name}>\n              {name}\n              {/* @ts-expect-error ts-migrate(2339) FIXME: Property 'Option' does not exist on type '({ class... Remove this comment to see the full error message */}\n            </Select.Option>\n          ))}\n        </Select>\n      </Section>\n      {/* @ts-expect-error ts-migrate(2745) FIXME: This JSX tag's 'children' prop expects type 'never... Remove this comment to see the full error message */}\n      <Section>\n        {/* @ts-expect-error ts-migrate(2322) FIXME: Type 'string' is not assignable to type 'null | un... Remove this comment to see the full error message */}\n        <ControlLabel label=\"Words Length Limit\">\n          {/* @ts-expect-error ts-migrate(2322) FIXME: Type 'Element' is not assignable to type 'null | u... Remove this comment to see the full error message */}\n          <Grid.Row gutter={15} type=\"flex\">\n            <Grid.Col span={12}>\n              <InputNumber\n                data-test=\"WordCloud.WordLengthLimit.Min\"\n                placeholder=\"Min\"\n                min={0}\n                value={options.wordLengthLimit.min}\n                onChange={(value: any) => optionsChanged({ wordLengthLimit: { min: value > 0 ? value : null } })}\n              />\n            </Grid.Col>\n            <Grid.Col span={12}>\n              <InputNumber\n                data-test=\"WordCloud.WordLengthLimit.Max\"\n                placeholder=\"Max\"\n                min={0}\n                value={options.wordLengthLimit.max}\n                onChange={(value: any) => optionsChanged({ wordLengthLimit: { max: value > 0 ? value : null } })}\n              />\n            </Grid.Col>\n          </Grid.Row>\n        </ControlLabel>\n      </Section>\n      {/* @ts-expect-error ts-migrate(2745) FIXME: This JSX tag's 'children' prop expects type 'never... Remove this comment to see the full error message */}\n      <Section>\n        {/* @ts-expect-error ts-migrate(2322) FIXME: Type 'string' is not assignable to type 'null | un... Remove this comment to see the full error message */}\n        <ControlLabel label=\"Frequencies Limit\">\n          {/* @ts-expect-error ts-migrate(2322) FIXME: Type 'Element' is not assignable to type 'null | u... Remove this comment to see the full error message */}\n          <Grid.Row gutter={15} type=\"flex\">\n            <Grid.Col span={12}>\n              <InputNumber\n                data-test=\"WordCloud.WordCountLimit.Min\"\n                placeholder=\"Min\"\n                min={0}\n                value={options.wordCountLimit.min}\n                onChange={(value: any) => optionsChanged({ wordCountLimit: { min: value > 0 ? value : null } })}\n              />\n            </Grid.Col>\n            <Grid.Col span={12}>\n              <InputNumber\n                data-test=\"WordCloud.WordCountLimit.Max\"\n                placeholder=\"Max\"\n                min={0}\n                value={options.wordCountLimit.max}\n                onChange={(value: any) => optionsChanged({ wordCountLimit: { max: value > 0 ? value : null } })}\n              />\n            </Grid.Col>\n          </Grid.Row>\n        </ControlLabel>\n      </Section>\n    </React.Fragment>\n  );\n}\n\nEditor.propTypes = EditorPropTypes;\n"],"mappings":"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"}