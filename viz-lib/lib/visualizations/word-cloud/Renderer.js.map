{"version":3,"file":"Renderer.js","names":["d3","cloud","each","filter","map","min","max","sortBy","toString","React","useMemo","useState","useEffect","resizeObserver","RendererPropTypes","computeWordFrequencies","rows","column","result","row","wordsList","split","d","getWordsWithFrequencies","wordColumn","frequencyColumn","count","parseFloat","Number","isFinite","word","applyLimitsToWords","words","_ref","wordLength","wordCount","_ref2","text","wordLengthFits","length","wordCountFits","prepareWords","options","frequenciesColumn","_ref3","_ref4","counts","item","wordSize","scale","linear","domain","range","color","category20","index","size","angle","wordLengthLimit","wordCountLimit","scaleElement","node","container","style","transform","_node$getBoundingClie","getBoundingClientRect","nodeWidth","width","nodeHeight","height","_container$getBoundin","containerWidth","containerHeight","scaleX","scaleY","concat","Math","createLayout","fontFamily","window","getComputedStyle","document","body","padding","font","rotate","fontSize","random","render","select","selectAll","remove","svg","append","g","data","enter","attr","x","y","svgBounds","gBounds","ceil","left","top","Renderer","_ref5","_useState","_useState2","_slicedToArray","setContainer","_useState3","_useState4","setWords","layout","on","w","start","stop","unwatch","querySelector","createElement","className","ref","propTypes"],"sources":["../../../src/visualizations/word-cloud/Renderer.tsx"],"sourcesContent":["import d3 from \"d3\";\nimport cloud from \"d3-cloud\";\nimport { each, filter, map, min, max, sortBy, toString } from \"lodash\";\nimport React, { useMemo, useState, useEffect } from \"react\";\nimport resizeObserver from \"@/services/resizeObserver\";\nimport { RendererPropTypes } from \"@/visualizations/prop-types\";\n\nimport \"./renderer.less\";\n\nfunction computeWordFrequencies(rows: any, column: any) {\n  const result = {};\n\n  each(rows, row => {\n    const wordsList = toString(row[column]).split(/\\s/g);\n    each(wordsList, d => {\n      // @ts-expect-error ts-migrate(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\n      result[d] = (result[d] || 0) + 1;\n    });\n  });\n\n  return result;\n}\n\nfunction getWordsWithFrequencies(rows: any, wordColumn: any, frequencyColumn: any) {\n  const result = {};\n\n  each(rows, row => {\n    const count = parseFloat(row[frequencyColumn]);\n    if (Number.isFinite(count) && count > 0) {\n      const word = toString(row[wordColumn]);\n      // @ts-expect-error ts-migrate(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\n      result[word] = count;\n    }\n  });\n\n  return result;\n}\n\nfunction applyLimitsToWords(words: any, { wordLength, wordCount }: any) {\n  wordLength.min = Number.isFinite(wordLength.min) ? wordLength.min : null;\n  wordLength.max = Number.isFinite(wordLength.max) ? wordLength.max : null;\n\n  wordCount.min = Number.isFinite(wordCount.min) ? wordCount.min : null;\n  wordCount.max = Number.isFinite(wordCount.max) ? wordCount.max : null;\n\n  return filter(words, ({ text, count }) => {\n    const wordLengthFits =\n      (!wordLength.min || text.length >= wordLength.min) && (!wordLength.max || text.length <= wordLength.max);\n    const wordCountFits = (!wordCount.min || count >= wordCount.min) && (!wordCount.max || count <= wordCount.max);\n    return wordLengthFits && wordCountFits;\n  });\n}\n\nfunction prepareWords(rows: any, options: any) {\n  let result: any = [];\n\n  if (options.column) {\n    if (options.frequenciesColumn) {\n      result = getWordsWithFrequencies(rows, options.column, options.frequenciesColumn);\n    } else {\n      result = computeWordFrequencies(rows, options.column);\n    }\n    result = sortBy(\n      map(result, (count, text) => ({ text, count })),\n      [({ count }) => -count, ({ text }) => -text.length] // \"count\" desc, length(\"text\") desc\n    );\n  }\n\n  // Add additional attributes\n  const counts = map(result, item => item.count);\n  // @ts-expect-error ts-migrate(2339) FIXME: Property 'scale' does not exist on type 'typeof im... Remove this comment to see the full error message\n  const wordSize = d3.scale\n    .linear()\n    .domain([min(counts), max(counts)])\n    .range([10, 100]); // min/max word size\n  // @ts-expect-error ts-migrate(2339) FIXME: Property 'scale' does not exist on type 'typeof im... Remove this comment to see the full error message\n  const color = d3.scale.category20();\n\n  each(result, (item, index) => {\n    item.size = wordSize(item.count);\n    item.color = color(index);\n    // @ts-expect-error ts-migrate(2362) FIXME: The left-hand side of an arithmetic operation must... Remove this comment to see the full error message\n    item.angle = (index % 2) * 90; // make it stable between renderings\n  });\n\n  return applyLimitsToWords(result, {\n    wordLength: options.wordLengthLimit,\n    wordCount: options.wordCountLimit,\n  });\n}\n\nfunction scaleElement(node: any, container: any) {\n  node.style.transform = null;\n  const { width: nodeWidth, height: nodeHeight } = node.getBoundingClientRect();\n  const { width: containerWidth, height: containerHeight } = container.getBoundingClientRect();\n\n  const scaleX = containerWidth / nodeWidth;\n  const scaleY = containerHeight / nodeHeight;\n\n  node.style.transform = `scale(${Math.min(scaleX, scaleY)})`;\n}\n\nfunction createLayout() {\n  const fontFamily = window.getComputedStyle(document.body).fontFamily;\n\n  return (\n    // @ts-expect-error ts-migrate(2769) FIXME: No overload matches this call.\n    cloud()\n      // make the area large enough to contain even very long words; word cloud will be placed in the center of the area\n      // TODO: dimensions probably should be larger, but `d3-cloud` has some performance issues related to these values\n      .size([5000, 5000])\n      .padding(3)\n      .font(fontFamily)\n      // @ts-expect-error ts-migrate(2339) FIXME: Property 'angle' does not exist on type 'Word'.\n      .rotate(d => d.angle)\n      .fontSize(d => d.size)\n      .random(() => 0.5)\n  ); // do not place words randomly - use compact layout\n}\n\nfunction render(container: any, words: any) {\n  container = d3.select(container);\n  container.selectAll(\"*\").remove();\n\n  const svg = container.append(\"svg\");\n  const g = svg.append(\"g\");\n  g.selectAll(\"text\")\n    .data(words)\n    .enter()\n    .append(\"text\")\n    .style(\"font-size\", (d: any) => `${d.size}px`)\n    .style(\"font-family\", (d: any) => d.font)\n    .style(\"fill\", (d: any) => d.color)\n    .attr(\"text-anchor\", \"middle\")\n    .attr(\"transform\", (d: any) => `translate(${[d.x, d.y]}) rotate(${d.rotate})`)\n    .text((d: any) => d.text);\n\n  const svgBounds = svg.node().getBoundingClientRect();\n  const gBounds = g.node().getBoundingClientRect();\n\n  svg.attr(\"width\", Math.ceil(gBounds.width)).attr(\"height\", Math.ceil(gBounds.height));\n  g.attr(\"transform\", `translate(${svgBounds.left - gBounds.left},${svgBounds.top - gBounds.top})`);\n\n  scaleElement(svg.node(), container.node());\n}\n\nexport default function Renderer({ data, options }: any) {\n  const [container, setContainer] = useState(null);\n  const [words, setWords] = useState([]);\n  const layout = useMemo(createLayout, []);\n\n  // @ts-expect-error ts-migrate(2345) FIXME: Argument of type '() => () => layout.Cloud<cloud.W... Remove this comment to see the full error message\n  useEffect(() => {\n    layout\n      .words(prepareWords(data.rows, options))\n      // @ts-expect-error ts-migrate(2345) FIXME: Argument of type 'Word[]' is not assignable to par... Remove this comment to see the full error message\n      .on(\"end\", w => setWords(w))\n      .start();\n    // @ts-expect-error ts-migrate(2769) FIXME: No overload matches this call.\n    return () => layout.on(\"end\", null).stop();\n  }, [layout, data, options, setWords]);\n\n  useEffect(() => {\n    if (container) {\n      render(container, words);\n    }\n  }, [container, words]);\n\n  useEffect(() => {\n    if (container) {\n      const unwatch = resizeObserver(container, () => {\n        // @ts-expect-error ts-migrate(2531) FIXME: Object is possibly 'null'.\n        const svg = container.querySelector(\"svg\");\n        if (svg) {\n          scaleElement(svg, container);\n        }\n      });\n      return unwatch;\n    }\n  }, [container]);\n\n  // @ts-expect-error ts-migrate(2322) FIXME: Type 'Dispatch<SetStateAction<null>>' is not assig... Remove this comment to see the full error message\n  return <div className=\"word-cloud-visualization-container\" ref={setContainer} />;\n}\n\nRenderer.propTypes = RendererPropTypes;\n"],"mappings":"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"}