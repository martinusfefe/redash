{"version":3,"file":"Renderer.js","names":["d3","_interopRequireWildcard","require","_d3Cloud","_interopRequireDefault","_lodash","_react","_resizeObserver","_propTypes","obj","__esModule","default","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_slicedToArray","arr","i","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","TypeError","o","minLen","_arrayLikeToArray","n","toString","slice","constructor","name","Array","from","test","len","length","arr2","_i","Symbol","iterator","_s","_e","_x","_r","_arr","_n","_d","next","done","push","value","err","return","isArray","computeWordFrequencies","rows","column","result","each","row","wordsList","split","d","getWordsWithFrequencies","wordColumn","frequencyColumn","count","parseFloat","Number","isFinite","word","applyLimitsToWords","words","_ref","wordLength","wordCount","min","max","filter","_ref2","text","wordLengthFits","wordCountFits","prepareWords","options","frequenciesColumn","sortBy","map","_ref3","_ref4","counts","item","wordSize","scale","linear","domain","range","color","category20","index","size","angle","wordLengthLimit","wordCountLimit","scaleElement","node","container","style","transform","_node$getBoundingClie","getBoundingClientRect","nodeWidth","width","nodeHeight","height","_container$getBoundin","containerWidth","containerHeight","scaleX","scaleY","concat","Math","createLayout","fontFamily","window","getComputedStyle","document","body","cloud","padding","font","rotate","fontSize","random","render","select","selectAll","remove","svg","append","g","data","enter","attr","x","y","svgBounds","gBounds","ceil","left","top","Renderer","_ref5","_useState","useState","_useState2","setContainer","_useState3","_useState4","setWords","layout","useMemo","useEffect","on","w","start","stop","unwatch","resizeObserver","querySelector","createElement","className","ref","propTypes","RendererPropTypes"],"sources":["../../../src/visualizations/word-cloud/Renderer.tsx"],"sourcesContent":["import * as d3 from \"d3\";\nimport cloud from \"d3-cloud\";\nimport { each, filter, map, min, max, sortBy, toString } from \"lodash\";\nimport React, { useMemo, useState, useEffect } from \"react\";\nimport resizeObserver from \"@/services/resizeObserver\";\nimport { RendererPropTypes } from \"@/visualizations/prop-types\";\n\nimport \"./renderer.less\";\n\nfunction computeWordFrequencies(rows: any, column: any) {\n  const result = {};\n\n  each(rows, row => {\n    const wordsList = toString(row[column]).split(/\\s/g);\n    each(wordsList, d => {\n      // @ts-expect-error ts-migrate(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\n      result[d] = (result[d] || 0) + 1;\n    });\n  });\n\n  return result;\n}\n\nfunction getWordsWithFrequencies(rows: any, wordColumn: any, frequencyColumn: any) {\n  const result = {};\n\n  each(rows, row => {\n    const count = parseFloat(row[frequencyColumn]);\n    if (Number.isFinite(count) && count > 0) {\n      const word = toString(row[wordColumn]);\n      // @ts-expect-error ts-migrate(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\n      result[word] = count;\n    }\n  });\n\n  return result;\n}\n\nfunction applyLimitsToWords(words: any, { wordLength, wordCount }: any) {\n  wordLength.min = Number.isFinite(wordLength.min) ? wordLength.min : null;\n  wordLength.max = Number.isFinite(wordLength.max) ? wordLength.max : null;\n\n  wordCount.min = Number.isFinite(wordCount.min) ? wordCount.min : null;\n  wordCount.max = Number.isFinite(wordCount.max) ? wordCount.max : null;\n\n  return filter(words, ({ text, count }) => {\n    const wordLengthFits =\n      (!wordLength.min || text.length >= wordLength.min) && (!wordLength.max || text.length <= wordLength.max);\n    const wordCountFits = (!wordCount.min || count >= wordCount.min) && (!wordCount.max || count <= wordCount.max);\n    return wordLengthFits && wordCountFits;\n  });\n}\n\nfunction prepareWords(rows: any, options: any) {\n  let result: any = [];\n\n  if (options.column) {\n    if (options.frequenciesColumn) {\n      result = getWordsWithFrequencies(rows, options.column, options.frequenciesColumn);\n    } else {\n      result = computeWordFrequencies(rows, options.column);\n    }\n    result = sortBy(\n      map(result, (count, text) => ({ text, count })),\n      [({ count }) => -count, ({ text }) => -text.length] // \"count\" desc, length(\"text\") desc\n    );\n  }\n\n  // Add additional attributes\n  const counts = map(result, item => item.count);\n  // @ts-expect-error ts-migrate(2339) FIXME: Property 'scale' does not exist on type 'typeof im... Remove this comment to see the full error message\n  const wordSize = d3.scale\n    .linear()\n    .domain([min(counts), max(counts)])\n    .range([10, 100]); // min/max word size\n  // @ts-expect-error ts-migrate(2339) FIXME: Property 'scale' does not exist on type 'typeof im... Remove this comment to see the full error message\n  const color = d3.scale.category20();\n\n  each(result, (item, index) => {\n    item.size = wordSize(item.count);\n    item.color = color(index);\n    // @ts-expect-error ts-migrate(2362) FIXME: The left-hand side of an arithmetic operation must... Remove this comment to see the full error message\n    item.angle = (index % 2) * 90; // make it stable between renderings\n  });\n\n  return applyLimitsToWords(result, {\n    wordLength: options.wordLengthLimit,\n    wordCount: options.wordCountLimit,\n  });\n}\n\nfunction scaleElement(node: any, container: any) {\n  node.style.transform = null;\n  const { width: nodeWidth, height: nodeHeight } = node.getBoundingClientRect();\n  const { width: containerWidth, height: containerHeight } = container.getBoundingClientRect();\n\n  const scaleX = containerWidth / nodeWidth;\n  const scaleY = containerHeight / nodeHeight;\n\n  node.style.transform = `scale(${Math.min(scaleX, scaleY)})`;\n}\n\nfunction createLayout() {\n  const fontFamily = window.getComputedStyle(document.body).fontFamily;\n\n  return (\n    // @ts-expect-error ts-migrate(2769) FIXME: No overload matches this call.\n    cloud()\n      // make the area large enough to contain even very long words; word cloud will be placed in the center of the area\n      // TODO: dimensions probably should be larger, but `d3-cloud` has some performance issues related to these values\n      .size([5000, 5000])\n      .padding(3)\n      .font(fontFamily)\n      // @ts-expect-error ts-migrate(2339) FIXME: Property 'angle' does not exist on type 'Word'.\n      .rotate(d => d.angle)\n      .fontSize(d => d.size)\n      .random(() => 0.5)\n  ); // do not place words randomly - use compact layout\n}\n\nfunction render(container: any, words: any) {\n  container = d3.select(container);\n  container.selectAll(\"*\").remove();\n\n  const svg = container.append(\"svg\");\n  const g = svg.append(\"g\");\n  g.selectAll(\"text\")\n    .data(words)\n    .enter()\n    .append(\"text\")\n    .style(\"font-size\", (d: any) => `${d.size}px`)\n    .style(\"font-family\", (d: any) => d.font)\n    .style(\"fill\", (d: any) => d.color)\n    .attr(\"text-anchor\", \"middle\")\n    .attr(\"transform\", (d: any) => `translate(${[d.x, d.y]}) rotate(${d.rotate})`)\n    .text((d: any) => d.text);\n\n  const svgBounds = svg.node().getBoundingClientRect();\n  const gBounds = g.node().getBoundingClientRect();\n\n  svg.attr(\"width\", Math.ceil(gBounds.width)).attr(\"height\", Math.ceil(gBounds.height));\n  g.attr(\"transform\", `translate(${svgBounds.left - gBounds.left},${svgBounds.top - gBounds.top})`);\n\n  scaleElement(svg.node(), container.node());\n}\n\nexport default function Renderer({ data, options }: any) {\n  const [container, setContainer] = useState(null);\n  const [words, setWords] = useState([]);\n  const layout = useMemo(createLayout, []);\n\n  // @ts-expect-error ts-migrate(2345) FIXME: Argument of type '() => () => layout.Cloud<cloud.W... Remove this comment to see the full error message\n  useEffect(() => {\n    layout\n      .words(prepareWords(data.rows, options))\n      // @ts-expect-error ts-migrate(2345) FIXME: Argument of type 'Word[]' is not assignable to par... Remove this comment to see the full error message\n      .on(\"end\", w => setWords(w))\n      .start();\n    // @ts-expect-error ts-migrate(2769) FIXME: No overload matches this call.\n    return () => layout.on(\"end\", null).stop();\n  }, [layout, data, options, setWords]);\n\n  useEffect(() => {\n    if (container) {\n      render(container, words);\n    }\n  }, [container, words]);\n\n  useEffect(() => {\n    if (container) {\n      const unwatch = resizeObserver(container, () => {\n        // @ts-expect-error ts-migrate(2531) FIXME: Object is possibly 'null'.\n        const svg = container.querySelector(\"svg\");\n        if (svg) {\n          scaleElement(svg, container);\n        }\n      });\n      return unwatch;\n    }\n  }, [container]);\n\n  // @ts-expect-error ts-migrate(2322) FIXME: Type 'Dispatch<SetStateAction<null>>' is not assig... Remove this comment to see the full error message\n  return <div className=\"word-cloud-visualization-container\" ref={setContainer} />;\n}\n\nRenderer.propTypes = RendererPropTypes;\n"],"mappings":";;;;;;AAAA,IAAAA,EAAA,GAAAC,uBAAA,CAAAC,OAAA;AACA,IAAAC,QAAA,GAAAC,sBAAA,CAAAF,OAAA;AACA,IAAAG,OAAA,GAAAH,OAAA;AACA,IAAAI,MAAA,GAAAL,uBAAA,CAAAC,OAAA;AACA,IAAAK,eAAA,GAAAH,sBAAA,CAAAF,OAAA;AACA,IAAAM,UAAA,GAAAN,OAAA;AAEAA,OAAA;AAAyB,SAAAE,uBAAAK,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,KAAAE,OAAA,EAAAF,GAAA;AAAA,SAAAG,yBAAAC,WAAA,eAAAC,OAAA,kCAAAC,iBAAA,OAAAD,OAAA,QAAAE,gBAAA,OAAAF,OAAA,YAAAF,wBAAA,YAAAA,yBAAAC,WAAA,WAAAA,WAAA,GAAAG,gBAAA,GAAAD,iBAAA,KAAAF,WAAA;AAAA,SAAAZ,wBAAAQ,GAAA,EAAAI,WAAA,SAAAA,WAAA,IAAAJ,GAAA,IAAAA,GAAA,CAAAC,UAAA,WAAAD,GAAA,QAAAA,GAAA,oBAAAA,GAAA,wBAAAA,GAAA,4BAAAE,OAAA,EAAAF,GAAA,UAAAQ,KAAA,GAAAL,wBAAA,CAAAC,WAAA,OAAAI,KAAA,IAAAA,KAAA,CAAAC,GAAA,CAAAT,GAAA,YAAAQ,KAAA,CAAAE,GAAA,CAAAV,GAAA,SAAAW,MAAA,WAAAC,qBAAA,GAAAC,MAAA,CAAAC,cAAA,IAAAD,MAAA,CAAAE,wBAAA,WAAAC,GAAA,IAAAhB,GAAA,QAAAgB,GAAA,kBAAAH,MAAA,CAAAI,SAAA,CAAAC,cAAA,CAAAC,IAAA,CAAAnB,GAAA,EAAAgB,GAAA,SAAAI,IAAA,GAAAR,qBAAA,GAAAC,MAAA,CAAAE,wBAAA,CAAAf,GAAA,EAAAgB,GAAA,cAAAI,IAAA,KAAAA,IAAA,CAAAV,GAAA,IAAAU,IAAA,CAAAC,GAAA,KAAAR,MAAA,CAAAC,cAAA,CAAAH,MAAA,EAAAK,GAAA,EAAAI,IAAA,YAAAT,MAAA,CAAAK,GAAA,IAAAhB,GAAA,CAAAgB,GAAA,SAAAL,MAAA,CAAAT,OAAA,GAAAF,GAAA,MAAAQ,KAAA,IAAAA,KAAA,CAAAa,GAAA,CAAArB,GAAA,EAAAW,MAAA,YAAAA,MAAA;AAAA,SAAAW,eAAAC,GAAA,EAAAC,CAAA,WAAAC,eAAA,CAAAF,GAAA,KAAAG,qBAAA,CAAAH,GAAA,EAAAC,CAAA,KAAAG,2BAAA,CAAAJ,GAAA,EAAAC,CAAA,KAAAI,gBAAA;AAAA,SAAAA,iBAAA,cAAAC,SAAA;AAAA,SAAAF,4BAAAG,CAAA,EAAAC,MAAA,SAAAD,CAAA,qBAAAA,CAAA,sBAAAE,iBAAA,CAAAF,CAAA,EAAAC,MAAA,OAAAE,CAAA,GAAApB,MAAA,CAAAI,SAAA,CAAAiB,QAAA,CAAAf,IAAA,CAAAW,CAAA,EAAAK,KAAA,aAAAF,CAAA,iBAAAH,CAAA,CAAAM,WAAA,EAAAH,CAAA,GAAAH,CAAA,CAAAM,WAAA,CAAAC,IAAA,MAAAJ,CAAA,cAAAA,CAAA,mBAAAK,KAAA,CAAAC,IAAA,CAAAT,CAAA,OAAAG,CAAA,+DAAAO,IAAA,CAAAP,CAAA,UAAAD,iBAAA,CAAAF,CAAA,EAAAC,MAAA;AAAA,SAAAC,kBAAAT,GAAA,EAAAkB,GAAA,QAAAA,GAAA,YAAAA,GAAA,GAAAlB,GAAA,CAAAmB,MAAA,EAAAD,GAAA,GAAAlB,GAAA,CAAAmB,MAAA,WAAAlB,CAAA,MAAAmB,IAAA,OAAAL,KAAA,CAAAG,GAAA,GAAAjB,CAAA,GAAAiB,GAAA,EAAAjB,CAAA,IAAAmB,IAAA,CAAAnB,CAAA,IAAAD,GAAA,CAAAC,CAAA,UAAAmB,IAAA;AAAA,SAAAjB,sBAAAH,GAAA,EAAAC,CAAA,QAAAoB,EAAA,WAAArB,GAAA,gCAAAsB,MAAA,IAAAtB,GAAA,CAAAsB,MAAA,CAAAC,QAAA,KAAAvB,GAAA,4BAAAqB,EAAA,QAAAG,EAAA,EAAAC,EAAA,EAAAC,EAAA,EAAAC,EAAA,EAAAC,IAAA,OAAAC,EAAA,OAAAC,EAAA,iBAAAJ,EAAA,IAAAL,EAAA,GAAAA,EAAA,CAAAzB,IAAA,CAAAI,GAAA,GAAA+B,IAAA,QAAA9B,CAAA,QAAAX,MAAA,CAAA+B,EAAA,MAAAA,EAAA,UAAAQ,EAAA,uBAAAA,EAAA,IAAAL,EAAA,GAAAE,EAAA,CAAA9B,IAAA,CAAAyB,EAAA,GAAAW,IAAA,MAAAJ,IAAA,CAAAK,IAAA,CAAAT,EAAA,CAAAU,KAAA,GAAAN,IAAA,CAAAT,MAAA,KAAAlB,CAAA,GAAA4B,EAAA,iBAAAM,GAAA,IAAAL,EAAA,OAAAL,EAAA,GAAAU,GAAA,yBAAAN,EAAA,YAAAR,EAAA,CAAAe,MAAA,KAAAT,EAAA,GAAAN,EAAA,CAAAe,MAAA,IAAA9C,MAAA,CAAAqC,EAAA,MAAAA,EAAA,2BAAAG,EAAA,QAAAL,EAAA,aAAAG,IAAA;AAAA,SAAA1B,gBAAAF,GAAA,QAAAe,KAAA,CAAAsB,OAAA,CAAArC,GAAA,UAAAA,GAAA;AAEzB,SAASsC,sBAAsBA,CAACC,IAAS,EAAEC,MAAW,EAAE;EACtD,IAAMC,MAAM,GAAG,CAAC,CAAC;EAEjB,IAAAC,YAAI,EAACH,IAAI,EAAEI,GAAG,IAAI;IAChB,IAAMC,SAAS,GAAG,IAAAjC,gBAAQ,EAACgC,GAAG,CAACH,MAAM,CAAC,CAAC,CAACK,KAAK,CAAC,KAAK,CAAC;IACpD,IAAAH,YAAI,EAACE,SAAS,EAAEE,CAAC,IAAI;MACnB;MACAL,MAAM,CAACK,CAAC,CAAC,GAAG,CAACL,MAAM,CAACK,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC;IAClC,CAAC,CAAC;EACJ,CAAC,CAAC;EAEF,OAAOL,MAAM;AACf;AAEA,SAASM,uBAAuBA,CAACR,IAAS,EAAES,UAAe,EAAEC,eAAoB,EAAE;EACjF,IAAMR,MAAM,GAAG,CAAC,CAAC;EAEjB,IAAAC,YAAI,EAACH,IAAI,EAAEI,GAAG,IAAI;IAChB,IAAMO,KAAK,GAAGC,UAAU,CAACR,GAAG,CAACM,eAAe,CAAC,CAAC;IAC9C,IAAIG,MAAM,CAACC,QAAQ,CAACH,KAAK,CAAC,IAAIA,KAAK,GAAG,CAAC,EAAE;MACvC,IAAMI,IAAI,GAAG,IAAA3C,gBAAQ,EAACgC,GAAG,CAACK,UAAU,CAAC,CAAC;MACtC;MACAP,MAAM,CAACa,IAAI,CAAC,GAAGJ,KAAK;IACtB;EACF,CAAC,CAAC;EAEF,OAAOT,MAAM;AACf;AAEA,SAASc,kBAAkBA,CAACC,KAAU,EAAAC,IAAA,EAAkC;EAAA,IAA9BC,UAAU,GAAAD,IAAA,CAAVC,UAAU;IAAEC,SAAS,GAAAF,IAAA,CAATE,SAAS;EAC7DD,UAAU,CAACE,GAAG,GAAGR,MAAM,CAACC,QAAQ,CAACK,UAAU,CAACE,GAAG,CAAC,GAAGF,UAAU,CAACE,GAAG,GAAG,IAAI;EACxEF,UAAU,CAACG,GAAG,GAAGT,MAAM,CAACC,QAAQ,CAACK,UAAU,CAACG,GAAG,CAAC,GAAGH,UAAU,CAACG,GAAG,GAAG,IAAI;EAExEF,SAAS,CAACC,GAAG,GAAGR,MAAM,CAACC,QAAQ,CAACM,SAAS,CAACC,GAAG,CAAC,GAAGD,SAAS,CAACC,GAAG,GAAG,IAAI;EACrED,SAAS,CAACE,GAAG,GAAGT,MAAM,CAACC,QAAQ,CAACM,SAAS,CAACE,GAAG,CAAC,GAAGF,SAAS,CAACE,GAAG,GAAG,IAAI;EAErE,OAAO,IAAAC,cAAM,EAACN,KAAK,EAAEO,KAAA,IAAqB;IAAA,IAAlBC,IAAI,GAAAD,KAAA,CAAJC,IAAI;MAAEd,KAAK,GAAAa,KAAA,CAALb,KAAK;IACjC,IAAMe,cAAc,GAClB,CAAC,CAACP,UAAU,CAACE,GAAG,IAAII,IAAI,CAAC7C,MAAM,IAAIuC,UAAU,CAACE,GAAG,MAAM,CAACF,UAAU,CAACG,GAAG,IAAIG,IAAI,CAAC7C,MAAM,IAAIuC,UAAU,CAACG,GAAG,CAAC;IAC1G,IAAMK,aAAa,GAAG,CAAC,CAACP,SAAS,CAACC,GAAG,IAAIV,KAAK,IAAIS,SAAS,CAACC,GAAG,MAAM,CAACD,SAAS,CAACE,GAAG,IAAIX,KAAK,IAAIS,SAAS,CAACE,GAAG,CAAC;IAC9G,OAAOI,cAAc,IAAIC,aAAa;EACxC,CAAC,CAAC;AACJ;AAEA,SAASC,YAAYA,CAAC5B,IAAS,EAAE6B,OAAY,EAAE;EAC7C,IAAI3B,MAAW,GAAG,EAAE;EAEpB,IAAI2B,OAAO,CAAC5B,MAAM,EAAE;IAClB,IAAI4B,OAAO,CAACC,iBAAiB,EAAE;MAC7B5B,MAAM,GAAGM,uBAAuB,CAACR,IAAI,EAAE6B,OAAO,CAAC5B,MAAM,EAAE4B,OAAO,CAACC,iBAAiB,CAAC;IACnF,CAAC,MAAM;MACL5B,MAAM,GAAGH,sBAAsB,CAACC,IAAI,EAAE6B,OAAO,CAAC5B,MAAM,CAAC;IACvD;IACAC,MAAM,GAAG,IAAA6B,cAAM,EACb,IAAAC,WAAG,EAAC9B,MAAM,EAAE,CAACS,KAAK,EAAEc,IAAI,MAAM;MAAEA,IAAI;MAAEd;IAAM,CAAC,CAAC,CAAC,EAC/C,CAACsB,KAAA;MAAA,IAAGtB,KAAK,GAAAsB,KAAA,CAALtB,KAAK;MAAA,OAAO,CAACA,KAAK;IAAA,GAAEuB,KAAA;MAAA,IAAGT,IAAI,GAAAS,KAAA,CAAJT,IAAI;MAAA,OAAO,CAACA,IAAI,CAAC7C,MAAM;IAAA,EAAC,CAAC;IACtD,CAAC;EACH;;EAEA;EACA,IAAMuD,MAAM,GAAG,IAAAH,WAAG,EAAC9B,MAAM,EAAEkC,IAAI,IAAIA,IAAI,CAACzB,KAAK,CAAC;EAC9C;EACA,IAAM0B,QAAQ,GAAG5G,EAAE,CAAC6G,KAAK,CACtBC,MAAM,CAAC,CAAC,CACRC,MAAM,CAAC,CAAC,IAAAnB,WAAG,EAACc,MAAM,CAAC,EAAE,IAAAb,WAAG,EAACa,MAAM,CAAC,CAAC,CAAC,CAClCM,KAAK,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;EACrB;EACA,IAAMC,KAAK,GAAGjH,EAAE,CAAC6G,KAAK,CAACK,UAAU,CAAC,CAAC;EAEnC,IAAAxC,YAAI,EAACD,MAAM,EAAE,CAACkC,IAAI,EAAEQ,KAAK,KAAK;IAC5BR,IAAI,CAACS,IAAI,GAAGR,QAAQ,CAACD,IAAI,CAACzB,KAAK,CAAC;IAChCyB,IAAI,CAACM,KAAK,GAAGA,KAAK,CAACE,KAAK,CAAC;IACzB;IACAR,IAAI,CAACU,KAAK,GAAIF,KAAK,GAAG,CAAC,GAAI,EAAE,CAAC,CAAC;EACjC,CAAC,CAAC;;EAEF,OAAO5B,kBAAkB,CAACd,MAAM,EAAE;IAChCiB,UAAU,EAAEU,OAAO,CAACkB,eAAe;IACnC3B,SAAS,EAAES,OAAO,CAACmB;EACrB,CAAC,CAAC;AACJ;AAEA,SAASC,YAAYA,CAACC,IAAS,EAAEC,SAAc,EAAE;EAC/CD,IAAI,CAACE,KAAK,CAACC,SAAS,GAAG,IAAI;EAC3B,IAAAC,qBAAA,GAAiDJ,IAAI,CAACK,qBAAqB,CAAC,CAAC;IAA9DC,SAAS,GAAAF,qBAAA,CAAhBG,KAAK;IAAqBC,UAAU,GAAAJ,qBAAA,CAAlBK,MAAM;EAChC,IAAAC,qBAAA,GAA2DT,SAAS,CAACI,qBAAqB,CAAC,CAAC;IAA7EM,cAAc,GAAAD,qBAAA,CAArBH,KAAK;IAA0BK,eAAe,GAAAF,qBAAA,CAAvBD,MAAM;EAErC,IAAMI,MAAM,GAAGF,cAAc,GAAGL,SAAS;EACzC,IAAMQ,MAAM,GAAGF,eAAe,GAAGJ,UAAU;EAE3CR,IAAI,CAACE,KAAK,CAACC,SAAS,YAAAY,MAAA,CAAYC,IAAI,CAAC7C,GAAG,CAAC0C,MAAM,EAAEC,MAAM,CAAC,MAAG;AAC7D;AAEA,SAASG,YAAYA,CAAA,EAAG;EACtB,IAAMC,UAAU,GAAGC,MAAM,CAACC,gBAAgB,CAACC,QAAQ,CAACC,IAAI,CAAC,CAACJ,UAAU;EAEpE;IACE;IACA,IAAAK,gBAAK,EAAC;IACJ;IACA;IAAA,CACC5B,IAAI,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAClB6B,OAAO,CAAC,CAAC,CAAC,CACVC,IAAI,CAACP,UAAU;IAChB;IAAA,CACCQ,MAAM,CAACrE,CAAC,IAAIA,CAAC,CAACuC,KAAK,CAAC,CACpB+B,QAAQ,CAACtE,CAAC,IAAIA,CAAC,CAACsC,IAAI,CAAC,CACrBiC,MAAM,CAAC,MAAM,GAAG;EAAC,EACpB,CAAC;AACL;;AAEA,SAASC,MAAMA,CAAC5B,SAAc,EAAElC,KAAU,EAAE;EAC1CkC,SAAS,GAAG1H,EAAE,CAACuJ,MAAM,CAAC7B,SAAS,CAAC;EAChCA,SAAS,CAAC8B,SAAS,CAAC,GAAG,CAAC,CAACC,MAAM,CAAC,CAAC;EAEjC,IAAMC,GAAG,GAAGhC,SAAS,CAACiC,MAAM,CAAC,KAAK,CAAC;EACnC,IAAMC,CAAC,GAAGF,GAAG,CAACC,MAAM,CAAC,GAAG,CAAC;EACzBC,CAAC,CAACJ,SAAS,CAAC,MAAM,CAAC,CAChBK,IAAI,CAACrE,KAAK,CAAC,CACXsE,KAAK,CAAC,CAAC,CACPH,MAAM,CAAC,MAAM,CAAC,CACdhC,KAAK,CAAC,WAAW,EAAG7C,CAAM,OAAA0D,MAAA,CAAQ1D,CAAC,CAACsC,IAAI,OAAI,CAAC,CAC7CO,KAAK,CAAC,aAAa,EAAG7C,CAAM,IAAKA,CAAC,CAACoE,IAAI,CAAC,CACxCvB,KAAK,CAAC,MAAM,EAAG7C,CAAM,IAAKA,CAAC,CAACmC,KAAK,CAAC,CAClC8C,IAAI,CAAC,aAAa,EAAE,QAAQ,CAAC,CAC7BA,IAAI,CAAC,WAAW,EAAGjF,CAAM,iBAAA0D,MAAA,CAAkB,CAAC1D,CAAC,CAACkF,CAAC,EAAElF,CAAC,CAACmF,CAAC,CAAC,eAAAzB,MAAA,CAAY1D,CAAC,CAACqE,MAAM,MAAG,CAAC,CAC7EnD,IAAI,CAAElB,CAAM,IAAKA,CAAC,CAACkB,IAAI,CAAC;EAE3B,IAAMkE,SAAS,GAAGR,GAAG,CAACjC,IAAI,CAAC,CAAC,CAACK,qBAAqB,CAAC,CAAC;EACpD,IAAMqC,OAAO,GAAGP,CAAC,CAACnC,IAAI,CAAC,CAAC,CAACK,qBAAqB,CAAC,CAAC;EAEhD4B,GAAG,CAACK,IAAI,CAAC,OAAO,EAAEtB,IAAI,CAAC2B,IAAI,CAACD,OAAO,CAACnC,KAAK,CAAC,CAAC,CAAC+B,IAAI,CAAC,QAAQ,EAAEtB,IAAI,CAAC2B,IAAI,CAACD,OAAO,CAACjC,MAAM,CAAC,CAAC;EACrF0B,CAAC,CAACG,IAAI,CAAC,WAAW,eAAAvB,MAAA,CAAe0B,SAAS,CAACG,IAAI,GAAGF,OAAO,CAACE,IAAI,OAAA7B,MAAA,CAAI0B,SAAS,CAACI,GAAG,GAAGH,OAAO,CAACG,GAAG,MAAG,CAAC;EAEjG9C,YAAY,CAACkC,GAAG,CAACjC,IAAI,CAAC,CAAC,EAAEC,SAAS,CAACD,IAAI,CAAC,CAAC,CAAC;AAC5C;AAEe,SAAS8C,QAAQA,CAAAC,KAAA,EAAyB;EAAA,IAAtBX,IAAI,GAAAW,KAAA,CAAJX,IAAI;IAAEzD,OAAO,GAAAoE,KAAA,CAAPpE,OAAO;EAC9C,IAAAqE,SAAA,GAAkC,IAAAC,eAAQ,EAAC,IAAI,CAAC;IAAAC,UAAA,GAAA5I,cAAA,CAAA0I,SAAA;IAAzC/C,SAAS,GAAAiD,UAAA;IAAEC,YAAY,GAAAD,UAAA;EAC9B,IAAAE,UAAA,GAA0B,IAAAH,eAAQ,EAAC,EAAE,CAAC;IAAAI,UAAA,GAAA/I,cAAA,CAAA8I,UAAA;IAA/BrF,KAAK,GAAAsF,UAAA;IAAEC,QAAQ,GAAAD,UAAA;EACtB,IAAME,MAAM,GAAG,IAAAC,cAAO,EAACvC,YAAY,EAAE,EAAE,CAAC;;EAExC;EACA,IAAAwC,gBAAS,EAAC,MAAM;IACdF,MAAM,CACHxF,KAAK,CAACW,YAAY,CAAC0D,IAAI,CAACtF,IAAI,EAAE6B,OAAO,CAAC;IACvC;IAAA,CACC+E,EAAE,CAAC,KAAK,EAAEC,CAAC,IAAIL,QAAQ,CAACK,CAAC,CAAC,CAAC,CAC3BC,KAAK,CAAC,CAAC;IACV;IACA,OAAO,MAAML,MAAM,CAACG,EAAE,CAAC,KAAK,EAAE,IAAI,CAAC,CAACG,IAAI,CAAC,CAAC;EAC5C,CAAC,EAAE,CAACN,MAAM,EAAEnB,IAAI,EAAEzD,OAAO,EAAE2E,QAAQ,CAAC,CAAC;EAErC,IAAAG,gBAAS,EAAC,MAAM;IACd,IAAIxD,SAAS,EAAE;MACb4B,MAAM,CAAC5B,SAAS,EAAElC,KAAK,CAAC;IAC1B;EACF,CAAC,EAAE,CAACkC,SAAS,EAAElC,KAAK,CAAC,CAAC;EAEtB,IAAA0F,gBAAS,EAAC,MAAM;IACd,IAAIxD,SAAS,EAAE;MACb,IAAM6D,OAAO,GAAG,IAAAC,uBAAc,EAAC9D,SAAS,EAAE,MAAM;QAC9C;QACA,IAAMgC,GAAG,GAAGhC,SAAS,CAAC+D,aAAa,CAAC,KAAK,CAAC;QAC1C,IAAI/B,GAAG,EAAE;UACPlC,YAAY,CAACkC,GAAG,EAAEhC,SAAS,CAAC;QAC9B;MACF,CAAC,CAAC;MACF,OAAO6D,OAAO;IAChB;EACF,CAAC,EAAE,CAAC7D,SAAS,CAAC,CAAC;;EAEf;EACA,oBAAOpH,MAAA,CAAAK,OAAA,CAAA+K,aAAA;IAAKC,SAAS,EAAC,oCAAoC;IAACC,GAAG,EAAEhB;EAAa,CAAE,CAAC;AAClF;AAEAL,QAAQ,CAACsB,SAAS,GAAGC,4BAAiB"}