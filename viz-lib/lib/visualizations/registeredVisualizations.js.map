{"version":3,"file":"registeredVisualizations.js","names":["_lodash","require","_propTypes","_interopRequireDefault","_boxPlot","_chart","_choropleth","_cohort","_counter","_details","_funnel","_map","_pivot","_sankey","_sunburst","_table","_wordCloud","obj","__esModule","default","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","value","_toPropertyKey","configurable","writable","arg","_toPrimitive","String","input","hint","prim","Symbol","toPrimitive","undefined","res","call","TypeError","Number","VisualizationConfig","PropTypes","shape","type","string","isRequired","name","getOptions","func","isDefault","bool","isDeprecated","Renderer","Editor","autoHeight","defaultRows","number","defaultColumns","minRows","maxRows","minColumns","maxColumns","registeredVisualizations","validateVisualizationConfig","config","typeSpecs","values","checkPropTypes","registerVisualization","Error","concat","each","flatten","boxPlotVisualization","chartVisualization","choroplethVisualization","cohortVisualization","counterVisualization","detailsVisualization","funnelVisualization","mapVisualization","pivotVisualization","sankeyVisualization","sunburstVisualization","tableVisualization","wordCloudVisualization","_default","exports","getDefaultVisualization","find","visualization","newVisualization","options","description"],"sources":["../../src/visualizations/registeredVisualizations.ts"],"sourcesContent":["import { find, flatten, each } from \"lodash\";\nimport PropTypes from \"prop-types\";\n\nimport boxPlotVisualization from \"./box-plot\";\nimport chartVisualization from \"./chart\";\nimport choroplethVisualization from \"./choropleth\";\nimport cohortVisualization from \"./cohort\";\nimport counterVisualization from \"./counter\";\nimport detailsVisualization from \"./details\";\nimport funnelVisualization from \"./funnel\";\nimport mapVisualization from \"./map\";\nimport pivotVisualization from \"./pivot\";\nimport sankeyVisualization from \"./sankey\";\nimport sunburstVisualization from \"./sunburst\";\nimport tableVisualization from \"./table\";\nimport wordCloudVisualization from \"./word-cloud\";\n\ntype VisualizationConfig = {\n  type: string;\n  name: string;\n  getOptions: (...args: any[]) => any;\n  isDefault?: boolean;\n  isDeprecated?: boolean;\n  Renderer: (...args: any[]) => any;\n  Editor?: (...args: any[]) => any;\n  autoHeight?: boolean;\n  defaultRows?: number;\n  defaultColumns?: number;\n  minRows?: number;\n  maxRows?: number;\n  minColumns?: number;\n  maxColumns?: number;\n};\n\n// @ts-expect-error ts-migrate(2322) FIXME: Type 'Requireable<InferProps<{ type: Validator<str... Remove this comment to see the full error message\nconst VisualizationConfig: PropTypes.Requireable<VisualizationConfig> = PropTypes.shape({\n  type: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  getOptions: PropTypes.func.isRequired,\n  isDefault: PropTypes.bool,\n  isDeprecated: PropTypes.bool,\n  Renderer: PropTypes.func.isRequired,\n  Editor: PropTypes.func,\n  // other config options\n  autoHeight: PropTypes.bool,\n  defaultRows: PropTypes.number,\n  defaultColumns: PropTypes.number,\n  minRows: PropTypes.number,\n  maxRows: PropTypes.number,\n  minColumns: PropTypes.number,\n  maxColumns: PropTypes.number,\n});\n\nconst registeredVisualizations = {};\n\nfunction validateVisualizationConfig(config: any) {\n  const typeSpecs = { config: VisualizationConfig };\n  const values = { config };\n  PropTypes.checkPropTypes(typeSpecs, values, \"prop\", \"registerVisualization\");\n}\n\nfunction registerVisualization(config: any) {\n  validateVisualizationConfig(config);\n  config = {\n    Editor: () => null,\n    ...config,\n    isDefault: config.isDefault && !config.isDeprecated,\n  };\n\n  // @ts-expect-error ts-migrate(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\n  if (registeredVisualizations[config.type]) {\n    throw new Error(`Visualization ${config.type} already registered.`);\n  }\n\n  // @ts-expect-error ts-migrate(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\n  registeredVisualizations[config.type] = config;\n}\n\neach(\n  flatten([\n    boxPlotVisualization,\n    chartVisualization,\n    choroplethVisualization,\n    cohortVisualization,\n    counterVisualization,\n    detailsVisualization,\n    funnelVisualization,\n    mapVisualization,\n    pivotVisualization,\n    sankeyVisualization,\n    sunburstVisualization,\n    tableVisualization,\n    wordCloudVisualization,\n  ]),\n  registerVisualization\n);\n\nexport default registeredVisualizations;\n\nexport function getDefaultVisualization() {\n  // return any visualization explicitly marked as default, or any non-deprecated otherwise\n  return (\n    // @ts-expect-error ts-migrate(2339) FIXME: Property 'isDefault' does not exist on type 'never... Remove this comment to see the full error message\n    find(registeredVisualizations, visualization => visualization.isDefault) ||\n    // @ts-expect-error ts-migrate(2339) FIXME: Property 'isDeprecated' does not exist on type 'ne... Remove this comment to see the full error message\n    find(registeredVisualizations, visualization => !visualization.isDeprecated)\n  );\n}\n\nexport function newVisualization(type = null, options = {}) {\n  // @ts-expect-error ts-migrate(2538) FIXME: Type 'null' cannot be used as an index type.\n  const visualization = type ? registeredVisualizations[type] : getDefaultVisualization();\n  return {\n    type: visualization.type,\n    name: visualization.name,\n    description: \"\",\n    options,\n  };\n}\n"],"mappings":"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"}