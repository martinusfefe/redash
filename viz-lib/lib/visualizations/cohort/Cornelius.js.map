{"version":3,"file":"Cornelius.js","names":["isNil","isFinite","map","extend","min","max","moment","chroma","React","useMemo","Tooltip","createNumberFormatter","formatSimpleTemplate","chooseTextColorForBackground","momentInterval","daily","weekly","monthly","yearly","timeLabelFormats","defaultOptions","initialDate","timeInterval","noValuePlaceholder","rawNumberOnHover","displayAbsoluteValues","initialIntervalNumber","maxColumns","Infinity","title","timeColumnTitle","peopleColumnTitle","stageColumnTitle","numberFormat","percentFormat","timeLabelFormat","colors","steps","prepareOptions","options","formatNumber","formatPercent","getColorForValue","scale","mode","domain","classes","isLightColor","backgroundColor","white","black","contrast","formatStageTitle","index","formatTimeLabel","offset","interval","clone","add","format","CorneliusHeader","_ref","maxRowLength","cells","i","push","createElement","key","concat","className","CorneliusRow","_ref2","data","baseValue","value","percentageValue","cellProps","children","style","color","mouseEnterDelay","mouseLeaveDelay","Cornelius","_ref3","d","length","row","defaultProps"],"sources":["../../../src/visualizations/cohort/Cornelius.tsx"],"sourcesContent":["/*!\n * React port of Cornelius library (based on v0.1 released under the MIT license)\n * Original library: http://restorando.github.io/cornelius\n */\n\nimport { isNil, isFinite, map, extend, min, max } from \"lodash\";\nimport moment from \"moment\";\nimport chroma from \"chroma-js\";\nimport React, { useMemo } from \"react\";\nimport Tooltip from \"antd/lib/tooltip\";\nimport { createNumberFormatter, formatSimpleTemplate } from \"@/lib/value-format\";\nimport chooseTextColorForBackground from \"@/lib/chooseTextColorForBackground\";\n\nimport \"./cornelius.less\";\n\nconst momentInterval = {\n  daily: \"days\",\n  weekly: \"weeks\",\n  monthly: \"months\",\n  yearly: \"years\",\n};\n\nconst timeLabelFormats = {\n  daily: \"MMMM D, YYYY\",\n  weekly: \"[Week of] MMM D, YYYY\",\n  monthly: \"MMMM YYYY\",\n  yearly: \"YYYY\",\n};\n\nconst defaultOptions = {\n  initialDate: null,\n  timeInterval: \"monthly\",\n  noValuePlaceholder: \"-\",\n  rawNumberOnHover: true,\n  displayAbsoluteValues: false,\n  initialIntervalNumber: 1,\n  maxColumns: Infinity,\n\n  title: null,\n  timeColumnTitle: \"Time\",\n  peopleColumnTitle: \"People\",\n  stageColumnTitle: \"{{ @ }}\",\n  numberFormat: \"0,0[.]00\",\n  percentFormat: \"0.00%\",\n  timeLabelFormat: timeLabelFormats.monthly,\n\n  colors: {\n    min: \"#ffffff\",\n    max: \"#041d66\",\n    steps: 7,\n  },\n};\n\nfunction prepareOptions(options: any) {\n  options = extend({}, defaultOptions, options, {\n    initialDate: moment(options.initialDate),\n    colors: extend({}, defaultOptions.colors, options.colors),\n  });\n\n  return extend(options, {\n    // @ts-expect-error ts-migrate(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\n    timeLabelFormat: timeLabelFormats[options.timeInterval],\n    formatNumber: createNumberFormatter(options.numberFormat),\n    formatPercent: createNumberFormatter(options.percentFormat),\n    getColorForValue: chroma\n      .scale([options.colors.min, options.colors.max])\n      .mode(\"hsl\")\n      .domain([0, 100])\n      .classes(options.colors.steps),\n  });\n}\n\nfunction isLightColor(backgroundColor: any) {\n  backgroundColor = chroma(backgroundColor);\n  const white = \"#ffffff\";\n  const black = \"#000000\";\n  return chroma.contrast(backgroundColor, white) < chroma.contrast(backgroundColor, black);\n}\n\nfunction formatStageTitle(options: any, index: any) {\n  return formatSimpleTemplate(options.stageColumnTitle, { \"@\": options.initialIntervalNumber - 1 + index });\n}\n\nfunction formatTimeLabel(options: any, offset: any) {\n  // @ts-expect-error ts-migrate(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\n  const interval = momentInterval[options.timeInterval];\n  return options.initialDate\n    .clone()\n    .add(offset, interval)\n    .format(options.timeLabelFormat);\n}\n\nfunction CorneliusHeader({ options, maxRowLength }: any) {\n  // eslint-disable-line react/prop-types\n  const cells = [];\n  for (let i = 1; i < maxRowLength; i += 1) {\n    cells.push(\n      <th key={`col${i}`} className=\"cornelius-stage\">\n        {formatStageTitle(options, i)}\n      </th>\n    );\n  }\n\n  return (\n    <tr>\n      <th className=\"cornelius-time\">{options.timeColumnTitle}</th>\n      <th className=\"cornelius-people\">{options.peopleColumnTitle}</th>\n      {cells}\n    </tr>\n  );\n}\n\nfunction CorneliusRow({ options, data, index, maxRowLength }: any) {\n  // eslint-disable-line react/prop-types\n  const baseValue = data[0] || 0;\n\n  const cells = [];\n  for (let i = 1; i < maxRowLength; i += 1) {\n    const value = data[i];\n    const percentageValue = isFinite(value / baseValue) ? (value / baseValue) * 100 : null;\n    const cellProps = { key: `col${i}` };\n\n    if (isNil(percentageValue)) {\n      // @ts-expect-error ts-migrate(2339) FIXME: Property 'className' does not exist on type '{ key... Remove this comment to see the full error message\n      cellProps.className = \"cornelius-empty\";\n      // @ts-expect-error ts-migrate(2339) FIXME: Property 'children' does not exist on type '{ key:... Remove this comment to see the full error message\n      cellProps.children = options.noValuePlaceholder;\n    } else {\n      // @ts-expect-error ts-migrate(2339) FIXME: Property 'className' does not exist on type '{ key... Remove this comment to see the full error message\n      cellProps.className = options.displayAbsoluteValues ? \"cornelius-absolute\" : \"cornelius-percentage\";\n      // @ts-expect-error ts-migrate(2339) FIXME: Property 'children' does not exist on type '{ key:... Remove this comment to see the full error message\n      cellProps.children = options.displayAbsoluteValues\n        ? options.formatNumber(value)\n        : options.formatPercent(percentageValue);\n\n      const backgroundColor = options.getColorForValue(percentageValue);\n      // @ts-expect-error ts-migrate(2339) FIXME: Property 'style' does not exist on type '{ key: st... Remove this comment to see the full error message\n      cellProps.style = {\n        backgroundColor,\n        color: chooseTextColorForBackground(backgroundColor),\n      };\n      // @ts-expect-error ts-migrate(2339) FIXME: Property 'style' does not exist on type '{ key: st... Remove this comment to see the full error message\n      if (isLightColor(cellProps.style.color)) {\n        // @ts-expect-error ts-migrate(2339) FIXME: Property 'className' does not exist on type '{ key... Remove this comment to see the full error message\n        cellProps.className += \" cornelius-white-text\";\n      }\n\n      if (options.rawNumberOnHover && !options.displayAbsoluteValues) {\n        // @ts-expect-error ts-migrate(2339) FIXME: Property 'children' does not exist on type '{ key:... Remove this comment to see the full error message\n        cellProps.children = (\n          <Tooltip title={options.formatNumber(value)} mouseEnterDelay={0} mouseLeaveDelay={0}>\n            {/* @ts-expect-error ts-migrate(2339) FIXME: Property 'children' does not exist on type '{ key:... Remove this comment to see the full error message */}\n            <div>{cellProps.children}</div>\n          </Tooltip>\n        );\n      }\n    }\n\n    cells.push(<td {...cellProps} />);\n  }\n\n  return (\n    <tr>\n      <td className=\"cornelius-label\">{formatTimeLabel(options, index)}</td>\n      <td className=\"cornelius-people\">{options.formatNumber(baseValue)}</td>\n      {cells}\n    </tr>\n  );\n}\n\ntype OwnCorneliusProps = {\n  data?: number[][];\n  options?: {\n    initialDate: any; // TODO: PropTypes.instanceOf(Date)\n    timeInterval?: \"daily\" | \"weekly\" | \"monthly\" | \"yearly\";\n    noValuePlaceholder?: string;\n    rawNumberOnHover?: boolean;\n    displayAbsoluteValues?: boolean;\n    initialIntervalNumber?: number;\n    maxColumns?: number;\n    title?: string;\n    timeColumnTitle?: string;\n    peopleColumnTitle?: string;\n    stageColumnTitle?: string;\n    numberFormat?: string;\n    percentFormat?: string;\n    timeLabelFormat?: string;\n    colors?: {\n      min?: string;\n      max?: string;\n      steps?: number;\n    };\n  };\n};\n\ntype CorneliusProps = OwnCorneliusProps & typeof Cornelius.defaultProps;\n\nexport default function Cornelius({ data, options }: CorneliusProps) {\n  options = useMemo(() => prepareOptions(options), [options]);\n\n  const maxRowLength = useMemo(\n    () =>\n      min([\n        // @ts-expect-error ts-migrate(2339) FIXME: Property 'length' does not exist on type 'number'.\n        max(map(data, d => d.length)) || 0,\n        // @ts-expect-error ts-migrate(2532) FIXME: Object is possibly 'undefined'.\n        options.maxColumns + 1, // each row includes totals, but `maxColumns` is only for stage columns\n      ]),\n    [data, options.maxColumns]\n  );\n\n  if (data.length === 0) {\n    return null;\n  }\n\n  return (\n    <div className=\"cornelius-container\">\n      {options.title && <div className=\"cornelius-title\">{options.title}</div>}\n\n      <table className=\"cornelius-table\">\n        <thead>\n          <CorneliusHeader options={options} maxRowLength={maxRowLength} />\n        </thead>\n        <tbody>\n          {map(data, (row, index) => (\n            <CorneliusRow key={`row${index}`} options={options} data={row} index={index} maxRowLength={maxRowLength} />\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nCornelius.defaultProps = {\n  data: [],\n  options: {},\n};\n"],"mappings":"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"}