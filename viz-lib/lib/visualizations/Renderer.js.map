{"version":3,"file":"Renderer.js","names":["isEqual","React","useEffect","useRef","ErrorBoundary","ErrorMessage","registeredVisualizations","Renderer","_ref","type","data","optionsProp","options","visualizationName","addonBefore","addonAfter","otherProps","_objectWithoutProperties","_excluded","lastOptions","errorHandlerRef","_registeredVisualizat","getOptions","current","reset","createElement","className","ref","renderError","_extends"],"sources":["../../src/visualizations/Renderer.tsx"],"sourcesContent":["import { isEqual } from \"lodash\";\nimport React, { useEffect, useRef } from \"react\";\nimport ErrorBoundary, { ErrorMessage } from \"@/components/ErrorBoundary\";\nimport { RendererPropTypes } from \"@/visualizations/prop-types\";\nimport registeredVisualizations from \"@/visualizations/registeredVisualizations\";\n\n/*\n(ts-migrate) TODO: Migrate the remaining prop types\n...RendererPropTypes\n*/\ntype Props = {\n  type: string;\n  addonBefore?: React.ReactNode;\n  addonAfter?: React.ReactNode;\n} & typeof RendererPropTypes;\n\nexport default function Renderer({\n  type,\n  data,\n  options: optionsProp,\n  visualizationName,\n  addonBefore,\n  addonAfter,\n  ...otherProps\n}: Props) {\n  const lastOptions = useRef();\n  const errorHandlerRef = useRef();\n\n  // @ts-expect-error ts-migrate(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\n  const { Renderer, getOptions } = registeredVisualizations[type];\n\n  // Avoid unnecessary updates (which may be expensive or cause issues with\n  // internal state of some visualizations like Table) - compare options deeply\n  // and use saved reference if nothing changed\n  // More details: https://github.com/getredash/redash/pull/3963#discussion_r306935810\n  let options = getOptions(optionsProp, data);\n  if (isEqual(lastOptions.current, options)) {\n    options = lastOptions.current;\n  }\n  lastOptions.current = options;\n\n  useEffect(() => {\n    if (errorHandlerRef.current) {\n      // @ts-expect-error ts-migrate(2532) FIXME: Object is possibly 'undefined'.\n      errorHandlerRef.current.reset();\n    }\n  }, [optionsProp, data]);\n\n  return (\n    <div className=\"visualization-renderer\">\n      {addonBefore}\n      {/* @ts-expect-error ts-migrate(2769) FIXME: No overload matches this call. */}\n      <ErrorBoundary\n        ref={errorHandlerRef}\n        renderError={() => <ErrorMessage>Error while rendering visualization.</ErrorMessage>}>\n        <div className=\"visualization-renderer-wrapper\">\n          <Renderer options={options} data={data} visualizationName={visualizationName} {...otherProps} />\n        </div>\n      </ErrorBoundary>\n      {addonAfter}\n    </div>\n  );\n}\n"],"mappings":";;;;AAAA,SAASA,OAAO,QAAQ,QAAQ;AAChC,OAAOC,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAOC,aAAa,IAAIC,YAAY;AAEpC,OAAOC,wBAAwB;;AAE/B;AACA;AACA;AACA;;AAOA,eAAe,SAASC,QAAQA,CAAAC,IAAA,EAQtB;EAAA,IAPRC,IAAI,GAAAD,IAAA,CAAJC,IAAI;IACJC,IAAI,GAAAF,IAAA,CAAJE,IAAI;IACKC,WAAW,GAAAH,IAAA,CAApBI,OAAO;IACPC,iBAAiB,GAAAL,IAAA,CAAjBK,iBAAiB;IACjBC,WAAW,GAAAN,IAAA,CAAXM,WAAW;IACXC,UAAU,GAAAP,IAAA,CAAVO,UAAU;IACPC,UAAU,GAAAC,wBAAA,CAAAT,IAAA,EAAAU,SAAA;EAEb,IAAMC,WAAW,GAAGhB,MAAM,CAAC,CAAC;EAC5B,IAAMiB,eAAe,GAAGjB,MAAM,CAAC,CAAC;;EAEhC;EACA,IAAAkB,qBAAA,GAAiCf,wBAAwB,CAACG,IAAI,CAAC;IAAvDF,QAAQ,GAAAc,qBAAA,CAARd,QAAQ;IAAEe,UAAU,GAAAD,qBAAA,CAAVC,UAAU;;EAE5B;EACA;EACA;EACA;EACA,IAAIV,OAAO,GAAGU,UAAU,CAACX,WAAW,EAAED,IAAI,CAAC;EAC3C,IAAIV,OAAO,CAACmB,WAAW,CAACI,OAAO,EAAEX,OAAO,CAAC,EAAE;IACzCA,OAAO,GAAGO,WAAW,CAACI,OAAO;EAC/B;EACAJ,WAAW,CAACI,OAAO,GAAGX,OAAO;EAE7BV,SAAS,CAAC,MAAM;IACd,IAAIkB,eAAe,CAACG,OAAO,EAAE;MAC3B;MACAH,eAAe,CAACG,OAAO,CAACC,KAAK,CAAC,CAAC;IACjC;EACF,CAAC,EAAE,CAACb,WAAW,EAAED,IAAI,CAAC,CAAC;EAEvB,oBACET,KAAA,CAAAwB,aAAA;IAAKC,SAAS,EAAC;EAAwB,GACpCZ,WAAW,eAEZb,KAAA,CAAAwB,aAAA,CAACrB,aAAa;IACZuB,GAAG,EAAEP,eAAgB;IACrBQ,WAAW,EAAEA,CAAA,kBAAM3B,KAAA,CAAAwB,aAAA,CAACpB,YAAY,QAAC,sCAAkD;EAAE,gBACrFJ,KAAA,CAAAwB,aAAA;IAAKC,SAAS,EAAC;EAAgC,gBAC7CzB,KAAA,CAAAwB,aAAA,CAAClB,QAAQ,EAAAsB,QAAA;IAACjB,OAAO,EAAEA,OAAQ;IAACF,IAAI,EAAEA,IAAK;IAACG,iBAAiB,EAAEA;EAAkB,GAAKG,UAAU,CAAG,CAC5F,CACQ,CAAC,EACfD,UACE,CAAC;AAEV"}