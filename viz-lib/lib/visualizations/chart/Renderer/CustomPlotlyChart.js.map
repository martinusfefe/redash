{"version":3,"file":"CustomPlotlyChart.js","names":["React","useState","useEffect","useMemo","RendererPropTypes","resizeObserver","getChartData","Plotly","prepareCustomChartData","createCustomChartRenderer","CustomPlotlyChart","_ref","options","data","_useState","_useState2","_slicedToArray","container","setContainer","renderCustomChart","customCode","enableConsoleLogs","plotlyData","rows","unwatch","purge","x","ys","createElement","className","ref","propTypes"],"sources":["../../../../src/visualizations/chart/Renderer/CustomPlotlyChart.tsx"],"sourcesContent":["import React, { useState, useEffect, useMemo } from \"react\";\nimport { RendererPropTypes } from \"@/visualizations/prop-types\";\n\nimport resizeObserver from \"@/services/resizeObserver\";\n\nimport getChartData from \"../getChartData\";\nimport { Plotly, prepareCustomChartData, createCustomChartRenderer } from \"../plotly\";\n\nexport default function CustomPlotlyChart({ options, data }: any) {\n  const [container, setContainer] = useState(null);\n\n  const renderCustomChart = useMemo(() => createCustomChartRenderer(options.customCode, options.enableConsoleLogs), [\n    options.customCode,\n    options.enableConsoleLogs,\n  ]);\n\n  const plotlyData = useMemo(() => prepareCustomChartData(getChartData(data.rows, options)), [options, data]);\n\n  useEffect(() => {\n    if (container) {\n      const unwatch = resizeObserver(container, () => {\n        // Clear existing data with blank data for succeeding codeCall adds data to existing plot.\n        // @ts-expect-error ts-migrate(2345) FIXME: Argument of type 'null' is not assignable to param... Remove this comment to see the full error message\n        Plotly.purge(container);\n        renderCustomChart(plotlyData.x, plotlyData.ys, container, Plotly);\n      });\n      return unwatch;\n    }\n  }, [container, plotlyData, renderCustomChart]);\n\n  // Cleanup when component destroyed\n  useEffect(() => {\n    if (container) {\n      // @ts-expect-error ts-migrate(2345) FIXME: Argument of type 'null' is not assignable to param... Remove this comment to see the full error message\n      return () => Plotly.purge(container);\n    }\n  }, [container]);\n\n  // @ts-expect-error ts-migrate(2322) FIXME: Type 'Dispatch<SetStateAction<null>>' is not assig... Remove this comment to see the full error message\n  return <div className=\"chart-visualization-container\" ref={setContainer} />;\n}\n\nCustomPlotlyChart.propTypes = RendererPropTypes;\n"],"mappings":";;;;;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,OAAO,QAAQ,OAAO;AAC3D,SAASC,iBAAiB;AAE1B,OAAOC,cAAc;AAErB,OAAOC,YAAY;AACnB,SAASC,MAAM,EAAEC,sBAAsB,EAAEC,yBAAyB;AAElE,eAAe,SAASC,iBAAiBA,CAAAC,IAAA,EAAyB;EAAA,IAAtBC,OAAO,GAAAD,IAAA,CAAPC,OAAO;IAAEC,IAAI,GAAAF,IAAA,CAAJE,IAAI;EACvD,IAAAC,SAAA,GAAkCb,QAAQ,CAAC,IAAI,CAAC;IAAAc,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAzCG,SAAS,GAAAF,UAAA;IAAEG,YAAY,GAAAH,UAAA;EAE9B,IAAMI,iBAAiB,GAAGhB,OAAO,CAAC,MAAMM,yBAAyB,CAACG,OAAO,CAACQ,UAAU,EAAER,OAAO,CAACS,iBAAiB,CAAC,EAAE,CAChHT,OAAO,CAACQ,UAAU,EAClBR,OAAO,CAACS,iBAAiB,CAC1B,CAAC;EAEF,IAAMC,UAAU,GAAGnB,OAAO,CAAC,MAAMK,sBAAsB,CAACF,YAAY,CAACO,IAAI,CAACU,IAAI,EAAEX,OAAO,CAAC,CAAC,EAAE,CAACA,OAAO,EAAEC,IAAI,CAAC,CAAC;EAE3GX,SAAS,CAAC,MAAM;IACd,IAAIe,SAAS,EAAE;MACb,IAAMO,OAAO,GAAGnB,cAAc,CAACY,SAAS,EAAE,MAAM;QAC9C;QACA;QACAV,MAAM,CAACkB,KAAK,CAACR,SAAS,CAAC;QACvBE,iBAAiB,CAACG,UAAU,CAACI,CAAC,EAAEJ,UAAU,CAACK,EAAE,EAAEV,SAAS,EAAEV,MAAM,CAAC;MACnE,CAAC,CAAC;MACF,OAAOiB,OAAO;IAChB;EACF,CAAC,EAAE,CAACP,SAAS,EAAEK,UAAU,EAAEH,iBAAiB,CAAC,CAAC;;EAE9C;EACAjB,SAAS,CAAC,MAAM;IACd,IAAIe,SAAS,EAAE;MACb;MACA,OAAO,MAAMV,MAAM,CAACkB,KAAK,CAACR,SAAS,CAAC;IACtC;EACF,CAAC,EAAE,CAACA,SAAS,CAAC,CAAC;;EAEf;EACA,oBAAOjB,KAAA,CAAA4B,aAAA;IAAKC,SAAS,EAAC,+BAA+B;IAACC,GAAG,EAAEZ;EAAa,CAAE,CAAC;AAC7E;AAEAR,iBAAiB,CAACqB,SAAS,GAAG3B,iBAAiB"}