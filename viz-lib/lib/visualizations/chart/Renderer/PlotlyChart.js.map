{"version":3,"file":"PlotlyChart.js","names":["_react","_interopRequireWildcard","require","_useMedia","_interopRequireDefault","_ErrorBoundary","_propTypes","_visualizationsSettings","_getChartData","_initChart","obj","__esModule","default","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_slicedToArray","arr","i","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","TypeError","o","minLen","_arrayLikeToArray","n","toString","slice","constructor","name","Array","from","test","len","length","arr2","_i","Symbol","iterator","_s","_e","_x","_r","_arr","_n","_d","next","done","push","value","err","return","isArray","PlotlyChart","_ref","options","data","_useState","useState","_useState2","container","setContainer","_useState3","_useState4","chart","setChart","errorHandler","useContext","ErrorBoundaryContext","errorHandlerRef","useRef","current","isMobile","useMedia","maxWidth","isMobileRef","useEffect","isDestroyed","chartData","getChartData","rows","_chart","initChart","visualizationsSettings","error","handleError","initialized","then","destroy","setZoomEnabled","createElement","className","ref","propTypes","RendererPropTypes"],"sources":["../../../../src/visualizations/chart/Renderer/PlotlyChart.tsx"],"sourcesContent":["import React, { useState, useEffect, useContext, useRef } from \"react\";\nimport useMedia from \"use-media\";\nimport { ErrorBoundaryContext } from \"@/components/ErrorBoundary\";\nimport { RendererPropTypes } from \"@/visualizations/prop-types\";\nimport { visualizationsSettings } from \"@/visualizations/visualizationsSettings\";\nimport getChartData from \"../getChartData\";\nimport initChart from \"./initChart\";\n\nexport interface PlotlyChartProps {\n  data: {\n    rows: any[];\n    columns: any[];\n  };\n  options: object;\n}\n\nexport default function PlotlyChart({ options, data }: PlotlyChartProps) {\n  const [container, setContainer] = useState(null);\n  const [chart, setChart] = useState(null);\n\n  const errorHandler = useContext(ErrorBoundaryContext);\n  const errorHandlerRef = useRef();\n  // @ts-expect-error ts-migrate(2322) FIXME: Type '{ handleError: (error: any) => void; reset: ... Remove this comment to see the full error message\n  errorHandlerRef.current = errorHandler;\n\n  const isMobile = useMedia({ maxWidth: 768 });\n  const isMobileRef = useRef();\n  // @ts-expect-error ts-migrate(2322) FIXME: Type 'boolean' is not assignable to type 'undefine... Remove this comment to see the full error message\n  isMobileRef.current = isMobile;\n\n  useEffect(() => {\n    if (container) {\n      let isDestroyed = false;\n\n      const chartData = getChartData(data.rows, options);\n      const _chart = initChart(container, options, chartData, visualizationsSettings, (error: any) => {\n        // @ts-expect-error ts-migrate(2532) FIXME: Object is possibly 'undefined'.\n        errorHandlerRef.current.handleError(error);\n      });\n      _chart.initialized.then(() => {\n        if (!isDestroyed) {\n          setChart(_chart);\n        }\n      });\n      return () => {\n        isDestroyed = true;\n        _chart.destroy();\n      };\n    }\n  }, [options, data, container]);\n\n  useEffect(() => {\n    if (chart) {\n      // @ts-expect-error ts-migrate(2531) FIXME: Object is possibly 'null'.\n      chart.setZoomEnabled(!isMobile);\n    }\n  }, [chart, isMobile]);\n\n  // @ts-expect-error ts-migrate(2322) FIXME: Type 'Dispatch<SetStateAction<null>>' is not assig... Remove this comment to see the full error message\n  return <div className=\"chart-visualization-container\" ref={setContainer} />;\n}\n\nPlotlyChart.propTypes = RendererPropTypes;\n"],"mappings":"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"}