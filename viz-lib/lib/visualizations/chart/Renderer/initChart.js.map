{"version":3,"file":"initChart.js","names":["isArray","isObject","isString","isFunction","startsWith","reduce","merge","map","each","isNil","resizeObserver","Plotly","prepareData","prepareLayout","updateData","updateAxes","updateChartSize","formatSimpleTemplate","navigateToUrl","url","shouldOpenNewTab","arguments","length","undefined","window","open","location","href","createErrorHandler","errorHandler","error","initPlotUpdater","actions","updater","append","action","push","process","plotlyElement","updates","handlers","relayout","then","handler","Promise","resolve","initChart","container","options","data","additionalOptions","onError","handleError","plotlyOptions","showLink","displaylogo","hidePlotlyModeBar","displayModeBar","plotlyData","plotlyLayout","isDestroyed","createSafeFunction","fn","unwatchResize","promise","newPlot","on","visible","onHover","onUnHover","enableLink","templateValues","points","forEach","point","i","_$row","_ref","_point$data","_point$pointNumber","sourceDataElement","sourceData","entries","pointNumber","row","x","y","concat","linkFormat","replace","linkOpenNewTab","console","message","catch","result","initialized","setZoomEnabled","allowZoom","layoutUpdates","dragmode","destroy","removeAllListeners","__previousSize","purge"],"sources":["../../../../src/visualizations/chart/Renderer/initChart.ts"],"sourcesContent":["import { isArray, isObject, isString, isFunction, startsWith, reduce, merge, map, each, isNil } from \"lodash\";\nimport resizeObserver from \"@/services/resizeObserver\";\nimport { Plotly, prepareData, prepareLayout, updateData, updateAxes, updateChartSize } from \"../plotly\";\nimport { formatSimpleTemplate } from \"@/lib/value-format\";\n\nconst navigateToUrl = (url: string, shouldOpenNewTab: boolean = true) =>\n  shouldOpenNewTab\n    ? window.open(url, \"_blank\")\n    : window.location.href = url;\n\nfunction createErrorHandler(errorHandler: any) {\n  return (error: any) => {\n    // This error happens only when chart width is 20px and looks that\n    // it's safe to just ignore it: 1px less or more and chart will get fixed.\n    if (isString(error) && startsWith(error, \"ax.dtick error\")) {\n      return;\n    }\n    errorHandler(error);\n  };\n}\n\n// This utility is intended to reduce amount of plot updates when multiple Plotly.relayout\n// calls needed in order to compute/update the plot.\n// `.append()` method takes an array of two element: first one is a object with updates for layout,\n// and second is an optional function that will be called when plot is updated. That function may\n// return an array with same structure if further updates needed.\n// `.process()` merges all updates into a single object and calls `Plotly.relayout()`. After that\n// it calls all callbacks, collects their return values and does another loop if needed.\nfunction initPlotUpdater() {\n  let actions: any = [];\n\n  const updater = {\n    append(action: any) {\n      if (isArray(action) && isObject(action[0])) {\n        actions.push(action);\n      }\n      return updater;\n    },\n    // @ts-expect-error ts-migrate(7023) FIXME: 'process' implicitly has return type 'any' because... Remove this comment to see the full error message\n    process(plotlyElement: any) {\n      if (actions.length > 0) {\n        const updates = reduce(actions, (updates, action) => merge(updates, action[0]), {});\n        const handlers = map(actions, action => (isFunction(action[1]) ? action[1] : () => null));\n        actions = [];\n        return Plotly.relayout(plotlyElement, updates).then(() => {\n          each(handlers, handler => updater.append(handler()));\n          return updater.process(plotlyElement);\n        });\n      } else {\n        return Promise.resolve();\n      }\n    },\n  };\n\n  return updater;\n}\n\nexport default function initChart(container: any, options: any, data: any, additionalOptions: any, onError: any) {\n  const handleError = createErrorHandler(onError);\n\n  const plotlyOptions = {\n    showLink: false,\n    displaylogo: false,\n  };\n\n  if (additionalOptions.hidePlotlyModeBar) {\n    // @ts-expect-error ts-migrate(2339) FIXME: Property 'displayModeBar' does not exist on type '... Remove this comment to see the full error message\n    plotlyOptions.displayModeBar = false;\n  }\n\n  const plotlyData = prepareData(data, options);\n  const plotlyLayout = prepareLayout(container, options, plotlyData);\n\n  let isDestroyed = false;\n\n  let updater = initPlotUpdater();\n\n  function createSafeFunction(fn: any) {\n    // @ts-expect-error ts-migrate(7019) FIXME: Rest parameter 'args' implicitly has an 'any[]' ty... Remove this comment to see the full error message\n    return (...args) => {\n      if (!isDestroyed) {\n        try {\n          return fn(...args);\n        } catch (error) {\n          handleError(error);\n        }\n      }\n    };\n  }\n\n  let unwatchResize = () => {};\n\n  const promise = Promise.resolve()\n    .then(() => Plotly.newPlot(container, plotlyData, plotlyLayout, plotlyOptions))\n    .then(\n      createSafeFunction(() =>\n        updater\n          .append(updateAxes(container, plotlyData, plotlyLayout, options))\n          .append(updateChartSize(container, plotlyLayout, options))\n          .process(container)\n      )\n    )\n    .then(\n      createSafeFunction(() => {\n        container.on(\n          \"plotly_restyle\",\n          createSafeFunction((updates: any) => {\n            // This event is triggered if some plotly data/layout has changed.\n            // We need to catch only changes of traces visibility to update stacking\n            // @ts-expect-error ts-migrate(2339) FIXME: Property 'visible' does not exist on type 'object'... Remove this comment to see the full error message\n            if (isArray(updates) && isObject(updates[0]) && updates[0].visible) {\n              updateData(plotlyData, options);\n              updater.append(updateAxes(container, plotlyData, plotlyLayout, options)).process(container);\n            }\n          })\n        );\n        options.onHover && container.on(\"plotly_hover\", options.onHover);\n        options.onUnHover && container.on(\"plotly_unhover\", options.onUnHover);\n        container.on('plotly_click',\n          createSafeFunction((data: any) => {\n            if (options.enableLink === true) {\n              try {\n                var templateValues: { [k: string]: any } = {}\n                data.points.forEach((point: any, i: number) => {\n                  var sourceDataElement = [...point.data?.sourceData?.entries()][point.pointNumber ?? 0]?.[1]?.row ?? {};\n\n                  if (isNil(templateValues['@@x'])) templateValues['@@x'] = sourceDataElement.x;\n                  if (isNil(templateValues['@@y'])) templateValues['@@y'] = sourceDataElement.y;\n\n                  templateValues[`@@y${i + 1}`] = sourceDataElement.y;\n                  templateValues[`@@x${i + 1}`] = sourceDataElement.x;\n                })\n                navigateToUrl(\n                  formatSimpleTemplate(options.linkFormat, templateValues).replace(/{{\\s*([^\\s]+?)\\s*}}/g, () => ''),\n                  options.linkOpenNewTab);\n              } catch (error) {\n                console.error('Click error: [%s]', error.message, { error });\n              }\n            }\n          }));\n\n        unwatchResize = resizeObserver(\n          container,\n          createSafeFunction(() => {\n            updater.append(updateChartSize(container, plotlyLayout, options)).process(container);\n          })\n        );\n      })\n    )\n    .catch(handleError);\n\n  // @ts-expect-error ts-migrate(7022) FIXME: 'result' implicitly has type 'any' because it does... Remove this comment to see the full error message\n  const result = {\n    initialized: promise.then(() => result),\n    setZoomEnabled: createSafeFunction((allowZoom: any) => {\n      const layoutUpdates = { dragmode: allowZoom ? \"zoom\" : false };\n      // @ts-expect-error ts-migrate(2345) FIXME: Argument of type '{ dragmode: string | boolean; }'... Remove this comment to see the full error message\n      return Plotly.relayout(container, layoutUpdates);\n    }),\n    destroy: createSafeFunction(() => {\n      isDestroyed = true;\n      container.removeAllListeners(\"plotly_restyle\");\n      unwatchResize();\n      delete container.__previousSize; // added by `updateChartSize`\n      Plotly.purge(container);\n    }),\n  };\n\n  return result;\n}\n"],"mappings":"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"}