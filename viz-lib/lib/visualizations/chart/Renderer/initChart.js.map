{"version":3,"file":"initChart.js","names":["_lodash","require","_resizeObserver","_interopRequireDefault","_plotly","_valueFormat","obj","__esModule","default","navigateToUrl","url","shouldOpenNewTab","arguments","length","undefined","window","open","location","href","createErrorHandler","errorHandler","error","isString","startsWith","initPlotUpdater","actions","updater","append","action","isArray","isObject","push","process","plotlyElement","updates","reduce","merge","handlers","map","isFunction","Plotly","relayout","then","each","handler","Promise","resolve","initChart","container","options","data","additionalOptions","onError","handleError","plotlyOptions","showLink","displaylogo","hidePlotlyModeBar","displayModeBar","plotlyData","prepareData","plotlyLayout","prepareLayout","isDestroyed","createSafeFunction","fn","unwatchResize","promise","newPlot","updateAxes","updateChartSize","on","visible","updateData","onHover","onUnHover","enableLink","templateValues","points","forEach","point","i","_$row","_ref","_point$data","_point$pointNumber","sourceDataElement","sourceData","entries","pointNumber","row","isNil","x","y","concat","formatSimpleTemplate","linkFormat","replace","linkOpenNewTab","console","message","resizeObserver","catch","result","initialized","setZoomEnabled","allowZoom","layoutUpdates","dragmode","destroy","removeAllListeners","__previousSize","purge"],"sources":["../../../../src/visualizations/chart/Renderer/initChart.ts"],"sourcesContent":["import { isArray, isObject, isString, isFunction, startsWith, reduce, merge, map, each, isNil } from \"lodash\";\nimport resizeObserver from \"@/services/resizeObserver\";\nimport { Plotly, prepareData, prepareLayout, updateData, updateAxes, updateChartSize } from \"../plotly\";\nimport { formatSimpleTemplate } from \"@/lib/value-format\";\n\nconst navigateToUrl = (url: string, shouldOpenNewTab: boolean = true) =>\n  shouldOpenNewTab\n    ? window.open(url, \"_blank\")\n    : window.location.href = url;\n\nfunction createErrorHandler(errorHandler: any) {\n  return (error: any) => {\n    // This error happens only when chart width is 20px and looks that\n    // it's safe to just ignore it: 1px less or more and chart will get fixed.\n    if (isString(error) && startsWith(error, \"ax.dtick error\")) {\n      return;\n    }\n    errorHandler(error);\n  };\n}\n\n// This utility is intended to reduce amount of plot updates when multiple Plotly.relayout\n// calls needed in order to compute/update the plot.\n// `.append()` method takes an array of two element: first one is a object with updates for layout,\n// and second is an optional function that will be called when plot is updated. That function may\n// return an array with same structure if further updates needed.\n// `.process()` merges all updates into a single object and calls `Plotly.relayout()`. After that\n// it calls all callbacks, collects their return values and does another loop if needed.\nfunction initPlotUpdater() {\n  let actions: any = [];\n\n  const updater = {\n    append(action: any) {\n      if (isArray(action) && isObject(action[0])) {\n        actions.push(action);\n      }\n      return updater;\n    },\n    // @ts-expect-error ts-migrate(7023) FIXME: 'process' implicitly has return type 'any' because... Remove this comment to see the full error message\n    process(plotlyElement: any) {\n      if (actions.length > 0) {\n        const updates = reduce(actions, (updates, action) => merge(updates, action[0]), {});\n        const handlers = map(actions, action => (isFunction(action[1]) ? action[1] : () => null));\n        actions = [];\n        return Plotly.relayout(plotlyElement, updates).then(() => {\n          each(handlers, handler => updater.append(handler()));\n          return updater.process(plotlyElement);\n        });\n      } else {\n        return Promise.resolve();\n      }\n    },\n  };\n\n  return updater;\n}\n\nexport default function initChart(container: any, options: any, data: any, additionalOptions: any, onError: any) {\n  const handleError = createErrorHandler(onError);\n\n  const plotlyOptions = {\n    showLink: false,\n    displaylogo: false,\n  };\n\n  if (additionalOptions.hidePlotlyModeBar) {\n    // @ts-expect-error ts-migrate(2339) FIXME: Property 'displayModeBar' does not exist on type '... Remove this comment to see the full error message\n    plotlyOptions.displayModeBar = false;\n  }\n\n  const plotlyData = prepareData(data, options);\n  const plotlyLayout = prepareLayout(container, options, plotlyData);\n\n  let isDestroyed = false;\n\n  let updater = initPlotUpdater();\n\n  function createSafeFunction(fn: any) {\n    // @ts-expect-error ts-migrate(7019) FIXME: Rest parameter 'args' implicitly has an 'any[]' ty... Remove this comment to see the full error message\n    return (...args) => {\n      if (!isDestroyed) {\n        try {\n          return fn(...args);\n        } catch (error) {\n          handleError(error);\n        }\n      }\n    };\n  }\n\n  let unwatchResize = () => {};\n\n  const promise = Promise.resolve()\n    .then(() => Plotly.newPlot(container, plotlyData, plotlyLayout, plotlyOptions))\n    .then(\n      createSafeFunction(() =>\n        updater\n          .append(updateAxes(container, plotlyData, plotlyLayout, options))\n          .append(updateChartSize(container, plotlyLayout, options))\n          .process(container)\n      )\n    )\n    .then(\n      createSafeFunction(() => {\n        container.on(\n          \"plotly_restyle\",\n          createSafeFunction((updates: any) => {\n            // This event is triggered if some plotly data/layout has changed.\n            // We need to catch only changes of traces visibility to update stacking\n            // @ts-expect-error ts-migrate(2339) FIXME: Property 'visible' does not exist on type 'object'... Remove this comment to see the full error message\n            if (isArray(updates) && isObject(updates[0]) && updates[0].visible) {\n              updateData(plotlyData, options);\n              updater.append(updateAxes(container, plotlyData, plotlyLayout, options)).process(container);\n            }\n          })\n        );\n        options.onHover && container.on(\"plotly_hover\", options.onHover);\n        options.onUnHover && container.on(\"plotly_unhover\", options.onUnHover);\n        container.on('plotly_click',\n          createSafeFunction((data: any) => {\n            if (options.enableLink === true) {\n              try {\n                var templateValues: { [k: string]: any } = {}\n                data.points.forEach((point: any, i: number) => {\n                  var sourceDataElement = [...point.data?.sourceData?.entries()][point.pointNumber ?? 0]?.[1]?.row ?? {};\n\n                  if (isNil(templateValues['@@x'])) templateValues['@@x'] = sourceDataElement.x;\n                  if (isNil(templateValues['@@y'])) templateValues['@@y'] = sourceDataElement.y;\n\n                  templateValues[`@@y${i + 1}`] = sourceDataElement.y;\n                  templateValues[`@@x${i + 1}`] = sourceDataElement.x;\n                })\n                navigateToUrl(\n                  formatSimpleTemplate(options.linkFormat, templateValues).replace(/{{\\s*([^\\s]+?)\\s*}}/g, () => ''),\n                  options.linkOpenNewTab);\n              } catch (error) {\n                console.error('Click error: [%s]', error.message, { error });\n              }\n            }\n          }));\n\n        unwatchResize = resizeObserver(\n          container,\n          createSafeFunction(() => {\n            updater.append(updateChartSize(container, plotlyLayout, options)).process(container);\n          })\n        );\n      })\n    )\n    .catch(handleError);\n\n  // @ts-expect-error ts-migrate(7022) FIXME: 'result' implicitly has type 'any' because it does... Remove this comment to see the full error message\n  const result = {\n    initialized: promise.then(() => result),\n    setZoomEnabled: createSafeFunction((allowZoom: any) => {\n      const layoutUpdates = { dragmode: allowZoom ? \"zoom\" : false };\n      // @ts-expect-error ts-migrate(2345) FIXME: Argument of type '{ dragmode: string | boolean; }'... Remove this comment to see the full error message\n      return Plotly.relayout(container, layoutUpdates);\n    }),\n    destroy: createSafeFunction(() => {\n      isDestroyed = true;\n      container.removeAllListeners(\"plotly_restyle\");\n      unwatchResize();\n      delete container.__previousSize; // added by `updateChartSize`\n      Plotly.purge(container);\n    }),\n  };\n\n  return result;\n}\n"],"mappings":"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"}