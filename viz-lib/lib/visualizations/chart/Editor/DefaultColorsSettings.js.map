{"version":3,"file":"DefaultColorsSettings.js","names":["map","React","useMemo","useCallback","Table","ColorPicker","EditorPropTypes","AllColorPalettes","getChartData","Section","Select","DefaultColorsSettings","_ref","options","data","onOptionsChange","colors","_objectSpread","Automatic","color_scheme","series","rows","_ref2","name","key","color","seriesOptions","updateSeriesOption","prop","value","columns","title","dataIndex","width","render","unused","item","createElement","concat","interactive","presetColors","placement","onChange","addonAfter","Label","Fragment","label","defaultValue","val","Object","keys","option","Option","showHeader","dataSource","pagination","propTypes"],"sources":["../../../../src/visualizations/chart/Editor/DefaultColorsSettings.tsx"],"sourcesContent":["import { map } from \"lodash\";\nimport React, { useMemo, useCallback } from \"react\";\nimport Table from \"antd/lib/table\";\nimport ColorPicker from \"@/components/ColorPicker\";\nimport { EditorPropTypes } from \"@/visualizations/prop-types\";\nimport { AllColorPalettes } from \"@/visualizations/ColorPalette\";\nimport getChartData from \"../getChartData\";\nimport { Section, Select } from \"@/components/visualizations/editor\";\n\nexport default function DefaultColorsSettings({ options, data, onOptionsChange }: any) {\n  const colors = useMemo(\n    () => ({\n      Automatic: null,\n      // @ts-expect-error ts-migrate(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\n      ...AllColorPalettes[options.color_scheme],\n    }),\n    [options.color_scheme]\n  );\n\n  const series = useMemo(\n    () =>\n      map(getChartData(data.rows, options), ({ name }) => ({\n        key: name,\n        color: (options.seriesOptions[name] || {}).color || null,\n      })),\n    [options, data]\n  );\n\n  const updateSeriesOption = useCallback(\n    (key, prop, value) => {\n      onOptionsChange({\n        seriesOptions: {\n          [key]: {\n            [prop]: value,\n          },\n        },\n      });\n    },\n    [onOptionsChange]\n  );\n\n  const columns = [\n    {\n      title: \"Series\",\n      dataIndex: \"key\",\n    },\n    {\n      title: \"Color\",\n      dataIndex: \"color\",\n      width: \"1%\",\n      render: (unused: any, item: any) => (\n        <ColorPicker\n          // @ts-expect-error ts-migrate(2322) FIXME: Type 'string' is not assignable to type 'never'.\n          data-test={`Chart.Series.${item.key}.Color`}\n          // @ts-expect-error ts-migrate(2322) FIXME: Type 'boolean' is not assignable to type 'never'.\n          interactive\n          // @ts-expect-error ts-migrate(2322) FIXME: Type '{ \"Indian Red\": string; \"Green 2\": string; \"... Remove this comment to see the full error message\n          presetColors={colors}\n          // @ts-expect-error ts-migrate(2322) FIXME: Type 'string' is not assignable to type 'never'.\n          placement=\"topRight\"\n          // @ts-expect-error ts-migrate(2322) FIXME: Type 'any' is not assignable to type 'never'.\n          color={item.color}\n          // @ts-expect-error ts-migrate(2322) FIXME: Type '(value: any) => void' is not assignable to t... Remove this comment to see the full error message\n          onChange={(value: any) => updateSeriesOption(item.key, \"color\", value)}\n          // @ts-expect-error ts-migrate(2322) FIXME: Type 'Element' is not assignable to type 'never'.\n          addonAfter={<ColorPicker.Label color={item.color} presetColors={colors} />}\n        />\n      ),\n    },\n  ];\n\n  return (\n    <React.Fragment>\n      {/* @ts-expect-error ts-migrate(2745) FIXME: This JSX tag's 'children' prop expects type 'never... Remove this comment to see the full error message */}\n      <Section>\n          <Select\n            label=\"Color Scheme\"\n            defaultValue={options.color_scheme}\n            data-test=\"ColorScheme\"\n            onChange={(val : any) => onOptionsChange({ color_scheme: val })}>\n            {Object.keys(AllColorPalettes).map(option => (\n             // @ts-expect-error ts-migrate(2339) FIXME: Property 'Option' does not exist on type '({ class... Remove this comment to see the full error message\n              <Select.Option data-test={`ColorOption${option}`} key={option} value={option}>{option}</Select.Option>\n            ))}\n          </Select>\n        </Section>\n      {/* @ts-expect-error ts-migrate(2322) FIXME: Type 'boolean[]' is not assignable to type 'object... Remove this comment to see the full error message */}\n      <Table showHeader={false} dataSource={series} columns={columns} pagination={false} />\n    </React.Fragment>\n  )\n}\n\nDefaultColorsSettings.propTypes = EditorPropTypes;\n"],"mappings":"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"}