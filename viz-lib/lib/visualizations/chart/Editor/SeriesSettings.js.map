{"version":3,"file":"SeriesSettings.js","names":["includes","map","extend","fromPairs","React","useMemo","useCallback","useDebouncedCallback","Table","Input","Radio","sortableElement","SortableContainer","DragHandle","EditorPropTypes","ChartTypeSelect","getChartData","SortableBodyRow","props","createElement","getTableColumns","options","updateSeriesOption","debouncedUpdateSeriesOption","result","title","dataIndex","render","unused","item","className","zIndex","concat","key","placeholder","defaultValue","name","onChange","event","target","value","globalSeriesType","swappedAxes","push","Group","yAxis","dropdownMatchSelectWidth","type","hiddenChartTypes","SeriesSettings","_ref","data","onOptionsChange","series","rows","_ref2","seriesOptions","handleSortEnd","_ref3","oldIndex","newIndex","splice","_ref4","prop","_useDebouncedCallback","_useDebouncedCallback2","_slicedToArray","columns","axis","lockAxis","lockToContainerEdges","useDragHandle","helperClass","helperContainer","container","querySelector","onSortEnd","containerProps","dataSource","components","body","row","onRow","index","pagination","propTypes"],"sources":["../../../../src/visualizations/chart/Editor/SeriesSettings.tsx"],"sourcesContent":["import { includes, map, extend, fromPairs } from \"lodash\";\nimport React, { useMemo, useCallback } from \"react\";\nimport { useDebouncedCallback } from \"use-debounce\";\nimport Table from \"antd/lib/table\";\nimport Input from \"antd/lib/input\";\nimport Radio from \"antd/lib/radio\";\n// @ts-expect-error ts-migrate(2724) FIXME: Module '\"../../../../node_modules/react-sortable-h... Remove this comment to see the full error message\nimport { sortableElement } from \"react-sortable-hoc\";\nimport { SortableContainer, DragHandle } from \"@/components/sortable\";\nimport { EditorPropTypes } from \"@/visualizations/prop-types\";\nimport ChartTypeSelect from \"./ChartTypeSelect\";\nimport getChartData from \"../getChartData\";\n\nconst SortableBodyRow = sortableElement((props: any) => <tr {...props} />);\n\nfunction getTableColumns(options: any, updateSeriesOption: any, debouncedUpdateSeriesOption: any) {\n  const result = [\n    {\n      title: \"Order\",\n      dataIndex: \"zIndex\",\n      render: (unused: any, item: any) => (\n        <span className=\"series-settings-order\">\n          <DragHandle />\n          {item.zIndex + 1}\n        </span>\n      ),\n    },\n    {\n      title: \"Label\",\n      dataIndex: \"name\",\n      render: (unused: any, item: any) => (\n        <Input\n          data-test={`Chart.Series.${item.key}.Label`}\n          placeholder={item.key}\n          defaultValue={item.name}\n          onChange={event => debouncedUpdateSeriesOption(item.key, \"name\", event.target.value)}\n        />\n      ),\n    },\n  ];\n\n  if (!includes([\"pie\", \"heatmap\"], options.globalSeriesType)) {\n    if (!options.swappedAxes) {\n      result.push({\n        title: \"Y Axis\",\n        dataIndex: \"yAxis\",\n        render: (unused, item) => (\n          <Radio.Group\n            className=\"series-settings-y-axis\"\n            value={item.yAxis === 1 ? 1 : 0}\n            onChange={event => updateSeriesOption(item.key, \"yAxis\", event.target.value)}>\n            <Radio value={0} data-test={`Chart.Series.${item.key}.UseLeftAxis`}>\n              left\n            </Radio>\n            <Radio value={1} data-test={`Chart.Series.${item.key}.UseRightAxis`}>\n              right\n            </Radio>\n          </Radio.Group>\n        ),\n      });\n    }\n\n    result.push({\n      title: \"Type\",\n      dataIndex: \"type\",\n      render: (unused, item) => (\n        <ChartTypeSelect\n          data-test={`Chart.Series.${item.key}.Type`}\n          dropdownMatchSelectWidth={false}\n          value={item.type}\n          // @ts-expect-error ts-migrate(2322) FIXME: Type 'string' is not assignable to type 'never'.\n          hiddenChartTypes={[\"pie\", \"heatmap\", \"bubble\", \"box\"]}\n          onChange={(value: any) => updateSeriesOption(item.key, \"type\", value)}\n        />\n      ),\n    });\n  }\n\n  return result;\n}\n\nexport default function SeriesSettings({ options, data, onOptionsChange }: any) {\n  const series = useMemo(\n    () =>\n      map(\n        getChartData(data.rows, options), // returns sorted series\n        ({ name }, zIndex) =>\n          extend({ key: name, type: options.globalSeriesType }, options.seriesOptions[name], { zIndex })\n      ),\n    [options, data]\n  );\n\n  const handleSortEnd = useCallback(\n    ({ oldIndex, newIndex }) => {\n      const seriesOptions = [...series];\n      seriesOptions.splice(newIndex, 0, ...seriesOptions.splice(oldIndex, 1));\n      // @ts-expect-error ts-migrate(2339) FIXME: Property 'key' does not exist on type 'Boolean'.\n      onOptionsChange({ seriesOptions: fromPairs(map(seriesOptions, ({ key }, zIndex) => [key, { zIndex }])) });\n    },\n    [onOptionsChange, series]\n  );\n\n  const updateSeriesOption = useCallback(\n    (key, prop, value) => {\n      onOptionsChange({\n        seriesOptions: {\n          [key]: {\n            [prop]: value,\n          },\n        },\n      });\n    },\n    [onOptionsChange]\n  );\n  const [debouncedUpdateSeriesOption] = useDebouncedCallback(updateSeriesOption, 200);\n\n  const columns = useMemo(() => getTableColumns(options, updateSeriesOption, debouncedUpdateSeriesOption), [\n    options,\n    updateSeriesOption,\n    debouncedUpdateSeriesOption,\n  ]);\n\n  return (\n    <SortableContainer\n      axis=\"y\"\n      lockAxis=\"y\"\n      lockToContainerEdges\n      useDragHandle\n      helperClass=\"chart-editor-series-dragged-item\"\n      helperContainer={(container: any) => container.querySelector(\"tbody\")}\n      onSortEnd={handleSortEnd}\n      containerProps={{\n        className: \"chart-editor-series\",\n      }}>\n      {/* @ts-expect-error ts-migrate(2322) FIXME: Type 'Element' is not assignable to type 'null | u... Remove this comment to see the full error message */}\n      <Table\n        // @ts-expect-error ts-migrate(2322) FIXME: Type 'boolean[]' is not assignable to type 'object... Remove this comment to see the full error message\n        dataSource={series}\n        columns={columns}\n        components={{\n          body: {\n            row: SortableBodyRow,\n          },\n        }}\n        // @ts-expect-error ts-migrate(2322) FIXME: Type '(item: object) => { index: any; }' is not as... Remove this comment to see the full error message\n        onRow={item => ({ index: item.zIndex })}\n        pagination={false}\n      />\n    </SortableContainer>\n  );\n}\n\nSeriesSettings.propTypes = EditorPropTypes;\n"],"mappings":"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"}