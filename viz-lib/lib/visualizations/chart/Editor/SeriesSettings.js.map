{"version":3,"file":"SeriesSettings.js","names":["_lodash","require","_react","_interopRequireWildcard","_useDebounce","_table","_interopRequireDefault","_input","_radio","_reactSortableHoc","_sortable","_propTypes","_ChartTypeSelect","_getChartData","obj","__esModule","default","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_slicedToArray","arr","i","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","TypeError","o","minLen","_arrayLikeToArray","n","toString","slice","constructor","name","Array","from","test","len","length","arr2","_i","Symbol","iterator","_s","_e","_x","_r","_arr","_n","_d","next","done","push","value","err","return","isArray","SortableBodyRow","sortableElement","props","createElement","getTableColumns","options","updateSeriesOption","debouncedUpdateSeriesOption","result","title","dataIndex","render","unused","item","className","DragHandle","zIndex","concat","placeholder","defaultValue","onChange","event","target","includes","globalSeriesType","swappedAxes","Group","yAxis","dropdownMatchSelectWidth","type","hiddenChartTypes","SeriesSettings","_ref","data","onOptionsChange","series","useMemo","map","getChartData","rows","_ref2","extend","seriesOptions","handleSortEnd","useCallback","_ref3","oldIndex","newIndex","splice","fromPairs","_ref4","prop","_useDebouncedCallback","useDebouncedCallback","_useDebouncedCallback2","columns","SortableContainer","axis","lockAxis","lockToContainerEdges","useDragHandle","helperClass","helperContainer","container","querySelector","onSortEnd","containerProps","dataSource","components","body","row","onRow","index","pagination","propTypes","EditorPropTypes"],"sources":["../../../../src/visualizations/chart/Editor/SeriesSettings.tsx"],"sourcesContent":["import { includes, map, extend, fromPairs } from \"lodash\";\nimport React, { useMemo, useCallback } from \"react\";\nimport { useDebouncedCallback } from \"use-debounce\";\nimport Table from \"antd/lib/table\";\nimport Input from \"antd/lib/input\";\nimport Radio from \"antd/lib/radio\";\n// @ts-expect-error ts-migrate(2724) FIXME: Module '\"../../../../node_modules/react-sortable-h... Remove this comment to see the full error message\nimport { sortableElement } from \"react-sortable-hoc\";\nimport { SortableContainer, DragHandle } from \"@/components/sortable\";\nimport { EditorPropTypes } from \"@/visualizations/prop-types\";\nimport ChartTypeSelect from \"./ChartTypeSelect\";\nimport getChartData from \"../getChartData\";\n\nconst SortableBodyRow = sortableElement((props: any) => <tr {...props} />);\n\nfunction getTableColumns(options: any, updateSeriesOption: any, debouncedUpdateSeriesOption: any) {\n  const result = [\n    {\n      title: \"Order\",\n      dataIndex: \"zIndex\",\n      render: (unused: any, item: any) => (\n        <span className=\"series-settings-order\">\n          <DragHandle />\n          {item.zIndex + 1}\n        </span>\n      ),\n    },\n    {\n      title: \"Label\",\n      dataIndex: \"name\",\n      render: (unused: any, item: any) => (\n        <Input\n          data-test={`Chart.Series.${item.key}.Label`}\n          placeholder={item.key}\n          defaultValue={item.name}\n          onChange={event => debouncedUpdateSeriesOption(item.key, \"name\", event.target.value)}\n        />\n      ),\n    },\n  ];\n\n  if (!includes([\"pie\", \"heatmap\"], options.globalSeriesType)) {\n    if (!options.swappedAxes) {\n      result.push({\n        title: \"Y Axis\",\n        dataIndex: \"yAxis\",\n        render: (unused, item) => (\n          <Radio.Group\n            className=\"series-settings-y-axis\"\n            value={item.yAxis === 1 ? 1 : 0}\n            onChange={event => updateSeriesOption(item.key, \"yAxis\", event.target.value)}>\n            <Radio value={0} data-test={`Chart.Series.${item.key}.UseLeftAxis`}>\n              left\n            </Radio>\n            <Radio value={1} data-test={`Chart.Series.${item.key}.UseRightAxis`}>\n              right\n            </Radio>\n          </Radio.Group>\n        ),\n      });\n    }\n\n    result.push({\n      title: \"Type\",\n      dataIndex: \"type\",\n      render: (unused, item) => (\n        <ChartTypeSelect\n          data-test={`Chart.Series.${item.key}.Type`}\n          dropdownMatchSelectWidth={false}\n          value={item.type}\n          // @ts-expect-error ts-migrate(2322) FIXME: Type 'string' is not assignable to type 'never'.\n          hiddenChartTypes={[\"pie\", \"heatmap\", \"bubble\", \"box\"]}\n          onChange={(value: any) => updateSeriesOption(item.key, \"type\", value)}\n        />\n      ),\n    });\n  }\n\n  return result;\n}\n\nexport default function SeriesSettings({ options, data, onOptionsChange }: any) {\n  const series = useMemo(\n    () =>\n      map(\n        getChartData(data.rows, options), // returns sorted series\n        ({ name }, zIndex) =>\n          extend({ key: name, type: options.globalSeriesType }, options.seriesOptions[name], { zIndex })\n      ),\n    [options, data]\n  );\n\n  const handleSortEnd = useCallback(\n    ({ oldIndex, newIndex }) => {\n      const seriesOptions = [...series];\n      seriesOptions.splice(newIndex, 0, ...seriesOptions.splice(oldIndex, 1));\n      // @ts-expect-error ts-migrate(2339) FIXME: Property 'key' does not exist on type 'Boolean'.\n      onOptionsChange({ seriesOptions: fromPairs(map(seriesOptions, ({ key }, zIndex) => [key, { zIndex }])) });\n    },\n    [onOptionsChange, series]\n  );\n\n  const updateSeriesOption = useCallback(\n    (key, prop, value) => {\n      onOptionsChange({\n        seriesOptions: {\n          [key]: {\n            [prop]: value,\n          },\n        },\n      });\n    },\n    [onOptionsChange]\n  );\n  const [debouncedUpdateSeriesOption] = useDebouncedCallback(updateSeriesOption, 200);\n\n  const columns = useMemo(() => getTableColumns(options, updateSeriesOption, debouncedUpdateSeriesOption), [\n    options,\n    updateSeriesOption,\n    debouncedUpdateSeriesOption,\n  ]);\n\n  return (\n    <SortableContainer\n      axis=\"y\"\n      lockAxis=\"y\"\n      lockToContainerEdges\n      useDragHandle\n      helperClass=\"chart-editor-series-dragged-item\"\n      helperContainer={(container: any) => container.querySelector(\"tbody\")}\n      onSortEnd={handleSortEnd}\n      containerProps={{\n        className: \"chart-editor-series\",\n      }}>\n      {/* @ts-expect-error ts-migrate(2322) FIXME: Type 'Element' is not assignable to type 'null | u... Remove this comment to see the full error message */}\n      <Table\n        // @ts-expect-error ts-migrate(2322) FIXME: Type 'boolean[]' is not assignable to type 'object... Remove this comment to see the full error message\n        dataSource={series}\n        columns={columns}\n        components={{\n          body: {\n            row: SortableBodyRow,\n          },\n        }}\n        // @ts-expect-error ts-migrate(2322) FIXME: Type '(item: object) => { index: any; }' is not as... Remove this comment to see the full error message\n        onRow={item => ({ index: item.zIndex })}\n        pagination={false}\n      />\n    </SortableContainer>\n  );\n}\n\nSeriesSettings.propTypes = EditorPropTypes;\n"],"mappings":"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"}