{"version":3,"file":"ColorsSettings.test.js","names":["after","React","enzyme","getOptions","ColorsSettings","findByTestID","wrapper","testId","find","concat","mount","options","done","createElement","visualizationName","data","columns","name","type","rows","a","b","onOptionsChange","changedOptions","expect","toMatchSnapshot","describe","test","el","globalSeriesType","columnMapping","last","simulate","target","value","colorScheme"],"sources":["../../../../src/visualizations/chart/Editor/ColorsSettings.test.tsx"],"sourcesContent":["import { after } from \"lodash\";\nimport React from \"react\";\nimport enzyme from \"enzyme\";\n\nimport getOptions from \"../getOptions\";\nimport ColorsSettings from \"./ColorsSettings\";\n\nfunction findByTestID(wrapper: any, testId: any) {\n  return wrapper.find(`[data-test=\"${testId}\"]`);\n}\n\nfunction mount(options: any, done: any) {\n  options = getOptions(options);\n  return enzyme.mount(\n    <ColorsSettings\n      visualizationName=\"Test\"\n      data={{\n        columns: [\n          { name: \"a\", type: \"string\" },\n          { name: \"b\", type: \"number\" },\n        ],\n        rows: [{ a: \"v\", b: 3.14 }],\n      }}\n      options={options}\n      onOptionsChange={(changedOptions: any) => {\n        expect(changedOptions).toMatchSnapshot();\n        done();\n      }}\n    />\n  );\n}\n\ndescribe(\"Visualizations -> Chart -> Editor -> Colors Settings\", () => {\n  describe(\"for pie\", () => {\n    test(\"Changes series color\", done => {\n      const el = mount(\n        {\n          globalSeriesType: \"pie\",\n          columnMapping: { a: \"x\", b: \"y\" },\n        },\n        done\n      );\n\n      findByTestID(el, \"Chart.Series.v.Color\")\n        .find(\".color-picker-trigger\")\n        .last()\n        .simulate(\"click\");\n      findByTestID(el, \"ColorPicker\")\n        .last()\n        .find(\"input\")\n        .simulate(\"change\", { target: { value: \"red\" } });\n    });\n  });\n\n  describe(\"for heatmap\", () => {\n    test(\"Changes color scheme\", done => {\n      const el = mount(\n        {\n          globalSeriesType: \"heatmap\",\n          columnMapping: { a: \"x\", b: \"y\" },\n        },\n        done\n      );\n\n      findByTestID(el, \"Chart.Colors.Heatmap.ColorScheme\")\n        .last()\n        .simulate(\"mouseDown\");\n      findByTestID(el, \"Chart.Colors.Heatmap.ColorScheme.Blues\")\n        .last()\n        .simulate(\"click\");\n    });\n\n    test(\"Sets custom color scheme\", done => {\n      const el = mount(\n        {\n          globalSeriesType: \"heatmap\",\n          columnMapping: { a: \"x\", b: \"y\" },\n          colorScheme: \"Custom...\",\n        },\n        after(2, done)\n      ); // we will perform 2 actions, so call `done` after all of them completed\n\n      findByTestID(el, \"Chart.Colors.Heatmap.MinColor\")\n        .find(\".color-picker-trigger\")\n        .last()\n        .simulate(\"click\");\n      findByTestID(el, \"ColorPicker\")\n        .last()\n        .find(\"input\")\n        .simulate(\"change\", { target: { value: \"yellow\" } });\n\n      findByTestID(el, \"Chart.Colors.Heatmap.MaxColor\")\n        .find(\".color-picker-trigger\")\n        .last()\n        .simulate(\"click\");\n      findByTestID(el, \"ColorPicker\")\n        .last()\n        .find(\"input\")\n        .simulate(\"change\", { target: { value: \"red\" } });\n    });\n  });\n\n  describe(\"for all except of pie and heatmap\", () => {\n    test(\"Changes series color\", done => {\n      const el = mount(\n        {\n          globalSeriesType: \"column\",\n          columnMapping: { a: \"x\", b: \"y\" },\n        },\n        done\n      );\n\n      findByTestID(el, \"Chart.Series.b.Color\")\n        .find(\".color-picker-trigger\")\n        .last()\n        .simulate(\"click\");\n\n      findByTestID(el, \"ColorPicker\")\n        .last()\n        .find(\"input\")\n        .simulate(\"change\", { target: { value: \"red\" } });\n    });\n  });\n});\n"],"mappings":"AAAA,SAASA,KAAK,QAAQ,QAAQ;AAC9B,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,QAAQ;AAE3B,OAAOC,UAAU;AACjB,OAAOC,cAAc;AAErB,SAASC,YAAYA,CAACC,OAAY,EAAEC,MAAW,EAAE;EAC/C,OAAOD,OAAO,CAACE,IAAI,iBAAAC,MAAA,CAAgBF,MAAM,QAAI,CAAC;AAChD;AAEA,SAASG,KAAKA,CAACC,OAAY,EAAEC,IAAS,EAAE;EACtCD,OAAO,GAAGR,UAAU,CAACQ,OAAO,CAAC;EAC7B,OAAOT,MAAM,CAACQ,KAAK,eACjBT,KAAA,CAAAY,aAAA,CAACT,cAAc;IACbU,iBAAiB,EAAC,MAAM;IACxBC,IAAI,EAAE;MACJC,OAAO,EAAE,CACP;QAAEC,IAAI,EAAE,GAAG;QAAEC,IAAI,EAAE;MAAS,CAAC,EAC7B;QAAED,IAAI,EAAE,GAAG;QAAEC,IAAI,EAAE;MAAS,CAAC,CAC9B;MACDC,IAAI,EAAE,CAAC;QAAEC,CAAC,EAAE,GAAG;QAAEC,CAAC,EAAE;MAAK,CAAC;IAC5B,CAAE;IACFV,OAAO,EAAEA,OAAQ;IACjBW,eAAe,EAAGC,cAAmB,IAAK;MACxCC,MAAM,CAACD,cAAc,CAAC,CAACE,eAAe,CAAC,CAAC;MACxCb,IAAI,CAAC,CAAC;IACR;EAAE,CACH,CACH,CAAC;AACH;AAEAc,QAAQ,CAAC,sDAAsD,EAAE,MAAM;EACrEA,QAAQ,CAAC,SAAS,EAAE,MAAM;IACxBC,IAAI,CAAC,sBAAsB,EAAEf,IAAI,IAAI;MACnC,IAAMgB,EAAE,GAAGlB,KAAK,CACd;QACEmB,gBAAgB,EAAE,KAAK;QACvBC,aAAa,EAAE;UAAEV,CAAC,EAAE,GAAG;UAAEC,CAAC,EAAE;QAAI;MAClC,CAAC,EACDT,IACF,CAAC;MAEDP,YAAY,CAACuB,EAAE,EAAE,sBAAsB,CAAC,CACrCpB,IAAI,CAAC,uBAAuB,CAAC,CAC7BuB,IAAI,CAAC,CAAC,CACNC,QAAQ,CAAC,OAAO,CAAC;MACpB3B,YAAY,CAACuB,EAAE,EAAE,aAAa,CAAC,CAC5BG,IAAI,CAAC,CAAC,CACNvB,IAAI,CAAC,OAAO,CAAC,CACbwB,QAAQ,CAAC,QAAQ,EAAE;QAAEC,MAAM,EAAE;UAAEC,KAAK,EAAE;QAAM;MAAE,CAAC,CAAC;IACrD,CAAC,CAAC;EACJ,CAAC,CAAC;EAEFR,QAAQ,CAAC,aAAa,EAAE,MAAM;IAC5BC,IAAI,CAAC,sBAAsB,EAAEf,IAAI,IAAI;MACnC,IAAMgB,EAAE,GAAGlB,KAAK,CACd;QACEmB,gBAAgB,EAAE,SAAS;QAC3BC,aAAa,EAAE;UAAEV,CAAC,EAAE,GAAG;UAAEC,CAAC,EAAE;QAAI;MAClC,CAAC,EACDT,IACF,CAAC;MAEDP,YAAY,CAACuB,EAAE,EAAE,kCAAkC,CAAC,CACjDG,IAAI,CAAC,CAAC,CACNC,QAAQ,CAAC,WAAW,CAAC;MACxB3B,YAAY,CAACuB,EAAE,EAAE,wCAAwC,CAAC,CACvDG,IAAI,CAAC,CAAC,CACNC,QAAQ,CAAC,OAAO,CAAC;IACtB,CAAC,CAAC;IAEFL,IAAI,CAAC,0BAA0B,EAAEf,IAAI,IAAI;MACvC,IAAMgB,EAAE,GAAGlB,KAAK,CACd;QACEmB,gBAAgB,EAAE,SAAS;QAC3BC,aAAa,EAAE;UAAEV,CAAC,EAAE,GAAG;UAAEC,CAAC,EAAE;QAAI,CAAC;QACjCc,WAAW,EAAE;MACf,CAAC,EACDnC,KAAK,CAAC,CAAC,EAAEY,IAAI,CACf,CAAC,CAAC,CAAC;;MAEHP,YAAY,CAACuB,EAAE,EAAE,+BAA+B,CAAC,CAC9CpB,IAAI,CAAC,uBAAuB,CAAC,CAC7BuB,IAAI,CAAC,CAAC,CACNC,QAAQ,CAAC,OAAO,CAAC;MACpB3B,YAAY,CAACuB,EAAE,EAAE,aAAa,CAAC,CAC5BG,IAAI,CAAC,CAAC,CACNvB,IAAI,CAAC,OAAO,CAAC,CACbwB,QAAQ,CAAC,QAAQ,EAAE;QAAEC,MAAM,EAAE;UAAEC,KAAK,EAAE;QAAS;MAAE,CAAC,CAAC;MAEtD7B,YAAY,CAACuB,EAAE,EAAE,+BAA+B,CAAC,CAC9CpB,IAAI,CAAC,uBAAuB,CAAC,CAC7BuB,IAAI,CAAC,CAAC,CACNC,QAAQ,CAAC,OAAO,CAAC;MACpB3B,YAAY,CAACuB,EAAE,EAAE,aAAa,CAAC,CAC5BG,IAAI,CAAC,CAAC,CACNvB,IAAI,CAAC,OAAO,CAAC,CACbwB,QAAQ,CAAC,QAAQ,EAAE;QAAEC,MAAM,EAAE;UAAEC,KAAK,EAAE;QAAM;MAAE,CAAC,CAAC;IACrD,CAAC,CAAC;EACJ,CAAC,CAAC;EAEFR,QAAQ,CAAC,mCAAmC,EAAE,MAAM;IAClDC,IAAI,CAAC,sBAAsB,EAAEf,IAAI,IAAI;MACnC,IAAMgB,EAAE,GAAGlB,KAAK,CACd;QACEmB,gBAAgB,EAAE,QAAQ;QAC1BC,aAAa,EAAE;UAAEV,CAAC,EAAE,GAAG;UAAEC,CAAC,EAAE;QAAI;MAClC,CAAC,EACDT,IACF,CAAC;MAEDP,YAAY,CAACuB,EAAE,EAAE,sBAAsB,CAAC,CACrCpB,IAAI,CAAC,uBAAuB,CAAC,CAC7BuB,IAAI,CAAC,CAAC,CACNC,QAAQ,CAAC,OAAO,CAAC;MAEpB3B,YAAY,CAACuB,EAAE,EAAE,aAAa,CAAC,CAC5BG,IAAI,CAAC,CAAC,CACNvB,IAAI,CAAC,OAAO,CAAC,CACbwB,QAAQ,CAAC,QAAQ,EAAE;QAAEC,MAAM,EAAE;UAAEC,KAAK,EAAE;QAAM;MAAE,CAAC,CAAC;IACrD,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ,CAAC,CAAC"}