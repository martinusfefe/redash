{"version":3,"file":"SeriesSettings.test.js","names":["React","enzyme","getOptions","SeriesSettings","findByTestID","wrapper","testId","find","concat","mount","options","done","createElement","visualizationName","data","columns","name","type","rows","a","onOptionsChange","changedOptions","expect","toMatchSnapshot","describe","test","el","globalSeriesType","columnMapping","seriesOptions","label","yAxis","last","simulate","target","value","checked"],"sources":["../../../../src/visualizations/chart/Editor/SeriesSettings.test.tsx"],"sourcesContent":["import React from \"react\";\nimport enzyme from \"enzyme\";\n\nimport getOptions from \"../getOptions\";\nimport SeriesSettings from \"./SeriesSettings\";\n\nfunction findByTestID(wrapper: any, testId: any) {\n  return wrapper.find(`[data-test=\"${testId}\"]`);\n}\n\nfunction mount(options: any, done: any) {\n  options = getOptions(options);\n  return enzyme.mount(\n    <SeriesSettings\n      visualizationName=\"Test\"\n      data={{ columns: [{ name: \"a\", type: \"string\" }], rows: [{ a: \"test\" }] }}\n      options={options}\n      onOptionsChange={changedOptions => {\n        expect(changedOptions).toMatchSnapshot();\n        done();\n      }}\n    />\n  );\n}\n\ndescribe(\"Visualizations -> Chart -> Editor -> Series Settings\", () => {\n  test(\"Changes series type\", done => {\n    const el = mount(\n      {\n        globalSeriesType: \"column\",\n        columnMapping: { a: \"y\" },\n        seriesOptions: {\n          a: { type: \"column\", label: \"a\", yAxis: 0 },\n        },\n      },\n      done\n    );\n\n    findByTestID(el, \"Chart.Series.a.Type\")\n      .last()\n      .simulate(\"mouseDown\");\n    findByTestID(el, \"Chart.ChartType.area\")\n      .last()\n      .simulate(\"click\");\n  });\n\n  test(\"Changes series label\", done => {\n    const el = mount(\n      {\n        globalSeriesType: \"column\",\n        columnMapping: { a: \"y\" },\n        seriesOptions: {\n          a: { type: \"column\", label: \"a\", yAxis: 0 },\n        },\n      },\n      done\n    );\n\n    findByTestID(el, \"Chart.Series.a.Label\")\n      .last()\n      .simulate(\"change\", { target: { value: \"test\" } });\n  });\n\n  test(\"Changes series axis\", done => {\n    const el = mount(\n      {\n        globalSeriesType: \"column\",\n        columnMapping: { a: \"y\" },\n        seriesOptions: {\n          a: { type: \"column\", name: \"a\", yAxis: 0 },\n        },\n      },\n      done\n    );\n\n    findByTestID(el, \"Chart.Series.a.UseRightAxis\")\n      .last()\n      .find(\"input\")\n      .simulate(\"change\", { target: { checked: true } });\n  });\n});\n"],"mappings":"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"}