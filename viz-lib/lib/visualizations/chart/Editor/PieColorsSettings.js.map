{"version":3,"file":"PieColorsSettings.js","names":["each","map","React","useMemo","useCallback","Table","ColorPicker","EditorPropTypes","AllColorPalettes","getChartData","Section","Select","getUniqueValues","chartData","uniqueValuesNames","Set","series","data","row","add","x","PieColorsSettings","_ref","options","onOptionsChange","colors","_objectSpread","Automatic","color_scheme","rows","value","key","color","valuesOptions","updateValuesOption","prop","columns","title","dataIndex","width","render","unused","item","createElement","concat","interactive","presetColors","placement","onChange","addonAfter","Label","Fragment","label","defaultValue","val","Object","keys","option","Option","showHeader","dataSource","pagination","propTypes"],"sources":["../../../../src/visualizations/chart/Editor/PieColorsSettings.tsx"],"sourcesContent":["import { each, map } from \"lodash\";\nimport React, { useMemo, useCallback } from \"react\";\nimport Table from \"antd/lib/table\";\nimport ColorPicker from \"@/components/ColorPicker\";\nimport { EditorPropTypes } from \"@/visualizations/prop-types\";\nimport { AllColorPalettes } from \"@/visualizations/ColorPalette\";\nimport getChartData from \"../getChartData\";\nimport { Section, Select } from \"@/components/visualizations/editor\";\n\nfunction getUniqueValues(chartData: any) {\n  const uniqueValuesNames = new Set();\n  each(chartData, series => {\n    each(series.data, row => {\n      uniqueValuesNames.add(row.x);\n    });\n  });\n  return [...uniqueValuesNames];\n}\n\nexport default function PieColorsSettings({ options, data, onOptionsChange }: any) {\n  const colors = useMemo(\n    () => ({\n      Automatic: null,\n      // @ts-expect-error ts-migrate(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\n      ...AllColorPalettes[options.color_scheme],\n    }),\n    [options.color_scheme]\n  );\n\n  const series = useMemo(\n    () =>\n      map(getUniqueValues(getChartData(data.rows, options)), value => ({\n        key: value,\n        // @ts-expect-error ts-migrate(2538) FIXME: Type 'unknown' cannot be used as an index type.\n        color: (options.valuesOptions[value] || {}).color || null,\n      })),\n    [options, data]\n  );\n\n  const updateValuesOption = useCallback(\n    (key, prop, value) => {\n      onOptionsChange({\n        valuesOptions: {\n          [key]: {\n            [prop]: value,\n          },\n        },\n      });\n    },\n    [onOptionsChange]\n  );\n\n  const columns = [\n    {\n      title: \"Values\",\n      dataIndex: \"key\",\n    },\n    {\n      title: \"Color\",\n      dataIndex: \"color\",\n      width: \"1%\",\n      render: (unused: any, item: any) => (\n        <ColorPicker\n          // @ts-expect-error ts-migrate(2322) FIXME: Type 'string' is not assignable to type 'never'.\n          data-test={`Chart.Series.${item.key}.Color`}\n          // @ts-expect-error ts-migrate(2322) FIXME: Type 'boolean' is not assignable to type 'never'.\n          interactive\n          // @ts-expect-error ts-migrate(2322) FIXME: Type '{ \"Indian Red\": string; \"Green 2\": string; \"... Remove this comment to see the full error message\n          presetColors={colors}\n          // @ts-expect-error ts-migrate(2322) FIXME: Type 'string' is not assignable to type 'never'.\n          placement=\"topRight\"\n          // @ts-expect-error ts-migrate(2322) FIXME: Type 'any' is not assignable to type 'never'.\n          color={item.color}\n          // @ts-expect-error ts-migrate(2322) FIXME: Type '(value: any) => void' is not assignable to t... Remove this comment to see the full error message\n          onChange={(value: any) => updateValuesOption(item.key, \"color\", value)}\n          // @ts-expect-error ts-migrate(2322) FIXME: Type 'Element' is not assignable to type 'never'.\n          addonAfter={<ColorPicker.Label color={item.color} presetColors={colors} />}\n        />\n      ),\n    },\n  ];\n\n  return (\n    <React.Fragment>\n      {/* @ts-expect-error ts-migrate(2745) FIXME: This JSX tag's 'children' prop expects type 'never... Remove this comment to see the full error message */}\n      <Section>\n          <Select\n            label=\"Color Scheme\"\n            defaultValue={options.color_scheme}\n            data-test=\"ColorScheme\"\n            onChange={(val : any) => onOptionsChange({ color_scheme: val })}>\n            {Object.keys(AllColorPalettes).map(option => (\n             // @ts-expect-error ts-migrate(2339) FIXME: Property 'Option' does not exist on type '({ class... Remove this comment to see the full error message\n              <Select.Option data-test={`ColorOption${option}`} key={option} value={option}>{option}</Select.Option>\n            ))}\n          </Select>\n        </Section>\n      <Table showHeader={false} dataSource={series} columns={columns} pagination={false} />\n    </React.Fragment>\n  )\n}\n\nPieColorsSettings.propTypes = EditorPropTypes;\n"],"mappings":"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"}