{"version":3,"file":"GeneralSettings.test.js","names":["_react","_interopRequireDefault","require","_enzyme","_getOptions","_GeneralSettings","obj","__esModule","default","findByTestID","wrapper","testId","find","concat","elementExists","length","mount","options","done","getOptions","enzyme","createElement","visualizationName","data","columns","rows","onOptionsChange","changedOptions","expect","toMatchSnapshot","describe","test","el","globalSeriesType","showDataLabels","seriesOptions","a","type","b","last","simulate","direction","legend","enabled","showpoints","target","checked","series","missingValuesAsZero","c","toBeTruthy"],"sources":["../../../../src/visualizations/chart/Editor/GeneralSettings.test.tsx"],"sourcesContent":["import React from \"react\";\nimport enzyme from \"enzyme\";\n\nimport getOptions from \"../getOptions\";\nimport GeneralSettings from \"./GeneralSettings\";\n\nfunction findByTestID(wrapper: any, testId: any) {\n  return wrapper.find(`[data-test=\"${testId}\"]`);\n}\n\nfunction elementExists(wrapper: any, testId: any) {\n  return findByTestID(wrapper, testId).length > 0;\n}\n\nfunction mount(options: any, done: any) {\n  options = getOptions(options);\n  return enzyme.mount(\n    <GeneralSettings\n      visualizationName=\"Test\"\n      data={{ columns: [], rows: [] }}\n      options={options}\n      onOptionsChange={changedOptions => {\n        expect(changedOptions).toMatchSnapshot();\n        done();\n      }}\n    />\n  );\n}\n\ndescribe(\"Visualizations -> Chart -> Editor -> General Settings\", () => {\n  test(\"Changes global series type\", done => {\n    const el = mount(\n      {\n        globalSeriesType: \"column\",\n        showDataLabels: false,\n        seriesOptions: {\n          a: { type: \"column\" },\n          b: { type: \"line\" },\n        },\n      },\n      done\n    );\n\n    findByTestID(el, \"Chart.GlobalSeriesType\")\n      .last()\n      .simulate(\"mouseDown\");\n    findByTestID(el, \"Chart.ChartType.pie\")\n      .last()\n      .simulate(\"click\");\n  });\n\n  test(\"Pie: changes direction\", done => {\n    const el = mount(\n      {\n        globalSeriesType: \"pie\",\n        direction: { type: \"counterclockwise\" },\n      },\n      done\n    );\n\n    findByTestID(el, \"Chart.PieDirection\")\n      .last()\n      .simulate(\"mouseDown\");\n    findByTestID(el, \"Chart.PieDirection.Clockwise\")\n      .last()\n      .simulate(\"click\");\n  });\n\n  test(\"Toggles legend\", done => {\n    const el = mount(\n      {\n        globalSeriesType: \"column\",\n        legend: { enabled: true },\n      },\n      done\n    );\n\n    findByTestID(el, \"Chart.LegendPlacement\")\n      .last()\n      .simulate(\"mouseDown\");\n    findByTestID(el, \"Chart.LegendPlacement.HideLegend\")\n      .last()\n      .simulate(\"click\");\n  });\n\n  test(\"Box: toggles show points\", done => {\n    const el = mount(\n      {\n        globalSeriesType: \"box\",\n        showpoints: false,\n      },\n      done\n    );\n\n    findByTestID(el, \"Chart.ShowPoints\")\n      .last()\n      .find(\"input\")\n      .simulate(\"change\", { target: { checked: true } });\n  });\n\n  test(\"Enables stacking\", done => {\n    const el = mount(\n      {\n        globalSeriesType: \"column\",\n        series: {},\n      },\n      done\n    );\n\n    findByTestID(el, \"Chart.Stacking\")\n      .last()\n      .simulate(\"mouseDown\");\n    findByTestID(el, \"Chart.Stacking.Stack\")\n      .last()\n      .simulate(\"click\");\n  });\n\n  test(\"Toggles normalize values to percentage\", done => {\n    const el = mount(\n      {\n        globalSeriesType: \"column\",\n        series: {},\n      },\n      done\n    );\n\n    findByTestID(el, \"Chart.NormalizeValues\")\n      .last()\n      .find(\"input\")\n      .simulate(\"change\", { target: { checked: true } });\n  });\n\n  test(\"Keep missing/null values\", done => {\n    const el = mount(\n      {\n        globalSeriesType: \"column\",\n        missingValuesAsZero: true,\n      },\n      done\n    );\n\n    findByTestID(el, \"Chart.MissingValues\")\n      .last()\n      .simulate(\"mouseDown\");\n    findByTestID(el, \"Chart.MissingValues.Keep\")\n      .last()\n      .simulate(\"click\");\n  });\n\n  describe(\"Column mappings should be available\", () => {\n    test(\"for bubble\", () => {\n      // @ts-expect-error ts-migrate(2554) FIXME: Expected 2 arguments, but got 1.\n      const el = mount({\n        globalSeriesType: \"column\",\n        seriesOptions: {\n          a: { type: \"column\" },\n          b: { type: \"bubble\" },\n          c: { type: \"heatmap\" },\n        },\n      });\n\n      expect(elementExists(el, \"Chart.ColumnMapping.x\")).toBeTruthy();\n      expect(elementExists(el, \"Chart.ColumnMapping.y\")).toBeTruthy();\n      expect(elementExists(el, \"Chart.ColumnMapping.size\")).toBeTruthy();\n    });\n\n    test(\"for heatmap\", () => {\n      // @ts-expect-error ts-migrate(2554) FIXME: Expected 2 arguments, but got 1.\n      const el = mount({\n        globalSeriesType: \"heatmap\",\n        seriesOptions: {\n          a: { type: \"column\" },\n          b: { type: \"bubble\" },\n          c: { type: \"heatmap\" },\n        },\n      });\n\n      expect(elementExists(el, \"Chart.ColumnMapping.x\")).toBeTruthy();\n      expect(elementExists(el, \"Chart.ColumnMapping.y\")).toBeTruthy();\n      expect(elementExists(el, \"Chart.ColumnMapping.zVal\")).toBeTruthy();\n    });\n\n    test(\"for all types except of bubble, heatmap and custom\", () => {\n      // @ts-expect-error ts-migrate(2554) FIXME: Expected 2 arguments, but got 1.\n      const el = mount({\n        globalSeriesType: \"column\",\n        seriesOptions: {\n          a: { type: \"column\" },\n          b: { type: \"bubble\" },\n          c: { type: \"heatmap\" },\n        },\n      });\n\n      expect(elementExists(el, \"Chart.ColumnMapping.x\")).toBeTruthy();\n      expect(elementExists(el, \"Chart.ColumnMapping.y\")).toBeTruthy();\n      expect(elementExists(el, \"Chart.ColumnMapping.series\")).toBeTruthy();\n      expect(elementExists(el, \"Chart.ColumnMapping.yError\")).toBeTruthy();\n    });\n  });\n\n  test(\"Toggles horizontal bar chart\", done => {\n    const el = mount(\n      {\n        globalSeriesType: \"column\",\n        series: {},\n      },\n      done\n    );\n\n    findByTestID(el, \"Chart.SwappedAxes\")\n      .last()\n      .find(\"input\")\n      .simulate(\"change\", { target: { checked: true } });\n  });\n\n  test(\"Toggles Enable click events\", done => {\n    const el = mount(\n      {\n        globalSeriesType: \"column\",\n        series: {},\n      },\n      done\n    );\n\n    findByTestID(el, \"Chart.EnableClickEvents\")\n      .last()\n      .find(\"input\")\n      .simulate(\"change\", { target: { checked: true } });\n  });\n\n  \n});\n"],"mappings":"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"}