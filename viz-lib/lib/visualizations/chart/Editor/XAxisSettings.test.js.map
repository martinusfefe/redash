{"version":3,"file":"XAxisSettings.test.js","names":["_react","_interopRequireDefault","require","_enzyme","_getOptions","_XAxisSettings","obj","__esModule","default","findByTestID","wrapper","testId","find","concat","mount","options","done","getOptions","enzyme","createElement","visualizationName","data","columns","rows","onOptionsChange","changedOptions","expect","toMatchSnapshot","describe","test","el","globalSeriesType","xAxis","type","labels","enabled","last","simulate","target","value","sortX","reverseX"],"sources":["../../../../src/visualizations/chart/Editor/XAxisSettings.test.tsx"],"sourcesContent":["import React from \"react\";\nimport enzyme from \"enzyme\";\n\nimport getOptions from \"../getOptions\";\nimport XAxisSettings from \"./XAxisSettings\";\n\nfunction findByTestID(wrapper: any, testId: any) {\n  return wrapper.find(`[data-test=\"${testId}\"]`);\n}\n\nfunction mount(options: any, done: any) {\n  options = getOptions(options);\n  return enzyme.mount(\n    <XAxisSettings\n      visualizationName=\"Test\"\n      data={{ columns: [], rows: [] }}\n      options={options}\n      onOptionsChange={changedOptions => {\n        expect(changedOptions).toMatchSnapshot();\n        done();\n      }}\n    />\n  );\n}\n\ndescribe(\"Visualizations -> Chart -> Editor -> X-Axis Settings\", () => {\n  test(\"Changes axis type\", done => {\n    const el = mount(\n      {\n        globalSeriesType: \"column\",\n        xAxis: { type: \"-\", labels: { enabled: true } },\n      },\n      done\n    );\n\n    findByTestID(el, \"Chart.XAxis.Type\")\n      .last()\n      .simulate(\"mouseDown\");\n    findByTestID(el, \"Chart.XAxis.Type.Linear\")\n      .last()\n      .simulate(\"click\");\n  });\n\n  test(\"Changes axis name\", done => {\n    const el = mount(\n      {\n        globalSeriesType: \"column\",\n        xAxis: { type: \"-\", labels: { enabled: true } },\n      },\n      done\n    );\n\n    findByTestID(el, \"Chart.XAxis.Name\")\n      .last()\n      .simulate(\"change\", { target: { value: \"test\" } });\n  });\n\n  test(\"Changes axis tick format\", done => {\n    const el = mount(\n      {\n        globalSeriesType: \"column\",\n        xAxis: { },\n      },\n      done\n    );\n\n    findByTestID(el, \"Chart.XAxis.TickFormat\")\n      .last()\n      .simulate(\"change\", { target: { value: \"%B\" } });\n  });\n\n  test(\"Sets Show Labels option\", done => {\n    const el = mount(\n      {\n        globalSeriesType: \"column\",\n        xAxis: { type: \"-\", labels: { enabled: false } },\n      },\n      done\n    );\n\n    findByTestID(el, \"Chart.XAxis.ShowLabels\")\n      .last()\n      .simulate(\"click\");\n  });\n\n  test(\"Sets Sort X Values option\", done => {\n    const el = mount(\n      {\n        globalSeriesType: \"column\",\n        sortX: false,\n      },\n      done\n    );\n\n    findByTestID(el, \"Chart.XAxis.Sort\")\n      .last()\n      .simulate(\"click\");\n  });\n\n  test(\"Sets Reverse X Values option\", done => {\n    const el = mount(\n      {\n        globalSeriesType: \"column\",\n        reverseX: false,\n      },\n      done\n    );\n\n    findByTestID(el, \"Chart.XAxis.Reverse\")\n      .last()\n      .simulate(\"click\");\n  });\n});\n"],"mappings":";;AAAA,IAAAA,MAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,OAAA,GAAAF,sBAAA,CAAAC,OAAA;AAEA,IAAAE,WAAA,GAAAH,sBAAA,CAAAC,OAAA;AACA,IAAAG,cAAA,GAAAJ,sBAAA,CAAAC,OAAA;AAA4C,SAAAD,uBAAAK,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,KAAAE,OAAA,EAAAF,GAAA;AAE5C,SAASG,YAAYA,CAACC,OAAY,EAAEC,MAAW,EAAE;EAC/C,OAAOD,OAAO,CAACE,IAAI,iBAAAC,MAAA,CAAgBF,MAAM,QAAI,CAAC;AAChD;AAEA,SAASG,KAAKA,CAACC,OAAY,EAAEC,IAAS,EAAE;EACtCD,OAAO,GAAG,IAAAE,mBAAU,EAACF,OAAO,CAAC;EAC7B,OAAOG,eAAM,CAACJ,KAAK,eACjBd,MAAA,CAAAQ,OAAA,CAAAW,aAAA,CAACd,cAAA,CAAAG,OAAa;IACZY,iBAAiB,EAAC,MAAM;IACxBC,IAAI,EAAE;MAAEC,OAAO,EAAE,EAAE;MAAEC,IAAI,EAAE;IAAG,CAAE;IAChCR,OAAO,EAAEA,OAAQ;IACjBS,eAAe,EAAEC,cAAc,IAAI;MACjCC,MAAM,CAACD,cAAc,CAAC,CAACE,eAAe,CAAC,CAAC;MACxCX,IAAI,CAAC,CAAC;IACR;EAAE,CACH,CACH,CAAC;AACH;AAEAY,QAAQ,CAAC,sDAAsD,EAAE,MAAM;EACrEC,IAAI,CAAC,mBAAmB,EAAEb,IAAI,IAAI;IAChC,IAAMc,EAAE,GAAGhB,KAAK,CACd;MACEiB,gBAAgB,EAAE,QAAQ;MAC1BC,KAAK,EAAE;QAAEC,IAAI,EAAE,GAAG;QAAEC,MAAM,EAAE;UAAEC,OAAO,EAAE;QAAK;MAAE;IAChD,CAAC,EACDnB,IACF,CAAC;IAEDP,YAAY,CAACqB,EAAE,EAAE,kBAAkB,CAAC,CACjCM,IAAI,CAAC,CAAC,CACNC,QAAQ,CAAC,WAAW,CAAC;IACxB5B,YAAY,CAACqB,EAAE,EAAE,yBAAyB,CAAC,CACxCM,IAAI,CAAC,CAAC,CACNC,QAAQ,CAAC,OAAO,CAAC;EACtB,CAAC,CAAC;EAEFR,IAAI,CAAC,mBAAmB,EAAEb,IAAI,IAAI;IAChC,IAAMc,EAAE,GAAGhB,KAAK,CACd;MACEiB,gBAAgB,EAAE,QAAQ;MAC1BC,KAAK,EAAE;QAAEC,IAAI,EAAE,GAAG;QAAEC,MAAM,EAAE;UAAEC,OAAO,EAAE;QAAK;MAAE;IAChD,CAAC,EACDnB,IACF,CAAC;IAEDP,YAAY,CAACqB,EAAE,EAAE,kBAAkB,CAAC,CACjCM,IAAI,CAAC,CAAC,CACNC,QAAQ,CAAC,QAAQ,EAAE;MAAEC,MAAM,EAAE;QAAEC,KAAK,EAAE;MAAO;IAAE,CAAC,CAAC;EACtD,CAAC,CAAC;EAEFV,IAAI,CAAC,0BAA0B,EAAEb,IAAI,IAAI;IACvC,IAAMc,EAAE,GAAGhB,KAAK,CACd;MACEiB,gBAAgB,EAAE,QAAQ;MAC1BC,KAAK,EAAE,CAAE;IACX,CAAC,EACDhB,IACF,CAAC;IAEDP,YAAY,CAACqB,EAAE,EAAE,wBAAwB,CAAC,CACvCM,IAAI,CAAC,CAAC,CACNC,QAAQ,CAAC,QAAQ,EAAE;MAAEC,MAAM,EAAE;QAAEC,KAAK,EAAE;MAAK;IAAE,CAAC,CAAC;EACpD,CAAC,CAAC;EAEFV,IAAI,CAAC,yBAAyB,EAAEb,IAAI,IAAI;IACtC,IAAMc,EAAE,GAAGhB,KAAK,CACd;MACEiB,gBAAgB,EAAE,QAAQ;MAC1BC,KAAK,EAAE;QAAEC,IAAI,EAAE,GAAG;QAAEC,MAAM,EAAE;UAAEC,OAAO,EAAE;QAAM;MAAE;IACjD,CAAC,EACDnB,IACF,CAAC;IAEDP,YAAY,CAACqB,EAAE,EAAE,wBAAwB,CAAC,CACvCM,IAAI,CAAC,CAAC,CACNC,QAAQ,CAAC,OAAO,CAAC;EACtB,CAAC,CAAC;EAEFR,IAAI,CAAC,2BAA2B,EAAEb,IAAI,IAAI;IACxC,IAAMc,EAAE,GAAGhB,KAAK,CACd;MACEiB,gBAAgB,EAAE,QAAQ;MAC1BS,KAAK,EAAE;IACT,CAAC,EACDxB,IACF,CAAC;IAEDP,YAAY,CAACqB,EAAE,EAAE,kBAAkB,CAAC,CACjCM,IAAI,CAAC,CAAC,CACNC,QAAQ,CAAC,OAAO,CAAC;EACtB,CAAC,CAAC;EAEFR,IAAI,CAAC,8BAA8B,EAAEb,IAAI,IAAI;IAC3C,IAAMc,EAAE,GAAGhB,KAAK,CACd;MACEiB,gBAAgB,EAAE,QAAQ;MAC1BU,QAAQ,EAAE;IACZ,CAAC,EACDzB,IACF,CAAC;IAEDP,YAAY,CAACqB,EAAE,EAAE,qBAAqB,CAAC,CACpCM,IAAI,CAAC,CAAC,CACNC,QAAQ,CAAC,OAAO,CAAC;EACtB,CAAC,CAAC;AACJ,CAAC,CAAC"}