{"version":3,"file":"XAxisSettings.js","names":["_react","_interopRequireDefault","require","_editor","_propTypes","_AxisSettings","obj","__esModule","default","XAxisSettings","_ref","options","onOptionsChange","createElement","Fragment","id","features","autoDetectType","xAxis","onChange","Section","Switch","defaultChecked","sortX","reverseX","labels","enabled","propTypes","EditorPropTypes"],"sources":["../../../../src/visualizations/chart/Editor/XAxisSettings.tsx"],"sourcesContent":["import React from \"react\";\nimport { Section, Switch } from \"@/components/visualizations/editor\";\nimport { EditorPropTypes } from \"@/visualizations/prop-types\";\n\nimport AxisSettings from \"./AxisSettings\";\n\nexport default function XAxisSettings({ options, onOptionsChange }: any) {\n  return (\n    <React.Fragment>\n      <AxisSettings\n        id=\"XAxis\"\n        features={{ autoDetectType: true }}\n        options={options.xAxis}\n        // @ts-expect-error ts-migrate(2322) FIXME: Type '(xAxis: any) => any' is not assignable to ty... Remove this comment to see the full error message\n        onChange={(xAxis: any) => onOptionsChange({ xAxis })}\n      />\n\n      {/* @ts-expect-error ts-migrate(2745) FIXME: This JSX tag's 'children' prop expects type 'never... Remove this comment to see the full error message */}\n      <Section>\n        {/* @ts-expect-error ts-migrate(2745) FIXME: This JSX tag's 'children' prop expects type 'never... Remove this comment to see the full error message */}\n        <Switch\n          // @ts-expect-error ts-migrate(2322) FIXME: Type 'string' is not assignable to type 'never'.\n          data-test=\"Chart.XAxis.Sort\"\n          // @ts-expect-error ts-migrate(2322) FIXME: Type 'any' is not assignable to type 'never'.\n          defaultChecked={options.sortX}\n          // @ts-expect-error ts-migrate(2322) FIXME: Type '(sortX: any) => any' is not assignable to ty... Remove this comment to see the full error message\n          onChange={(sortX: any) => onOptionsChange({ sortX })}>\n          Sort Values\n        </Switch>\n      </Section>\n\n      {/* @ts-expect-error ts-migrate(2745) FIXME: This JSX tag's 'children' prop expects type 'never... Remove this comment to see the full error message */}\n      <Section>\n        {/* @ts-expect-error ts-migrate(2745) FIXME: This JSX tag's 'children' prop expects type 'never... Remove this comment to see the full error message */}\n        <Switch\n          // @ts-expect-error ts-migrate(2322) FIXME: Type 'string' is not assignable to type 'never'.\n          data-test=\"Chart.XAxis.Reverse\"\n          // @ts-expect-error ts-migrate(2322) FIXME: Type 'any' is not assignable to type 'never'.\n          defaultChecked={options.reverseX}\n          // @ts-expect-error ts-migrate(2322) FIXME: Type '(reverseX: any) => any' is not assignable to... Remove this comment to see the full error message\n          onChange={(reverseX: any) => onOptionsChange({ reverseX })}>\n          Reverse Order\n        </Switch>\n      </Section>\n\n      {/* @ts-expect-error ts-migrate(2745) FIXME: This JSX tag's 'children' prop expects type 'never... Remove this comment to see the full error message */}\n      <Section>\n        {/* @ts-expect-error ts-migrate(2745) FIXME: This JSX tag's 'children' prop expects type 'never... Remove this comment to see the full error message */}\n        <Switch\n          // @ts-expect-error ts-migrate(2322) FIXME: Type 'string' is not assignable to type 'never'.\n          data-test=\"Chart.XAxis.ShowLabels\"\n          // @ts-expect-error ts-migrate(2322) FIXME: Type 'any' is not assignable to type 'never'.\n          defaultChecked={options.xAxis.labels.enabled}\n          // @ts-expect-error ts-migrate(2322) FIXME: Type '(enabled: any) => any' is not assignable to ... Remove this comment to see the full error message\n          onChange={(enabled: any) => onOptionsChange({ xAxis: { labels: { enabled } } })}>\n          Show Labels\n        </Switch>\n      </Section>\n    </React.Fragment>\n  );\n}\n\nXAxisSettings.propTypes = EditorPropTypes;\n"],"mappings":";;;;;;AAAA,IAAAA,MAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,OAAA,GAAAD,OAAA;AACA,IAAAE,UAAA,GAAAF,OAAA;AAEA,IAAAG,aAAA,GAAAJ,sBAAA,CAAAC,OAAA;AAA0C,SAAAD,uBAAAK,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,KAAAE,OAAA,EAAAF,GAAA;AAE3B,SAASG,aAAaA,CAAAC,IAAA,EAAoC;EAAA,IAAjCC,OAAO,GAAAD,IAAA,CAAPC,OAAO;IAAEC,eAAe,GAAAF,IAAA,CAAfE,eAAe;EAC9D,oBACEZ,MAAA,CAAAQ,OAAA,CAAAK,aAAA,CAACb,MAAA,CAAAQ,OAAK,CAACM,QAAQ,qBACbd,MAAA,CAAAQ,OAAA,CAAAK,aAAA,CAACR,aAAA,CAAAG,OAAY;IACXO,EAAE,EAAC,OAAO;IACVC,QAAQ,EAAE;MAAEC,cAAc,EAAE;IAAK,CAAE;IACnCN,OAAO,EAAEA,OAAO,CAACO;IACjB;IAAA;IACAC,QAAQ,EAAGD,KAAU,IAAKN,eAAe,CAAC;MAAEM;IAAM,CAAC;EAAE,CACtD,CAAC,eAGFlB,MAAA,CAAAQ,OAAA,CAAAK,aAAA,CAACV,OAAA,CAAAiB,OAAO,qBAENpB,MAAA,CAAAQ,OAAA,CAAAK,aAAA,CAACV,OAAA,CAAAkB;EACC;EAAA;IACA,aAAU;IACV;IAAA;IACAC,cAAc,EAAEX,OAAO,CAACY;IACxB;IAAA;IACAJ,QAAQ,EAAGI,KAAU,IAAKX,eAAe,CAAC;MAAEW;IAAM,CAAC;EAAE,GAAC,aAEhD,CACD,CAAC,eAGVvB,MAAA,CAAAQ,OAAA,CAAAK,aAAA,CAACV,OAAA,CAAAiB,OAAO,qBAENpB,MAAA,CAAAQ,OAAA,CAAAK,aAAA,CAACV,OAAA,CAAAkB;EACC;EAAA;IACA,aAAU;IACV;IAAA;IACAC,cAAc,EAAEX,OAAO,CAACa;IACxB;IAAA;IACAL,QAAQ,EAAGK,QAAa,IAAKZ,eAAe,CAAC;MAAEY;IAAS,CAAC;EAAE,GAAC,eAEtD,CACD,CAAC,eAGVxB,MAAA,CAAAQ,OAAA,CAAAK,aAAA,CAACV,OAAA,CAAAiB,OAAO,qBAENpB,MAAA,CAAAQ,OAAA,CAAAK,aAAA,CAACV,OAAA,CAAAkB;EACC;EAAA;IACA,aAAU;IACV;IAAA;IACAC,cAAc,EAAEX,OAAO,CAACO,KAAK,CAACO,MAAM,CAACC;IACrC;IAAA;IACAP,QAAQ,EAAGO,OAAY,IAAKd,eAAe,CAAC;MAAEM,KAAK,EAAE;QAAEO,MAAM,EAAE;UAAEC;QAAQ;MAAE;IAAE,CAAC;EAAE,GAAC,aAE3E,CACD,CACK,CAAC;AAErB;AAEAjB,aAAa,CAACkB,SAAS,GAAGC,0BAAe"}