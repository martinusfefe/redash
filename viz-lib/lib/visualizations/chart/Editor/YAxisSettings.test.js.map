{"version":3,"file":"YAxisSettings.test.js","names":["_react","_interopRequireDefault","require","_enzyme","_getOptions","_YAxisSettings","obj","__esModule","default","findByTestID","wrapper","testId","find","concat","elementExists","length","mount","options","done","getOptions","enzyme","createElement","visualizationName","data","columns","rows","onOptionsChange","changedOptions","expect","toMatchSnapshot","describe","test","el","globalSeriesType","yAxis","type","opposite","last","simulate","target","value","toBeTruthy","toBeFalsy","sortY","reverseY"],"sources":["../../../../src/visualizations/chart/Editor/YAxisSettings.test.tsx"],"sourcesContent":["import React from \"react\";\nimport enzyme from \"enzyme\";\n\nimport getOptions from \"../getOptions\";\nimport YAxisSettings from \"./YAxisSettings\";\n\nfunction findByTestID(wrapper: any, testId: any) {\n  return wrapper.find(`[data-test=\"${testId}\"]`);\n}\n\nfunction elementExists(wrapper: any, testId: any) {\n  return findByTestID(wrapper, testId).length > 0;\n}\n\nfunction mount(options: any, done: any) {\n  options = getOptions(options);\n  return enzyme.mount(\n    <YAxisSettings\n      visualizationName=\"Test\"\n      data={{ columns: [], rows: [] }}\n      options={options}\n      onOptionsChange={changedOptions => {\n        expect(changedOptions).toMatchSnapshot();\n        done();\n      }}\n    />\n  );\n}\n\ndescribe(\"Visualizations -> Chart -> Editor -> Y-Axis Settings\", () => {\n  test(\"Changes axis type\", done => {\n    const el = mount(\n      {\n        globalSeriesType: \"column\",\n        yAxis: [{ type: \"linear\" }, { type: \"linear\", opposite: true }],\n      },\n      done\n    );\n\n    findByTestID(el, \"Chart.LeftYAxis.Type\")\n      .last()\n      .simulate(\"mouseDown\");\n    findByTestID(el, \"Chart.LeftYAxis.Type.Category\")\n      .last()\n      .simulate(\"click\");\n  });\n\n  test(\"Changes axis name\", done => {\n    const el = mount(\n      {\n        globalSeriesType: \"column\",\n        yAxis: [{ type: \"linear\" }, { type: \"linear\", opposite: true }],\n      },\n      done\n    );\n\n    findByTestID(el, \"Chart.LeftYAxis.Name\")\n      .last()\n      .simulate(\"change\", { target: { value: \"test\" } });\n  });\n\n  test(\"Changes axis tick format\", done => {\n    const el = mount(\n      {\n        globalSeriesType: \"column\",\n        yAxis: [],\n      },\n      done\n    );\n\n    findByTestID(el, \"Chart.LeftYAxis.TickFormat\")\n      .last()\n      .simulate(\"change\", { target: { value: \"s\" } });\n  });\n\n  test(\"Changes axis min value\", done => {\n    const el = mount(\n      {\n        globalSeriesType: \"column\",\n        yAxis: [{ type: \"linear\" }, { type: \"linear\", opposite: true }],\n      },\n      done\n    );\n\n    findByTestID(el, \"Chart.LeftYAxis.RangeMin\")\n      .find(\"input\")\n      .last()\n      .simulate(\"change\", { target: { value: \"50\" } });\n  });\n\n  test(\"Changes axis max value\", done => {\n    const el = mount(\n      {\n        globalSeriesType: \"column\",\n        yAxis: [{ type: \"linear\" }, { type: \"linear\", opposite: true }],\n      },\n      done\n    );\n\n    findByTestID(el, \"Chart.LeftYAxis.RangeMax\")\n      .find(\"input\")\n      .last()\n      .simulate(\"change\", { target: { value: \"200\" } });\n  });\n\n  describe(\"for non-heatmap\", () => {\n    test(\"Right Y Axis should be available\", () => {\n      // @ts-expect-error ts-migrate(2554) FIXME: Expected 2 arguments, but got 1.\n      const el = mount({\n        globalSeriesType: \"column\",\n        yAxis: [{ type: \"linear\" }, { type: \"linear\", opposite: true }],\n      });\n\n      expect(elementExists(el, \"Chart.RightYAxis.Type\")).toBeTruthy();\n    });\n  });\n\n  describe(\"for heatmap\", () => {\n    test(\"Right Y Axis should not be available\", () => {\n      // @ts-expect-error ts-migrate(2554) FIXME: Expected 2 arguments, but got 1.\n      const el = mount({\n        globalSeriesType: \"heatmap\",\n        yAxis: [{ type: \"linear\" }, { type: \"linear\", opposite: true }],\n      });\n\n      expect(elementExists(el, \"Chart.RightYAxis.Type\")).toBeFalsy();\n    });\n\n    test(\"Sets Sort X Values option\", done => {\n      const el = mount(\n        {\n          globalSeriesType: \"heatmap\",\n          sortY: false,\n        },\n        done\n      );\n\n      findByTestID(el, \"Chart.LeftYAxis.Sort\")\n        .last()\n        .simulate(\"click\");\n    });\n\n    test(\"Sets Reverse Y Values option\", done => {\n      const el = mount(\n        {\n          globalSeriesType: \"heatmap\",\n          reverseY: false,\n        },\n        done\n      );\n\n      findByTestID(el, \"Chart.LeftYAxis.Reverse\")\n        .last()\n        .simulate(\"click\");\n    });\n  });\n});\n"],"mappings":"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"}