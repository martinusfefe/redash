{"version":3,"file":"ColumnMappingSelect.js","names":["isString","map","uniq","flatten","filter","sortBy","React","Section","Select","MappingTypes","x","label","y","multiple","series","yError","size","zVal","SwappedMappingTypes","_objectSpread","ColumnMappingSelect","_ref","value","availableColumns","type","onChange","areAxesSwapped","options","v","_ref2","createElement","concat","mode","allowClear","showSearch","placeholder","undefined","column","c","Option","key","defaultProps"],"sources":["../../../../src/visualizations/chart/Editor/ColumnMappingSelect.tsx"],"sourcesContent":["import { isString, map, uniq, flatten, filter, sortBy, keys } from \"lodash\";\nimport React from \"react\";\nimport { Section, Select } from \"@/components/visualizations/editor\";\n\nconst MappingTypes = {\n  x: { label: \"X Column\" },\n  y: { label: \"Y Columns\", multiple: true },\n  series: { label: \"Group by\" },\n  yError: { label: \"Errors column\" },\n  size: { label: \"Bubble Size Column\" },\n  zVal: { label: \"Color Column\" },\n};\n\nconst SwappedMappingTypes = {\n  ...MappingTypes,\n  x: { label: \"Y Column\" },\n  y: { label: \"X Columns\", multiple: true },\n};\n\ntype OwnProps = {\n  value?: string | string[];\n  availableColumns?: string[];\n  type?: any; // TODO: PropTypes.oneOf(keys(MappingTypes))\n  onChange?: (...args: any[]) => any;\n};\n\ntype Props = OwnProps & typeof ColumnMappingSelect.defaultProps;\n\nexport default function ColumnMappingSelect({ value, availableColumns, type, onChange, areAxesSwapped }: Props) {\n  const options = sortBy(filter(uniq(flatten([availableColumns, value])), v => isString(v) && v !== \"\"));\n\n  // this swaps the ui, as the data will be swapped on render\n  const { label, multiple } = !areAxesSwapped ? MappingTypes[type] : SwappedMappingTypes[type];\n\n  return (\n    // @ts-expect-error ts-migrate(2745) FIXME: This JSX tag's 'children' prop expects type 'never... Remove this comment to see the full error message\n    <Section>\n      <Select\n        label={label}\n        data-test={`Chart.ColumnMapping.${type}`}\n        mode={multiple ? \"multiple\" : \"default\"}\n        allowClear\n        showSearch\n        placeholder={multiple ? \"Choose columns...\" : \"Choose column...\"}\n        value={value || undefined}\n        // @ts-expect-error ts-migrate(2349) FIXME: This expression is not callable.\n        onChange={(column: any) => onChange(column || null, type)}>\n        {map(options, c => (\n          // @ts-expect-error ts-migrate(2339) FIXME: Property 'Option' does not exist on type '({ class... Remove this comment to see the full error message\n          <Select.Option key={c} value={c} data-test={`Chart.ColumnMapping.${type}.${c}`}>\n            {c}\n            {/* @ts-expect-error ts-migrate(2339) FIXME: Property 'Option' does not exist on type '({ class... Remove this comment to see the full error message */}\n          </Select.Option>\n        ))}\n      </Select>\n    </Section>\n  );\n}\n\nColumnMappingSelect.defaultProps = {\n  value: null,\n  availableColumns: [],\n  type: null,\n  onChange: () => {},\n};\n\nColumnMappingSelect.MappingTypes = MappingTypes;\n"],"mappings":";;;;;AAAA,SAASA,QAAQ,EAAEC,GAAG,EAAEC,IAAI,EAAEC,OAAO,EAAEC,MAAM,EAAEC,MAAM,QAAc,QAAQ;AAC3E,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,EAAEC,MAAM;AAExB,IAAMC,YAAY,GAAG;EACnBC,CAAC,EAAE;IAAEC,KAAK,EAAE;EAAW,CAAC;EACxBC,CAAC,EAAE;IAAED,KAAK,EAAE,WAAW;IAAEE,QAAQ,EAAE;EAAK,CAAC;EACzCC,MAAM,EAAE;IAAEH,KAAK,EAAE;EAAW,CAAC;EAC7BI,MAAM,EAAE;IAAEJ,KAAK,EAAE;EAAgB,CAAC;EAClCK,IAAI,EAAE;IAAEL,KAAK,EAAE;EAAqB,CAAC;EACrCM,IAAI,EAAE;IAAEN,KAAK,EAAE;EAAe;AAChC,CAAC;AAED,IAAMO,mBAAmB,GAAAC,aAAA,CAAAA,aAAA,KACpBV,YAAY;EACfC,CAAC,EAAE;IAAEC,KAAK,EAAE;EAAW,CAAC;EACxBC,CAAC,EAAE;IAAED,KAAK,EAAE,WAAW;IAAEE,QAAQ,EAAE;EAAK;AAAC,EAC1C;AAWD,eAAe,SAASO,mBAAmBA,CAAAC,IAAA,EAAqE;EAAA,IAAlEC,KAAK,GAAAD,IAAA,CAALC,KAAK;IAAEC,gBAAgB,GAAAF,IAAA,CAAhBE,gBAAgB;IAAEC,IAAI,GAAAH,IAAA,CAAJG,IAAI;IAAEC,SAAQ,GAAAJ,IAAA,CAARI,QAAQ;IAAEC,cAAc,GAAAL,IAAA,CAAdK,cAAc;EACnG,IAAMC,OAAO,GAAGtB,MAAM,CAACD,MAAM,CAACF,IAAI,CAACC,OAAO,CAAC,CAACoB,gBAAgB,EAAED,KAAK,CAAC,CAAC,CAAC,EAAEM,CAAC,IAAI5B,QAAQ,CAAC4B,CAAC,CAAC,IAAIA,CAAC,KAAK,EAAE,CAAC,CAAC;;EAEtG;EACA,IAAAC,KAAA,GAA4B,CAACH,cAAc,GAAGjB,YAAY,CAACe,IAAI,CAAC,GAAGN,mBAAmB,CAACM,IAAI,CAAC;IAApFb,KAAK,GAAAkB,KAAA,CAALlB,KAAK;IAAEE,QAAQ,GAAAgB,KAAA,CAARhB,QAAQ;EAEvB;IAAA;IACE;IACAP,KAAA,CAAAwB,aAAA,CAACvB,OAAO,qBACND,KAAA,CAAAwB,aAAA,CAACtB,MAAM;MACLG,KAAK,EAAEA,KAAM;MACb,oCAAAoB,MAAA,CAAkCP,IAAI,CAAG;MACzCQ,IAAI,EAAEnB,QAAQ,GAAG,UAAU,GAAG,SAAU;MACxCoB,UAAU;MACVC,UAAU;MACVC,WAAW,EAAEtB,QAAQ,GAAG,mBAAmB,GAAG,kBAAmB;MACjES,KAAK,EAAEA,KAAK,IAAIc;MAChB;MAAA;MACAX,QAAQ,EAAGY,MAAW,IAAKZ,SAAQ,CAACY,MAAM,IAAI,IAAI,EAAEb,IAAI;IAAE,GACzDvB,GAAG,CAAC0B,OAAO,EAAEW,CAAC;IAAA;IACb;IACAhC,KAAA,CAAAwB,aAAA,CAACtB,MAAM,CAAC+B,MAAM;MAACC,GAAG,EAAEF,CAAE;MAAChB,KAAK,EAAEgB,CAAE;MAAC,oCAAAP,MAAA,CAAkCP,IAAI,OAAAO,MAAA,CAAIO,CAAC;IAAG,GAC5EA,CAEY,CAChB,CACK,CACD;EAAC;AAEd;AAEAlB,mBAAmB,CAACqB,YAAY,GAAG;EACjCnB,KAAK,EAAE,IAAI;EACXC,gBAAgB,EAAE,EAAE;EACpBC,IAAI,EAAE,IAAI;EACVC,QAAQ,EAAEA,CAAA,KAAM,CAAC;AACnB,CAAC;AAEDL,mBAAmB,CAACX,YAAY,GAAGA,YAAY"}