{"version":3,"file":"CustomChartSettings.js","names":["isNil","trimStart","React","Section","Switch","TextArea","EditorPropTypes","defaultCustomCode","CustomChartSettings","_ref","options","onOptionsChange","createElement","Fragment","label","rows","defaultValue","customCode","onChange","event","target","value","defaultChecked","enableConsoleLogs","id","autoRedraw","propTypes"],"sources":["../../../../src/visualizations/chart/Editor/CustomChartSettings.tsx"],"sourcesContent":["import { isNil, trimStart } from \"lodash\";\nimport React from \"react\";\nimport { Section, Switch, TextArea } from \"@/components/visualizations/editor\";\nimport { EditorPropTypes } from \"@/visualizations/prop-types\";\n\nconst defaultCustomCode = trimStart(`\n// Available variables are x, ys, element, and Plotly\n// Type console.log(x, ys); for more info about x and ys\n// To plot your graph call Plotly.plot(element, ...)\n// Plotly examples and docs: https://plot.ly/javascript/\n`);\n\nexport default function CustomChartSettings({ options, onOptionsChange }: any) {\n  return (\n    <React.Fragment>\n      {/* @ts-expect-error ts-migrate(2745) FIXME: This JSX tag's 'children' prop expects type 'never... Remove this comment to see the full error message */}\n      <Section>\n        <TextArea\n          label=\"Custom code\"\n          data-test=\"Chart.Custom.Code\"\n          rows=\"10\"\n          defaultValue={isNil(options.customCode) ? defaultCustomCode : options.customCode}\n          onChange={(event: any) => onOptionsChange({ customCode: event.target.value })}\n        />\n      </Section>\n\n      {/* @ts-expect-error ts-migrate(2745) FIXME: This JSX tag's 'children' prop expects type 'never... Remove this comment to see the full error message */}\n      <Section>\n        {/* @ts-expect-error ts-migrate(2745) FIXME: This JSX tag's 'children' prop expects type 'never... Remove this comment to see the full error message */}\n        <Switch\n          // @ts-expect-error ts-migrate(2322) FIXME: Type 'string' is not assignable to type 'never'.\n          data-test=\"Chart.Custom.EnableConsoleLogs\"\n          // @ts-expect-error ts-migrate(2322) FIXME: Type 'any' is not assignable to type 'never'.\n          defaultChecked={options.enableConsoleLogs}\n          // @ts-expect-error ts-migrate(2322) FIXME: Type '(enableConsoleLogs: any) => any' is not assi... Remove this comment to see the full error message\n          onChange={(enableConsoleLogs: any) => onOptionsChange({ enableConsoleLogs })}>\n          Show errors in the console\n        </Switch>\n      </Section>\n\n      {/* @ts-expect-error ts-migrate(2745) FIXME: This JSX tag's 'children' prop expects type 'never... Remove this comment to see the full error message */}\n      <Section>\n        {/* @ts-expect-error ts-migrate(2745) FIXME: This JSX tag's 'children' prop expects type 'never... Remove this comment to see the full error message */}\n        <Switch\n          // @ts-expect-error ts-migrate(2322) FIXME: Type 'string' is not assignable to type 'never'.\n          id=\"chart-editor-auto-update-custom-chart\"\n          // @ts-expect-error ts-migrate(2322) FIXME: Type 'string' is not assignable to type 'never'.\n          data-test=\"Chart.Custom.AutoUpdate\"\n          // @ts-expect-error ts-migrate(2322) FIXME: Type 'any' is not assignable to type 'never'.\n          defaultChecked={options.autoRedraw}\n          // @ts-expect-error ts-migrate(2322) FIXME: Type '(autoRedraw: any) => any' is not assignable ... Remove this comment to see the full error message\n          onChange={(autoRedraw: any) => onOptionsChange({ autoRedraw })}>\n          Auto update graph\n        </Switch>\n      </Section>\n    </React.Fragment>\n  );\n}\n\nCustomChartSettings.propTypes = EditorPropTypes;\n"],"mappings":"AAAA,SAASA,KAAK,EAAEC,SAAS,QAAQ,QAAQ;AACzC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,EAAEC,MAAM,EAAEC,QAAQ;AAClC,SAASC,eAAe;AAExB,IAAMC,iBAAiB,GAAGN,SAAS,sOAKlC,CAAC;AAEF,eAAe,SAASO,mBAAmBA,CAAAC,IAAA,EAAoC;EAAA,IAAjCC,OAAO,GAAAD,IAAA,CAAPC,OAAO;IAAEC,eAAe,GAAAF,IAAA,CAAfE,eAAe;EACpE,oBACET,KAAA,CAAAU,aAAA,CAACV,KAAK,CAACW,QAAQ,qBAEbX,KAAA,CAAAU,aAAA,CAACT,OAAO,qBACND,KAAA,CAAAU,aAAA,CAACP,QAAQ;IACPS,KAAK,EAAC,aAAa;IACnB,aAAU,mBAAmB;IAC7BC,IAAI,EAAC,IAAI;IACTC,YAAY,EAAEhB,KAAK,CAACU,OAAO,CAACO,UAAU,CAAC,GAAGV,iBAAiB,GAAGG,OAAO,CAACO,UAAW;IACjFC,QAAQ,EAAGC,KAAU,IAAKR,eAAe,CAAC;MAAEM,UAAU,EAAEE,KAAK,CAACC,MAAM,CAACC;IAAM,CAAC;EAAE,CAC/E,CACM,CAAC,eAGVnB,KAAA,CAAAU,aAAA,CAACT,OAAO,qBAEND,KAAA,CAAAU,aAAA,CAACR;EACC;EAAA;IACA,aAAU;IACV;IAAA;IACAkB,cAAc,EAAEZ,OAAO,CAACa;IACxB;IAAA;IACAL,QAAQ,EAAGK,iBAAsB,IAAKZ,eAAe,CAAC;MAAEY;IAAkB,CAAC;EAAE,GAAC,4BAExE,CACD,CAAC,eAGVrB,KAAA,CAAAU,aAAA,CAACT,OAAO,qBAEND,KAAA,CAAAU,aAAA,CAACR;EACC;EAAA;IACAoB,EAAE,EAAC;IACH;IAAA;IACA,aAAU;IACV;IAAA;IACAF,cAAc,EAAEZ,OAAO,CAACe;IACxB;IAAA;IACAP,QAAQ,EAAGO,UAAe,IAAKd,eAAe,CAAC;MAAEc;IAAW,CAAC;EAAE,GAAC,mBAE1D,CACD,CACK,CAAC;AAErB;AAEAjB,mBAAmB,CAACkB,SAAS,GAAGpB,eAAe"}