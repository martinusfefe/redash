{"version":3,"file":"CustomChartSettings.js","names":["_lodash","require","_react","_interopRequireDefault","_editor","_propTypes","obj","__esModule","default","defaultCustomCode","trimStart","CustomChartSettings","_ref","options","onOptionsChange","createElement","Fragment","Section","TextArea","label","rows","defaultValue","isNil","customCode","onChange","event","target","value","Switch","defaultChecked","enableConsoleLogs","id","autoRedraw","propTypes","EditorPropTypes"],"sources":["../../../../src/visualizations/chart/Editor/CustomChartSettings.tsx"],"sourcesContent":["import { isNil, trimStart } from \"lodash\";\nimport React from \"react\";\nimport { Section, Switch, TextArea } from \"@/components/visualizations/editor\";\nimport { EditorPropTypes } from \"@/visualizations/prop-types\";\n\nconst defaultCustomCode = trimStart(`\n// Available variables are x, ys, element, and Plotly\n// Type console.log(x, ys); for more info about x and ys\n// To plot your graph call Plotly.plot(element, ...)\n// Plotly examples and docs: https://plot.ly/javascript/\n`);\n\nexport default function CustomChartSettings({ options, onOptionsChange }: any) {\n  return (\n    <React.Fragment>\n      {/* @ts-expect-error ts-migrate(2745) FIXME: This JSX tag's 'children' prop expects type 'never... Remove this comment to see the full error message */}\n      <Section>\n        <TextArea\n          label=\"Custom code\"\n          data-test=\"Chart.Custom.Code\"\n          rows=\"10\"\n          defaultValue={isNil(options.customCode) ? defaultCustomCode : options.customCode}\n          onChange={(event: any) => onOptionsChange({ customCode: event.target.value })}\n        />\n      </Section>\n\n      {/* @ts-expect-error ts-migrate(2745) FIXME: This JSX tag's 'children' prop expects type 'never... Remove this comment to see the full error message */}\n      <Section>\n        {/* @ts-expect-error ts-migrate(2745) FIXME: This JSX tag's 'children' prop expects type 'never... Remove this comment to see the full error message */}\n        <Switch\n          // @ts-expect-error ts-migrate(2322) FIXME: Type 'string' is not assignable to type 'never'.\n          data-test=\"Chart.Custom.EnableConsoleLogs\"\n          // @ts-expect-error ts-migrate(2322) FIXME: Type 'any' is not assignable to type 'never'.\n          defaultChecked={options.enableConsoleLogs}\n          // @ts-expect-error ts-migrate(2322) FIXME: Type '(enableConsoleLogs: any) => any' is not assi... Remove this comment to see the full error message\n          onChange={(enableConsoleLogs: any) => onOptionsChange({ enableConsoleLogs })}>\n          Show errors in the console\n        </Switch>\n      </Section>\n\n      {/* @ts-expect-error ts-migrate(2745) FIXME: This JSX tag's 'children' prop expects type 'never... Remove this comment to see the full error message */}\n      <Section>\n        {/* @ts-expect-error ts-migrate(2745) FIXME: This JSX tag's 'children' prop expects type 'never... Remove this comment to see the full error message */}\n        <Switch\n          // @ts-expect-error ts-migrate(2322) FIXME: Type 'string' is not assignable to type 'never'.\n          id=\"chart-editor-auto-update-custom-chart\"\n          // @ts-expect-error ts-migrate(2322) FIXME: Type 'string' is not assignable to type 'never'.\n          data-test=\"Chart.Custom.AutoUpdate\"\n          // @ts-expect-error ts-migrate(2322) FIXME: Type 'any' is not assignable to type 'never'.\n          defaultChecked={options.autoRedraw}\n          // @ts-expect-error ts-migrate(2322) FIXME: Type '(autoRedraw: any) => any' is not assignable ... Remove this comment to see the full error message\n          onChange={(autoRedraw: any) => onOptionsChange({ autoRedraw })}>\n          Auto update graph\n        </Switch>\n      </Section>\n    </React.Fragment>\n  );\n}\n\nCustomChartSettings.propTypes = EditorPropTypes;\n"],"mappings":";;;;;;AAAA,IAAAA,OAAA,GAAAC,OAAA;AACA,IAAAC,MAAA,GAAAC,sBAAA,CAAAF,OAAA;AACA,IAAAG,OAAA,GAAAH,OAAA;AACA,IAAAI,UAAA,GAAAJ,OAAA;AAA8D,SAAAE,uBAAAG,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,KAAAE,OAAA,EAAAF,GAAA;AAE9D,IAAMG,iBAAiB,GAAG,IAAAC,iBAAS,uOAKlC,CAAC;AAEa,SAASC,mBAAmBA,CAAAC,IAAA,EAAoC;EAAA,IAAjCC,OAAO,GAAAD,IAAA,CAAPC,OAAO;IAAEC,eAAe,GAAAF,IAAA,CAAfE,eAAe;EACpE,oBACEZ,MAAA,CAAAM,OAAA,CAAAO,aAAA,CAACb,MAAA,CAAAM,OAAK,CAACQ,QAAQ,qBAEbd,MAAA,CAAAM,OAAA,CAAAO,aAAA,CAACX,OAAA,CAAAa,OAAO,qBACNf,MAAA,CAAAM,OAAA,CAAAO,aAAA,CAACX,OAAA,CAAAc,QAAQ;IACPC,KAAK,EAAC,aAAa;IACnB,aAAU,mBAAmB;IAC7BC,IAAI,EAAC,IAAI;IACTC,YAAY,EAAE,IAAAC,aAAK,EAACT,OAAO,CAACU,UAAU,CAAC,GAAGd,iBAAiB,GAAGI,OAAO,CAACU,UAAW;IACjFC,QAAQ,EAAGC,KAAU,IAAKX,eAAe,CAAC;MAAES,UAAU,EAAEE,KAAK,CAACC,MAAM,CAACC;IAAM,CAAC;EAAE,CAC/E,CACM,CAAC,eAGVzB,MAAA,CAAAM,OAAA,CAAAO,aAAA,CAACX,OAAA,CAAAa,OAAO,qBAENf,MAAA,CAAAM,OAAA,CAAAO,aAAA,CAACX,OAAA,CAAAwB;EACC;EAAA;IACA,aAAU;IACV;IAAA;IACAC,cAAc,EAAEhB,OAAO,CAACiB;IACxB;IAAA;IACAN,QAAQ,EAAGM,iBAAsB,IAAKhB,eAAe,CAAC;MAAEgB;IAAkB,CAAC;EAAE,GAAC,4BAExE,CACD,CAAC,eAGV5B,MAAA,CAAAM,OAAA,CAAAO,aAAA,CAACX,OAAA,CAAAa,OAAO,qBAENf,MAAA,CAAAM,OAAA,CAAAO,aAAA,CAACX,OAAA,CAAAwB;EACC;EAAA;IACAG,EAAE,EAAC;IACH;IAAA;IACA,aAAU;IACV;IAAA;IACAF,cAAc,EAAEhB,OAAO,CAACmB;IACxB;IAAA;IACAR,QAAQ,EAAGQ,UAAe,IAAKlB,eAAe,CAAC;MAAEkB;IAAW,CAAC;EAAE,GAAC,mBAE1D,CACD,CACK,CAAC;AAErB;AAEArB,mBAAmB,CAACsB,SAAS,GAAGC,0BAAe"}