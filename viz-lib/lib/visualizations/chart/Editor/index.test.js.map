{"version":3,"file":"index.test.js","names":["React","enzyme","getOptions","Editor","findByTestID","wrapper","testId","find","concat","elementExists","length","mount","options","data","createElement","visualizationName","onOptionsChange","describe","test","el","globalSeriesType","columns","rows","expect","toBeTruthy","toBeFalsy"],"sources":["../../../../src/visualizations/chart/Editor/index.test.tsx"],"sourcesContent":["import React from \"react\";\nimport enzyme from \"enzyme\";\n\nimport getOptions from \"../getOptions\";\nimport Editor from \"./index\";\n\nfunction findByTestID(wrapper: any, testId: any) {\n  return wrapper.find(`[data-test=\"${testId}\"]`);\n}\n\nfunction elementExists(wrapper: any, testId: any) {\n  return findByTestID(wrapper, testId).length > 0;\n}\n\nfunction mount(options: any, data: any) {\n  options = getOptions(options);\n  return enzyme.mount(<Editor visualizationName=\"Test\" data={data} options={options} onOptionsChange={() => {}} />);\n}\n\ndescribe(\"Visualizations -> Chart -> Editor (wrapper)\", () => {\n  test(\"Renders generic wrapper\", () => {\n    const el = mount({ globalSeriesType: \"column\" }, { columns: [], rows: [] });\n\n    expect(elementExists(el, \"VisualizationEditor.Tabs.General\")).toBeTruthy();\n    expect(elementExists(el, \"VisualizationEditor.Tabs.XAxis\")).toBeTruthy();\n    expect(elementExists(el, \"VisualizationEditor.Tabs.YAxis\")).toBeTruthy();\n    expect(elementExists(el, \"VisualizationEditor.Tabs.Series\")).toBeTruthy();\n    expect(elementExists(el, \"VisualizationEditor.Tabs.Colors\")).toBeTruthy();\n    expect(elementExists(el, \"VisualizationEditor.Tabs.DataLabels\")).toBeTruthy();\n\n    expect(elementExists(el, \"Chart.GlobalSeriesType\")).toBeTruthy(); // general settings block exists\n    expect(elementExists(el, \"Chart.Custom.Code\")).toBeFalsy(); // custom settings block does not exist\n  });\n\n  test(\"Renders wrapper for custom charts\", () => {\n    const el = mount({ globalSeriesType: \"custom\" }, { columns: [], rows: [] });\n\n    expect(elementExists(el, \"VisualizationEditor.Tabs.General\")).toBeTruthy();\n    expect(elementExists(el, \"VisualizationEditor.Tabs.XAxis\")).toBeFalsy();\n    expect(elementExists(el, \"VisualizationEditor.Tabs.YAxis\")).toBeFalsy();\n    expect(elementExists(el, \"VisualizationEditor.Tabs.Series\")).toBeFalsy();\n    expect(elementExists(el, \"VisualizationEditor.Tabs.Colors\")).toBeFalsy();\n    expect(elementExists(el, \"VisualizationEditor.Tabs.DataLabels\")).toBeFalsy();\n\n    expect(elementExists(el, \"Chart.GlobalSeriesType\")).toBeTruthy(); // general settings block exists\n    expect(elementExists(el, \"Chart.Custom.Code\")).toBeTruthy(); // custom settings block exists\n  });\n});\n"],"mappings":"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"}