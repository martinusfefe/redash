{"version":3,"file":"preparePieData.js","names":["_lodash","require","d3","_interopRequireWildcard","_chooseTextColorForBackground","_interopRequireDefault","_ColorPalette","_utils","obj","__esModule","default","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","value","_toPropertyKey","configurable","writable","arg","_toPrimitive","String","input","hint","prim","Symbol","toPrimitive","undefined","res","TypeError","Number","getPieDimensions","series","rows","cellsInRow","Math","ceil","cellWidth","cellHeight","xPadding","yPadding","getPieHoverInfoPattern","options","hasX","test","textFormat","result","prepareSeries","additionalOptions","index","hoverInfoPattern","getValueColor","seriesOptions","extend","type","globalSeriesType","yAxis","name","xPosition","yPosition","floor","labelsValuesMap","Map","sourceData","seriesTotal","reduce","data","row","y","cleanNumber","abs","each","x","normalizeValue","xAxis","concat","aggregatedY","yPercent","markerColors","map","Array","from","values","textColors","c","chooseTextColorForBackground","labels","visible","hole","marker","colors","hoverinfo","text","textinfo","showDataLabels","textposition","textfont","color","direction","domain","sort","piesort","color_scheme","preparePieData","seriesList","palette","AllColorPaletteArrays","valuesColors","getDefaultColor","ColorPaletteTypes","uniqueXValues","Set","d","step","colorIndices","range","round","scale","ordinal","valuesOptions","item","isString","includes","columnMapping","v"],"sources":["../../../../src/visualizations/chart/plotly/preparePieData.ts"],"sourcesContent":["import { isString, each, extend, includes, map, reduce } from \"lodash\";\nimport * as d3 from \"d3\";\nimport chooseTextColorForBackground from \"@/lib/chooseTextColorForBackground\";\nimport { AllColorPaletteArrays, ColorPaletteTypes } from \"@/visualizations/ColorPalette\";\n\nimport { cleanNumber, normalizeValue } from \"./utils\";\n\nexport function getPieDimensions(series: any) {\n  const rows = series.length > 2 ? 2 : 1;\n  const cellsInRow = Math.ceil(series.length / rows);\n  const cellWidth = 1 / cellsInRow;\n  const cellHeight = 1 / rows;\n  const xPadding = 0.02;\n  const yPadding = 0.1;\n\n  return { rows, cellsInRow, cellWidth, cellHeight, xPadding, yPadding };\n}\n\nfunction getPieHoverInfoPattern(options: any) {\n  const hasX = /{{\\s*@@x\\s*}}/.test(options.textFormat);\n  let result = \"text\";\n  if (!hasX) result += \"+label\";\n  return result;\n}\n\nfunction prepareSeries(series: any, options: any, additionalOptions: any) {\n  const {\n    cellWidth,\n    cellHeight,\n    xPadding,\n    yPadding,\n    cellsInRow,\n    hasX,\n    index,\n    hoverInfoPattern,\n    getValueColor,\n  } = additionalOptions;\n  const seriesOptions = extend({ type: options.globalSeriesType, yAxis: 0 }, options.seriesOptions[series.name]);\n\n  const xPosition = (index % cellsInRow) * cellWidth;\n  const yPosition = Math.floor(index / cellsInRow) * cellHeight;\n\n  const labelsValuesMap = new Map();\n\n  const sourceData = new Map();\n  const seriesTotal = reduce(\n    series.data,\n    (result, row) => {\n      const y = cleanNumber(row.y);\n      return result + Math.abs(y);\n    },\n    0\n  );\n  each(series.data, row => {\n    const x = hasX ? normalizeValue(row.x, options.xAxis.type) : `Slice ${index}`;\n    const y = cleanNumber(row.y);\n\n    if (labelsValuesMap.has(x)) {\n      labelsValuesMap.set(x, labelsValuesMap.get(x) + y);\n    } else {\n      labelsValuesMap.set(x, y);\n    }\n    const aggregatedY = labelsValuesMap.get(x);\n\n\n    sourceData.set(x, {\n      x,\n      y: aggregatedY,\n      yPercent: (aggregatedY / seriesTotal) * 100,\n      row,\n    });\n  });\n\n  const markerColors = map(Array.from(sourceData.values()), data => getValueColor(data.row.x));\n  const textColors = map(markerColors, c => chooseTextColorForBackground(c));\n\n  const labels = Array.from(labelsValuesMap.keys());\n  const values = Array.from(labelsValuesMap.values());\n\n  return {\n    visible: true,\n    values,\n    labels,\n    type: \"pie\",\n    hole: 0.4,\n    marker: {\n      colors: markerColors,\n    },\n    hoverinfo: hoverInfoPattern,\n    text: [],\n    textinfo: options.showDataLabels ? \"percent\" : \"none\",\n    textposition: \"inside\",\n    textfont: {\n      color: textColors,\n    },\n    name: seriesOptions.name || series.name,\n    direction: options.direction.type,\n    domain: {\n      x: [xPosition, xPosition + cellWidth - xPadding],\n      y: [yPosition, yPosition + cellHeight - yPadding],\n    },\n    sourceData,\n    sort: options.piesort,\n    color_scheme: options.color_scheme,\n  };\n}\n\nexport default function preparePieData(seriesList: any, options: any) {\n  // @ts-expect-error ts-migrate(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\n  const palette = AllColorPaletteArrays[options.color_scheme];\n  const valuesColors = {};\n  let getDefaultColor : Function;\n\n  // @ts-expect-error ts-migrate(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\n  if (typeof(seriesList[0]) !== 'undefined' && ColorPaletteTypes[options.color_scheme] === 'continuous') {\n    const uniqueXValues =[... new Set(seriesList[0].data.map((d: any) => d.x))];\n    const step = (palette.length - 1) / (uniqueXValues.length - 1 || 1);\n    const colorIndices = d3.range(uniqueXValues.length).map(function(i) {\n      return Math.round(step * i);\n    });\n    // @ts-expect-error ts-migrate(2339) FIXME: Property 'scale' does not exist on type 'typeof im... Remove this comment to see the full error message\n    getDefaultColor = d3.scale.ordinal()\n      .domain(uniqueXValues) // Set domain as the unique x-values\n      .range(colorIndices.map(index => palette[index]));\n  } else {\n    // @ts-expect-error ts-migrate(2339) FIXME: Property 'scale' does not exist on type 'typeof im... Remove this comment to see the full error message\n    getDefaultColor = d3.scale\n      .ordinal()\n      .domain([])\n      .range(palette);\n  };\n\n  each(options.valuesOptions, (item, key) => {\n    if (isString(item.color) && item.color !== \"\") {\n      // @ts-expect-error ts-migrate(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\n      valuesColors[key] = item.color;\n    }\n  });\n\n  const additionalOptions = {\n    ...getPieDimensions(seriesList),\n    hasX: includes(options.columnMapping, \"x\"),\n    hoverInfoPattern: getPieHoverInfoPattern(options),\n    // @ts-expect-error ts-migrate(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\n    getValueColor: (v: any) => valuesColors[v] || getDefaultColor(v),\n  };\n\n  return map(seriesList, (series, index) => prepareSeries(series, options, { ...additionalOptions, index }));\n}\n"],"mappings":"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"}