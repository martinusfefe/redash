{"version":3,"file":"preparePieData.js","names":["isString","each","extend","includes","map","reduce","d3","chooseTextColorForBackground","AllColorPaletteArrays","ColorPaletteTypes","cleanNumber","normalizeValue","getPieDimensions","series","rows","length","cellsInRow","Math","ceil","cellWidth","cellHeight","xPadding","yPadding","getPieHoverInfoPattern","options","hasX","test","textFormat","result","prepareSeries","additionalOptions","index","hoverInfoPattern","getValueColor","seriesOptions","type","globalSeriesType","yAxis","name","xPosition","yPosition","floor","labelsValuesMap","Map","sourceData","seriesTotal","data","row","y","abs","x","xAxis","concat","has","set","get","aggregatedY","yPercent","markerColors","Array","from","values","textColors","c","labels","keys","visible","hole","marker","colors","hoverinfo","text","textinfo","showDataLabels","textposition","textfont","color","direction","domain","sort","piesort","color_scheme","preparePieData","seriesList","palette","valuesColors","getDefaultColor","uniqueXValues","Set","d","step","colorIndices","range","i","round","scale","ordinal","valuesOptions","item","key","_objectSpread","columnMapping","v"],"sources":["../../../../src/visualizations/chart/plotly/preparePieData.ts"],"sourcesContent":["import { isString, each, extend, includes, map, reduce } from \"lodash\";\nimport * as d3 from \"d3\";\nimport chooseTextColorForBackground from \"@/lib/chooseTextColorForBackground\";\nimport { AllColorPaletteArrays, ColorPaletteTypes } from \"@/visualizations/ColorPalette\";\n\nimport { cleanNumber, normalizeValue } from \"./utils\";\n\nexport function getPieDimensions(series: any) {\n  const rows = series.length > 2 ? 2 : 1;\n  const cellsInRow = Math.ceil(series.length / rows);\n  const cellWidth = 1 / cellsInRow;\n  const cellHeight = 1 / rows;\n  const xPadding = 0.02;\n  const yPadding = 0.1;\n\n  return { rows, cellsInRow, cellWidth, cellHeight, xPadding, yPadding };\n}\n\nfunction getPieHoverInfoPattern(options: any) {\n  const hasX = /{{\\s*@@x\\s*}}/.test(options.textFormat);\n  let result = \"text\";\n  if (!hasX) result += \"+label\";\n  return result;\n}\n\nfunction prepareSeries(series: any, options: any, additionalOptions: any) {\n  const {\n    cellWidth,\n    cellHeight,\n    xPadding,\n    yPadding,\n    cellsInRow,\n    hasX,\n    index,\n    hoverInfoPattern,\n    getValueColor,\n  } = additionalOptions;\n  const seriesOptions = extend({ type: options.globalSeriesType, yAxis: 0 }, options.seriesOptions[series.name]);\n\n  const xPosition = (index % cellsInRow) * cellWidth;\n  const yPosition = Math.floor(index / cellsInRow) * cellHeight;\n\n  const labelsValuesMap = new Map();\n\n  const sourceData = new Map();\n  const seriesTotal = reduce(\n    series.data,\n    (result, row) => {\n      const y = cleanNumber(row.y);\n      return result + Math.abs(y);\n    },\n    0\n  );\n  each(series.data, row => {\n    const x = hasX ? normalizeValue(row.x, options.xAxis.type) : `Slice ${index}`;\n    const y = cleanNumber(row.y);\n\n    if (labelsValuesMap.has(x)) {\n      labelsValuesMap.set(x, labelsValuesMap.get(x) + y);\n    } else {\n      labelsValuesMap.set(x, y);\n    }\n    const aggregatedY = labelsValuesMap.get(x);\n\n\n    sourceData.set(x, {\n      x,\n      y: aggregatedY,\n      yPercent: (aggregatedY / seriesTotal) * 100,\n      row,\n    });\n  });\n\n  const markerColors = map(Array.from(sourceData.values()), data => getValueColor(data.row.x));\n  const textColors = map(markerColors, c => chooseTextColorForBackground(c));\n\n  const labels = Array.from(labelsValuesMap.keys());\n  const values = Array.from(labelsValuesMap.values());\n\n  return {\n    visible: true,\n    values,\n    labels,\n    type: \"pie\",\n    hole: 0.4,\n    marker: {\n      colors: markerColors,\n    },\n    hoverinfo: hoverInfoPattern,\n    text: [],\n    textinfo: options.showDataLabels ? \"percent\" : \"none\",\n    textposition: \"inside\",\n    textfont: {\n      color: textColors,\n    },\n    name: seriesOptions.name || series.name,\n    direction: options.direction.type,\n    domain: {\n      x: [xPosition, xPosition + cellWidth - xPadding],\n      y: [yPosition, yPosition + cellHeight - yPadding],\n    },\n    sourceData,\n    sort: options.piesort,\n    color_scheme: options.color_scheme,\n  };\n}\n\nexport default function preparePieData(seriesList: any, options: any) {\n  // @ts-expect-error ts-migrate(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\n  const palette = AllColorPaletteArrays[options.color_scheme];\n  const valuesColors = {};\n  let getDefaultColor : Function;\n\n  // @ts-expect-error ts-migrate(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\n  if (typeof(seriesList[0]) !== 'undefined' && ColorPaletteTypes[options.color_scheme] === 'continuous') {\n    const uniqueXValues =[... new Set(seriesList[0].data.map((d: any) => d.x))];\n    const step = (palette.length - 1) / (uniqueXValues.length - 1 || 1);\n    const colorIndices = d3.range(uniqueXValues.length).map(function(i) {\n      return Math.round(step * i);\n    });\n    // @ts-expect-error ts-migrate(2339) FIXME: Property 'scale' does not exist on type 'typeof im... Remove this comment to see the full error message\n    getDefaultColor = d3.scale.ordinal()\n      .domain(uniqueXValues) // Set domain as the unique x-values\n      .range(colorIndices.map(index => palette[index]));\n  } else {\n    // @ts-expect-error ts-migrate(2339) FIXME: Property 'scale' does not exist on type 'typeof im... Remove this comment to see the full error message\n    getDefaultColor = d3.scale\n      .ordinal()\n      .domain([])\n      .range(palette);\n  };\n\n  each(options.valuesOptions, (item, key) => {\n    if (isString(item.color) && item.color !== \"\") {\n      // @ts-expect-error ts-migrate(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\n      valuesColors[key] = item.color;\n    }\n  });\n\n  const additionalOptions = {\n    ...getPieDimensions(seriesList),\n    hasX: includes(options.columnMapping, \"x\"),\n    hoverInfoPattern: getPieHoverInfoPattern(options),\n    // @ts-expect-error ts-migrate(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\n    getValueColor: (v: any) => valuesColors[v] || getDefaultColor(v),\n  };\n\n  return map(seriesList, (series, index) => prepareSeries(series, options, { ...additionalOptions, index }));\n}\n"],"mappings":"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"}