{"version":3,"file":"prepareLayout.js","names":["isObject","isUndefined","filter","map","getPieDimensions","getAxisTitle","axis","title","text","getAxisScaleType","type","prepareXAxis","axisOptions","additionalOptions","_axisOptions$tickForm","automargin","tickformat","tickFormat","sortX","reverseX","categoryorder","labels","showticklabels","enabled","prepareYAxis","_axisOptions$tickForm2","autorange","range","preparePieLayout","layout","options","data","hasName","test","textFormat","_getPieDimensions","cellsInRow","cellWidth","cellHeight","xPadding","annotations","series","index","xPosition","yPosition","Math","floor","x","y","xanchor","yanchor","name","showarrow","prepareDefaultLayout","y2Series","s","yaxis","xaxis","xAxis","yAxis","length","yaxis2","overlaying","side","stacking","barmode","prepareBoxLayout","boxmode","boxgroupgap","prepareLayout","element","margin","l","r","b","t","pad","width","max","offsetWidth","height","offsetHeight","autosize","showlegend","legend","traceorder","hoverlabel","namelength","includes","globalSeriesType","hovermode","swappedAxes"],"sources":["../../../../src/visualizations/chart/plotly/prepareLayout.ts"],"sourcesContent":["import { isObject, isUndefined, filter, map } from \"lodash\";\nimport { getPieDimensions } from \"./preparePieData\";\n\nfunction getAxisTitle(axis: any) {\n  return isObject(axis.title) ? axis.title.text : null;\n}\n\nfunction getAxisScaleType(axis: any) {\n  switch (axis.type) {\n    case \"datetime\":\n      return \"date\";\n    case \"logarithmic\":\n      return \"log\";\n    default:\n      return axis.type;\n  }\n}\n\nfunction prepareXAxis(axisOptions: any, additionalOptions: any) {\n  const axis = {\n    title: getAxisTitle(axisOptions),\n    type: getAxisScaleType(axisOptions),\n    automargin: true,\n    tickformat: axisOptions.tickFormat ?? null,\n  };\n\n  if (additionalOptions.sortX && axis.type === \"category\") {\n    if (additionalOptions.reverseX) {\n      // @ts-expect-error ts-migrate(2339) FIXME: Property 'categoryorder' does not exist on type '{... Remove this comment to see the full error message\n      axis.categoryorder = \"category descending\";\n    } else {\n      // @ts-expect-error ts-migrate(2339) FIXME: Property 'categoryorder' does not exist on type '{... Remove this comment to see the full error message\n      axis.categoryorder = \"category ascending\";\n    }\n  }\n\n  if (!isUndefined(axisOptions.labels)) {\n    // @ts-expect-error ts-migrate(2339) FIXME: Property 'showticklabels' does not exist on type '... Remove this comment to see the full error message\n    axis.showticklabels = axisOptions.labels.enabled;\n  }\n\n  return axis;\n}\n\nfunction prepareYAxis(axisOptions: any) {\n  return {\n    title: getAxisTitle(axisOptions),\n    type: getAxisScaleType(axisOptions),\n    automargin: true,\n    autorange: true,\n    range: null,\n    tickformat: axisOptions.tickFormat ?? null,\n  };\n}\n\nfunction preparePieLayout(layout: any, options: any, data: any) {\n  const hasName = /{{\\s*@@name\\s*}}/.test(options.textFormat);\n\n  const { cellsInRow, cellWidth, cellHeight, xPadding } = getPieDimensions(data);\n\n  if (hasName) {\n    layout.annotations = [];\n  } else {\n    layout.annotations = filter(\n      map(data, (series, index) => {\n        // @ts-expect-error ts-migrate(2362) FIXME: The left-hand side of an arithmetic operation must... Remove this comment to see the full error message\n        const xPosition = (index % cellsInRow) * cellWidth;\n        // @ts-expect-error ts-migrate(2362) FIXME: The left-hand side of an arithmetic operation must... Remove this comment to see the full error message\n        const yPosition = Math.floor(index / cellsInRow) * cellHeight;\n        return {\n          x: xPosition + (cellWidth - xPadding) / 2,\n          y: yPosition + cellHeight - 0.015,\n          xanchor: \"center\",\n          yanchor: \"top\",\n          text: series.name,\n          showarrow: false,\n        };\n      })\n    );\n  }\n\n  return layout;\n}\n\nfunction prepareDefaultLayout(layout: any, options: any, data: any) {\n  const y2Series = data.filter((s: any) => s.yaxis === \"y2\");\n\n  layout.xaxis = prepareXAxis(options.xAxis, options);\n\n  layout.yaxis = prepareYAxis(options.yAxis[0]);\n  if (y2Series.length > 0) {\n    layout.yaxis2 = prepareYAxis(options.yAxis[1]);\n    layout.yaxis2.overlaying = \"y\";\n    layout.yaxis2.side = \"right\";\n  }\n\n  if (options.series.stacking) {\n    layout.barmode = \"relative\";\n  }\n\n  return layout;\n}\n\nfunction prepareBoxLayout(layout: any, options: any, data: any) {\n  layout = prepareDefaultLayout(layout, options, data);\n  layout.boxmode = \"group\";\n  layout.boxgroupgap = 0.5;\n  return layout;\n}\n\nexport default function prepareLayout(element: any, options: any, data: any) {\n  const layout: any = {\n    margin: { l: 10, r: 10, b: 5, t: 20, pad: 4 },\n    // plot size should be at least 5x5px\n    width: Math.max(5, Math.floor(element.offsetWidth)),\n    height: Math.max(5, Math.floor(element.offsetHeight)),\n    autosize: false,\n    showlegend: options.legend.enabled,\n    legend: {\n      traceorder: options.legend.traceorder,\n    },\n    hoverlabel: {\n      namelength: -1,\n    },\n  };\n\n  if ([\"line\", \"area\", \"column\"].includes(options.globalSeriesType)) {\n    layout.hovermode = options.swappedAxes ? 'y' : 'x';\n  }\n\n  switch (options.globalSeriesType) {\n    case \"pie\":\n      return preparePieLayout(layout, options, data);\n    case \"box\":\n      return prepareBoxLayout(layout, options, data);\n    default:\n      return prepareDefaultLayout(layout, options, data);\n  }\n}\n"],"mappings":"AAAA,SAASA,QAAQ,EAAEC,WAAW,EAAEC,MAAM,EAAEC,GAAG,QAAQ,QAAQ;AAC3D,SAASC,gBAAgB;AAEzB,SAASC,YAAYA,CAACC,IAAS,EAAE;EAC/B,OAAON,QAAQ,CAACM,IAAI,CAACC,KAAK,CAAC,GAAGD,IAAI,CAACC,KAAK,CAACC,IAAI,GAAG,IAAI;AACtD;AAEA,SAASC,gBAAgBA,CAACH,IAAS,EAAE;EACnC,QAAQA,IAAI,CAACI,IAAI;IACf,KAAK,UAAU;MACb,OAAO,MAAM;IACf,KAAK,aAAa;MAChB,OAAO,KAAK;IACd;MACE,OAAOJ,IAAI,CAACI,IAAI;EACpB;AACF;AAEA,SAASC,YAAYA,CAACC,WAAgB,EAAEC,iBAAsB,EAAE;EAAA,IAAAC,qBAAA;EAC9D,IAAMR,IAAI,GAAG;IACXC,KAAK,EAAEF,YAAY,CAACO,WAAW,CAAC;IAChCF,IAAI,EAAED,gBAAgB,CAACG,WAAW,CAAC;IACnCG,UAAU,EAAE,IAAI;IAChBC,UAAU,GAAAF,qBAAA,GAAEF,WAAW,CAACK,UAAU,cAAAH,qBAAA,cAAAA,qBAAA,GAAI;EACxC,CAAC;EAED,IAAID,iBAAiB,CAACK,KAAK,IAAIZ,IAAI,CAACI,IAAI,KAAK,UAAU,EAAE;IACvD,IAAIG,iBAAiB,CAACM,QAAQ,EAAE;MAC9B;MACAb,IAAI,CAACc,aAAa,GAAG,qBAAqB;IAC5C,CAAC,MAAM;MACL;MACAd,IAAI,CAACc,aAAa,GAAG,oBAAoB;IAC3C;EACF;EAEA,IAAI,CAACnB,WAAW,CAACW,WAAW,CAACS,MAAM,CAAC,EAAE;IACpC;IACAf,IAAI,CAACgB,cAAc,GAAGV,WAAW,CAACS,MAAM,CAACE,OAAO;EAClD;EAEA,OAAOjB,IAAI;AACb;AAEA,SAASkB,YAAYA,CAACZ,WAAgB,EAAE;EAAA,IAAAa,sBAAA;EACtC,OAAO;IACLlB,KAAK,EAAEF,YAAY,CAACO,WAAW,CAAC;IAChCF,IAAI,EAAED,gBAAgB,CAACG,WAAW,CAAC;IACnCG,UAAU,EAAE,IAAI;IAChBW,SAAS,EAAE,IAAI;IACfC,KAAK,EAAE,IAAI;IACXX,UAAU,GAAAS,sBAAA,GAAEb,WAAW,CAACK,UAAU,cAAAQ,sBAAA,cAAAA,sBAAA,GAAI;EACxC,CAAC;AACH;AAEA,SAASG,gBAAgBA,CAACC,MAAW,EAAEC,OAAY,EAAEC,IAAS,EAAE;EAC9D,IAAMC,OAAO,GAAG,kBAAkB,CAACC,IAAI,CAACH,OAAO,CAACI,UAAU,CAAC;EAE3D,IAAAC,iBAAA,GAAwD/B,gBAAgB,CAAC2B,IAAI,CAAC;IAAtEK,UAAU,GAAAD,iBAAA,CAAVC,UAAU;IAAEC,SAAS,GAAAF,iBAAA,CAATE,SAAS;IAAEC,UAAU,GAAAH,iBAAA,CAAVG,UAAU;IAAEC,QAAQ,GAAAJ,iBAAA,CAARI,QAAQ;EAEnD,IAAIP,OAAO,EAAE;IACXH,MAAM,CAACW,WAAW,GAAG,EAAE;EACzB,CAAC,MAAM;IACLX,MAAM,CAACW,WAAW,GAAGtC,MAAM,CACzBC,GAAG,CAAC4B,IAAI,EAAE,CAACU,MAAM,EAAEC,KAAK,KAAK;MAC3B;MACA,IAAMC,SAAS,GAAID,KAAK,GAAGN,UAAU,GAAIC,SAAS;MAClD;MACA,IAAMO,SAAS,GAAGC,IAAI,CAACC,KAAK,CAACJ,KAAK,GAAGN,UAAU,CAAC,GAAGE,UAAU;MAC7D,OAAO;QACLS,CAAC,EAAEJ,SAAS,GAAG,CAACN,SAAS,GAAGE,QAAQ,IAAI,CAAC;QACzCS,CAAC,EAAEJ,SAAS,GAAGN,UAAU,GAAG,KAAK;QACjCW,OAAO,EAAE,QAAQ;QACjBC,OAAO,EAAE,KAAK;QACd1C,IAAI,EAAEiC,MAAM,CAACU,IAAI;QACjBC,SAAS,EAAE;MACb,CAAC;IACH,CAAC,CACH,CAAC;EACH;EAEA,OAAOvB,MAAM;AACf;AAEA,SAASwB,oBAAoBA,CAACxB,MAAW,EAAEC,OAAY,EAAEC,IAAS,EAAE;EAClE,IAAMuB,QAAQ,GAAGvB,IAAI,CAAC7B,MAAM,CAAEqD,CAAM,IAAKA,CAAC,CAACC,KAAK,KAAK,IAAI,CAAC;EAE1D3B,MAAM,CAAC4B,KAAK,GAAG9C,YAAY,CAACmB,OAAO,CAAC4B,KAAK,EAAE5B,OAAO,CAAC;EAEnDD,MAAM,CAAC2B,KAAK,GAAGhC,YAAY,CAACM,OAAO,CAAC6B,KAAK,CAAC,CAAC,CAAC,CAAC;EAC7C,IAAIL,QAAQ,CAACM,MAAM,GAAG,CAAC,EAAE;IACvB/B,MAAM,CAACgC,MAAM,GAAGrC,YAAY,CAACM,OAAO,CAAC6B,KAAK,CAAC,CAAC,CAAC,CAAC;IAC9C9B,MAAM,CAACgC,MAAM,CAACC,UAAU,GAAG,GAAG;IAC9BjC,MAAM,CAACgC,MAAM,CAACE,IAAI,GAAG,OAAO;EAC9B;EAEA,IAAIjC,OAAO,CAACW,MAAM,CAACuB,QAAQ,EAAE;IAC3BnC,MAAM,CAACoC,OAAO,GAAG,UAAU;EAC7B;EAEA,OAAOpC,MAAM;AACf;AAEA,SAASqC,gBAAgBA,CAACrC,MAAW,EAAEC,OAAY,EAAEC,IAAS,EAAE;EAC9DF,MAAM,GAAGwB,oBAAoB,CAACxB,MAAM,EAAEC,OAAO,EAAEC,IAAI,CAAC;EACpDF,MAAM,CAACsC,OAAO,GAAG,OAAO;EACxBtC,MAAM,CAACuC,WAAW,GAAG,GAAG;EACxB,OAAOvC,MAAM;AACf;AAEA,eAAe,SAASwC,aAAaA,CAACC,OAAY,EAAExC,OAAY,EAAEC,IAAS,EAAE;EAC3E,IAAMF,MAAW,GAAG;IAClB0C,MAAM,EAAE;MAAEC,CAAC,EAAE,EAAE;MAAEC,CAAC,EAAE,EAAE;MAAEC,CAAC,EAAE,CAAC;MAAEC,CAAC,EAAE,EAAE;MAAEC,GAAG,EAAE;IAAE,CAAC;IAC7C;IACAC,KAAK,EAAEhC,IAAI,CAACiC,GAAG,CAAC,CAAC,EAAEjC,IAAI,CAACC,KAAK,CAACwB,OAAO,CAACS,WAAW,CAAC,CAAC;IACnDC,MAAM,EAAEnC,IAAI,CAACiC,GAAG,CAAC,CAAC,EAAEjC,IAAI,CAACC,KAAK,CAACwB,OAAO,CAACW,YAAY,CAAC,CAAC;IACrDC,QAAQ,EAAE,KAAK;IACfC,UAAU,EAAErD,OAAO,CAACsD,MAAM,CAAC7D,OAAO;IAClC6D,MAAM,EAAE;MACNC,UAAU,EAAEvD,OAAO,CAACsD,MAAM,CAACC;IAC7B,CAAC;IACDC,UAAU,EAAE;MACVC,UAAU,EAAE,CAAC;IACf;EACF,CAAC;EAED,IAAI,CAAC,MAAM,EAAE,MAAM,EAAE,QAAQ,CAAC,CAACC,QAAQ,CAAC1D,OAAO,CAAC2D,gBAAgB,CAAC,EAAE;IACjE5D,MAAM,CAAC6D,SAAS,GAAG5D,OAAO,CAAC6D,WAAW,GAAG,GAAG,GAAG,GAAG;EACpD;EAEA,QAAQ7D,OAAO,CAAC2D,gBAAgB;IAC9B,KAAK,KAAK;MACR,OAAO7D,gBAAgB,CAACC,MAAM,EAAEC,OAAO,EAAEC,IAAI,CAAC;IAChD,KAAK,KAAK;MACR,OAAOmC,gBAAgB,CAACrC,MAAM,EAAEC,OAAO,EAAEC,IAAI,CAAC;IAChD;MACE,OAAOsB,oBAAoB,CAACxB,MAAM,EAAEC,OAAO,EAAEC,IAAI,CAAC;EACtD;AACF"}