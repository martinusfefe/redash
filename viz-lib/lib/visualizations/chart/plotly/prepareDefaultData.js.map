{"version":3,"file":"prepareDefaultData.js","names":["isNil","extend","each","includes","map","sortBy","toString","chooseTextColorForBackground","AllColorPaletteArrays","ColorPaletteTypes","cleanNumber","normalizeValue","getSeriesAxis","getSeriesColor","options","seriesOptions","seriesIndex","numSeries","palette","color_scheme","length","step","index","Math","round","color","getHoverInfoPattern","hasX","test","textFormat","hasName","result","prepareBarSeries","series","additionalOptions","type","offsetgroup","showDataLabels","textposition","prepareLineSeries","mode","prepareAreaSeries","fill","stacking","prepareScatterSeries","prepareBubbleSeries","_ref","seriesColor","data","coefficient","marker","size","i","sizemode","prepareBoxSeries","_ref2","boxpoints","hoverinfo","showpoints","jitter","pointpos","prepareSeries","_additionalOptions","hoverInfoPattern","globalSeriesType","yAxis","name","seriesYAxis","sortX","d","x","xAxis","cleanYValue","v","missingValuesAsZero","sourceData","Map","xValues","yValues","yErrorValues","row","y","yError","set","yPercent","push","plotlySeries","visible","error_y","array","insidetextfont","yaxis","_objectSpread","prepareDefaultData","seriesList"],"sources":["../../../../src/visualizations/chart/plotly/prepareDefaultData.ts"],"sourcesContent":["import { isNil, extend, each, includes, map, sortBy, toString } from \"lodash\";\nimport chooseTextColorForBackground from \"@/lib/chooseTextColorForBackground\";\nimport { AllColorPaletteArrays, ColorPaletteTypes } from \"@/visualizations/ColorPalette\";\nimport { cleanNumber, normalizeValue, getSeriesAxis } from \"./utils\";\n\nfunction getSeriesColor(options: any, seriesOptions: any, seriesIndex: any, numSeries: any) {\n  // @ts-expect-error ts-migrate(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\n  let palette = AllColorPaletteArrays[options.color_scheme];\n  // @ts-expect-error ts-migrate(7053) FIXME: Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\n  if (ColorPaletteTypes[options.color_scheme] === 'continuous' && palette.length > numSeries) {\n    const step = (palette.length - 1) / (numSeries - 1 || 1);\n    const index = Math.round(step * seriesIndex);\n    return seriesOptions.color || palette[index % palette.length];\n  }\n  return seriesOptions.color || palette[seriesIndex % palette.length];\n}\n\nfunction getHoverInfoPattern(options: any) {\n  const hasX = /{{\\s*@@x\\s*}}/.test(options.textFormat);\n  const hasName = /{{\\s*@@name\\s*}}/.test(options.textFormat);\n  let result = \"text\";\n  if (!hasX) result += \"+x\";\n  if (!hasName) result += \"+name\";\n  return result;\n}\n\nfunction prepareBarSeries(series: any, options: any, additionalOptions: any) {\n  series.type = \"bar\";\n  series.offsetgroup = toString(additionalOptions.index);\n  if (options.showDataLabels) {\n    series.textposition = \"inside\";\n  } else {\n    series.textposition = \"none\";\n  }\n  return series;\n}\n\nfunction prepareLineSeries(series: any, options: any) {\n  series.mode = \"lines\" + (options.showDataLabels ? \"+text\" : \"\");\n  return series;\n}\n\nfunction prepareAreaSeries(series: any, options: any) {\n  series.mode = \"lines\" + (options.showDataLabels ? \"+text\" : \"\");\n  series.fill = options.series.stacking ? \"tonexty\" : \"tozeroy\";\n  return series;\n}\n\nfunction prepareScatterSeries(series: any, options: any) {\n  series.type = \"scatter\";\n  series.mode = \"markers\" + (options.showDataLabels ? \"+text\" : \"\");\n  return series;\n}\n\nfunction prepareBubbleSeries(series: any, options: any, { seriesColor, data }: any) {\n  const coefficient = options.coefficient || 1;\n  series.mode = \"markers\";\n  series.marker = {\n    color: seriesColor,\n    size: map(data, i => i.size * coefficient),\n    sizemode: options.sizemode || \"diameter\",\n  };\n  return series;\n}\n\nfunction prepareBoxSeries(series: any, options: any, { seriesColor }: any) {\n  series.type = \"box\";\n  series.mode = \"markers\";\n\n  series.boxpoints = \"outliers\";\n  series.hoverinfo = false;\n  series.marker = {\n    color: seriesColor,\n    size: 3,\n  };\n  if (options.showpoints) {\n    series.boxpoints = \"all\";\n    series.jitter = 0.3;\n    series.pointpos = -1.8;\n  }\n  return series;\n}\n\nfunction prepareSeries(series: any, options: any, numSeries: any, additionalOptions: any) {\n  const { hoverInfoPattern, index } = additionalOptions;\n\n  const seriesOptions = extend({ type: options.globalSeriesType, yAxis: 0 }, options.seriesOptions[series.name]);\n  const seriesColor = getSeriesColor(options, seriesOptions, index, numSeries);\n  const seriesYAxis = getSeriesAxis(series, options);\n\n  // Sort by x - `Map` preserves order of items\n  const data = options.sortX ? sortBy(series.data, d => normalizeValue(d.x, options.xAxis.type)) : series.data;\n\n  // For bubble/scatter charts `y` may be any (similar to `x`) - numeric is only bubble size;\n  // for other types `y` is always number\n  const cleanYValue = includes([\"bubble\", \"scatter\"], seriesOptions.type)\n    ? normalizeValue\n    : (v: any) => {\n        v = cleanNumber(v);\n        return options.missingValuesAsZero && isNil(v) ? 0.0 : v;\n      };\n\n  const sourceData = new Map();\n  const xValues: any[] = [];\n  const yValues: any[] = [];\n\n  const yErrorValues: any = [];\n  each(data, row => {\n    const x = normalizeValue(row.x, options.xAxis.type); // number/datetime/category\n    const y = cleanYValue(row.y, seriesYAxis === \"y2\" ? options.yAxis[1].type : options.yAxis[0].type); // depends on series type!\n    const yError = cleanNumber(row.yError); // always number\n    const size = cleanNumber(row.size); // always number\n\n    sourceData.set(x, {\n      x,\n      y,\n      yError,\n      size,\n      yPercent: null, // will be updated later\n      row,\n    });\n    xValues.push(x);\n    yValues.push(y);\n    yErrorValues.push(yError);\n  });\n\n  const plotlySeries = {\n    visible: true,\n    hoverinfo: hoverInfoPattern,\n    x: xValues,\n    y: yValues,\n    error_y: {\n      array: yErrorValues,\n      color: seriesColor,\n    },\n    name: seriesOptions.name || series.name,\n    marker: { color: seriesColor },\n    insidetextfont: {\n      color: chooseTextColorForBackground(seriesColor),\n    },\n    yaxis: seriesYAxis,\n    sourceData,\n  };\n\n  additionalOptions = { ...additionalOptions, seriesColor, data };\n\n  switch (seriesOptions.type) {\n    case \"column\":\n      return prepareBarSeries(plotlySeries, options, additionalOptions);\n    case \"line\":\n      // @ts-expect-error ts-migrate(2554) FIXME: Expected 2 arguments, but got 3.\n      return prepareLineSeries(plotlySeries, options, additionalOptions);\n    case \"area\":\n      // @ts-expect-error ts-migrate(2554) FIXME: Expected 2 arguments, but got 3.\n      return prepareAreaSeries(plotlySeries, options, additionalOptions);\n    case \"scatter\":\n      // @ts-expect-error ts-migrate(2554) FIXME: Expected 2 arguments, but got 3.\n      return prepareScatterSeries(plotlySeries, options, additionalOptions);\n    case \"bubble\":\n      return prepareBubbleSeries(plotlySeries, options, additionalOptions);\n    case \"box\":\n      return prepareBoxSeries(plotlySeries, options, additionalOptions);\n    default:\n      return plotlySeries;\n  }\n}\n\nexport default function prepareDefaultData(seriesList: any, options: any) {\n  const additionalOptions = {\n    hoverInfoPattern: getHoverInfoPattern(options),\n  };\n  const numSeries = seriesList.length\n\n  return map(seriesList, (series, index) => prepareSeries(series, options, numSeries, { ...additionalOptions, index }));\n}\n"],"mappings":"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"}