{"version":3,"file":"updateChartSize.js","names":["_lodash","require","_slicedToArray","arr","i","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","TypeError","o","minLen","_arrayLikeToArray","n","Object","prototype","toString","call","slice","constructor","name","Array","from","test","len","length","arr2","_i","Symbol","iterator","_s","_e","_x","_r","_arr","_n","_d","next","done","push","value","err","return","isArray","fixLegendContainer","plotlyElement","legend","querySelector","node","parentNode","tagName","toLowerCase","style","overflow","placeLegendNextToPlot","layout","transformName","find","prop","extend","orientation","y","x","xanchor","yanchor","pick","placeLegendBelowPlot","layoutHeight","height","bounds","getBoundingClientRect","Math","floor","max","bottom","top","placeLegendAuto","width","updateChartSize","options","offsetWidth","offsetHeight","_ref","__previousSize","_ref2","previousWidth","previousHeight","enabled","placement"],"sources":["../../../../src/visualizations/chart/plotly/updateChartSize.ts"],"sourcesContent":["import { find, pick, extend } from \"lodash\";\n\nfunction fixLegendContainer(plotlyElement: any) {\n  const legend = plotlyElement.querySelector(\".legend\");\n  if (legend) {\n    let node = legend.parentNode;\n    while (node) {\n      if (node.tagName.toLowerCase() === \"svg\") {\n        node.style.overflow = \"visible\";\n        break;\n      }\n      node = node.parentNode;\n    }\n  }\n}\n\nfunction placeLegendNextToPlot(plotlyElement: any, layout: any) {\n  const transformName = find(\n    [\"transform\", \"WebkitTransform\", \"MozTransform\", \"MsTransform\", \"OTransform\"],\n    prop => prop in plotlyElement.style\n  );\n\n  layout.legend = extend({}, layout.legend, {\n    orientation: \"v\",\n    // vertical legend will be rendered properly, so just place it to the right\n    // side of plot\n    y: 1,\n    x: 1,\n    xanchor: \"left\",\n    yanchor: \"top\",\n  });\n\n  const legend = plotlyElement.querySelector(\".legend\");\n  if (legend) {\n    // @ts-expect-error ts-migrate(2538) FIXME: Type 'undefined' cannot be used as an index type.\n    legend.style[transformName] = null;\n  }\n\n  return [pick(layout, [\"width\", \"height\", \"legend\"]), null]; // no further updates\n}\n\nfunction placeLegendBelowPlot(plotlyElement: any, layout: any) {\n  const transformName = find(\n    [\"transform\", \"WebkitTransform\", \"MozTransform\", \"MsTransform\", \"OTransform\"],\n    prop => prop in plotlyElement.style\n  );\n\n  // Save current `layout.height` value because `Plotly.relayout().then(...)` handler may be called multiple\n  // times within single update, and since the handler mutates `layout` object - it may lead to bugs\n  const layoutHeight = layout.height;\n\n  // change legend orientation to horizontal; plotly has a bug with this\n  // legend alignment - it does not preserve enough space under the plot;\n  // so we'll hack this: update plot (it will re-render legend), compute\n  // legend height, reduce plot size by legend height (but not less than\n  // half of plot container's height - legend will have max height equal to\n  // plot height), re-render plot again and offset legend to the space under\n  // the plot.\n  // Related issue: https://github.com/plotly/plotly.js/issues/1199\n  layout.legend = extend({}, layout.legend, {\n    orientation: \"h\",\n    // locate legend inside of plot area - otherwise plotly will preserve\n    // some amount of space under the plot; also this will limit legend height\n    // to plot's height\n    y: 0,\n    x: 0,\n    xanchor: \"left\",\n    yanchor: \"bottom\",\n  });\n\n  // set `overflow: visible` to svg containing legend because later we will\n  // position legend outside of it\n  fixLegendContainer(plotlyElement);\n\n  return [\n    pick(layout, [\"width\", \"height\", \"legend\"]),\n    () => {\n      const legend = plotlyElement.querySelector(\".legend\"); // eslint-disable-line no-shadow\n      if (legend) {\n        // compute real height of legend - items may be split into few columnns,\n        // also scrollbar may be shown\n        const bounds = legend.getBoundingClientRect();\n\n        // here we have two values:\n        // 1. height of plot container excluding height of legend items;\n        //    it may be any value between 0 and plot container's height;\n        // 2. half of plot containers height. Legend cannot be larger than\n        //    plot; if legend is too large, plotly will reduce it's height and\n        //    show a scrollbar; in this case, height of plot === height of legend,\n        //    so we can split container's height half by half between them.\n        layout.height = Math.floor(Math.max(layoutHeight / 2, layoutHeight - (bounds.bottom - bounds.top)));\n        // offset the legend\n        // @ts-expect-error ts-migrate(2538) FIXME: Type 'undefined' cannot be used as an index type.\n        legend.style[transformName] = \"translate(0, \" + layout.height + \"px)\";\n        return [pick(layout, [\"height\"]), null]; // no further updates\n      }\n    },\n  ];\n}\n\nfunction placeLegendAuto(plotlyElement: any, layout: any) {\n  if (layout.width <= 600) {\n    return placeLegendBelowPlot(plotlyElement, layout);\n  } else {\n    return placeLegendNextToPlot(plotlyElement, layout);\n  }\n}\n\nexport default function updateChartSize(plotlyElement: any, layout: any, options: any) {\n  // update layout size to plot container\n  // plot size should be at least 5x5px\n  layout.width = Math.max(5, Math.floor(plotlyElement.offsetWidth));\n  layout.height = Math.max(5, Math.floor(plotlyElement.offsetHeight));\n\n  const [previousWidth, previousHeight] = plotlyElement.__previousSize || [];\n\n  if (layout.width === previousWidth && layout.height === previousHeight) {\n    return;\n  }\n\n  plotlyElement.__previousSize = [layout.width, layout.height];\n\n  if (options.legend.enabled) {\n    switch (options.legend.placement) {\n      case \"auto\":\n        return placeLegendAuto(plotlyElement, layout);\n        break;\n      case \"below\":\n        return placeLegendBelowPlot(plotlyElement, layout);\n        break;\n      // no default\n    }\n  } else {\n    return [pick(layout, [\"width\", \"height\"]), null]; // no further updates\n  }\n}\n"],"mappings":"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"}